[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Corentin Ducloux",
    "section": "",
    "text": "Data Engineer, jeune dipl√¥m√©, et adepte de Python,  et SQL, je suis passionn√© par l‚Äôensemble des sujets touchant de pr√®s ou de loin √† la donn√©e, et porte √©galement un int√©r√™t sp√©cifique pour l‚Äôing√©nierie logicielle et l‚Äôint√©gration continue.\nT√©l√©charger mon CV"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "blog",
    "section": "",
    "text": "About this site\ndes tests\n\n\n\n\n\n\nUn titre\n\n\n\nUn callout"
  },
  {
    "objectID": "index.html#welcome",
    "href": "index.html#welcome",
    "title": "A propos de moi",
    "section": "",
    "text": "This is a Quarto website.\n \n  \n   \n  \n    \n     twitter\n  \n  \n    \n     Github\n  \n\n\n\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "index.html#section",
    "href": "index.html#section",
    "title": "A propos de moi",
    "section": "",
    "text": "To learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "index.html#hey",
    "href": "index.html#hey",
    "title": "A propos de moi",
    "section": "",
    "text": "To learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "index.html#exp√©rience-professionnelle",
    "href": "index.html#exp√©rience-professionnelle",
    "title": "Corentin Ducloux",
    "section": " Exp√©rience professionnelle",
    "text": "Exp√©rience professionnelle\n\nData Engineer (Avril ‚Äì Septembre 2024) | EDF\nData Analyst & BI Dev. (Avril ‚Äì Ao√ªt 2023) | Safran Seats\nData Analyst (Juin ‚Äì Ao√ªt 2022) | Cr√©dit Agricole Titres"
  },
  {
    "objectID": "index.html#bonjour-et-bienvenue-sur-mon-site-web",
    "href": "index.html#bonjour-et-bienvenue-sur-mon-site-web",
    "title": "Corentin Ducloux",
    "section": "",
    "text": "Data Engineer, jeune dipl√¥m√©, et adepte de Python,  et SQL, je suis passionn√© par l‚Äôensemble des sujets touchant de pr√®s ou de loin √† la donn√©e, et porte √©galement un int√©r√™t sp√©cifique pour l‚Äôing√©nierie logicielle et l‚Äôint√©gration continue."
  },
  {
    "objectID": "index.html#education",
    "href": "index.html#education",
    "title": "Corentin Ducloux",
    "section": " Education",
    "text": "Education\n\nMaster Data Science / Business Econ. (2022 ‚Äì 2024)  Universit√© de Tours\nLicence d‚Äô√©conomie d‚Äôentreprise (2018 ‚Äì 2022)  Universit√© de Tours\nBaccalaur√©at S, section Edifice (2015 ‚Äì 2018)  Lyc√©e Pothier, Orl√©ans"
  },
  {
    "objectID": "index.html#this-section-bonjour-et-bienvenue-sur-mon-site-web",
    "href": "index.html#this-section-bonjour-et-bienvenue-sur-mon-site-web",
    "title": "Corentin Ducloux",
    "section": "",
    "text": "Data Engineer, jeune dipl√¥m√©, et adepte de Python,  et SQL, je suis passionn√© par l‚Äôensemble des sujets touchant de pr√®s ou de loin √† la donn√©e, et porte √©galement un int√©r√™t sp√©cifique pour l‚Äôing√©nierie logicielle et l‚Äôint√©gration continue."
  },
  {
    "objectID": "index.html#bonjour-bienvenue-sur-mon-site-web",
    "href": "index.html#bonjour-bienvenue-sur-mon-site-web",
    "title": "Corentin Ducloux",
    "section": "",
    "text": "Data Engineer, jeune dipl√¥m√©, et adepte de Python,  et SQL, je suis passionn√© par l‚Äôensemble des sujets touchant de pr√®s ou de loin √† la donn√©e, et porte √©galement un int√©r√™t sp√©cifique pour l‚Äôing√©nierie logicielle et l‚Äôint√©gration continue."
  },
  {
    "objectID": "index.html#bonjour-et-bienvenue",
    "href": "index.html#bonjour-et-bienvenue",
    "title": "Corentin Ducloux",
    "section": "",
    "text": "Data Engineer, jeune dipl√¥m√©, et adepte de Python,  et SQL, je suis passionn√© par l‚Äôensemble des sujets touchant de pr√®s ou de loin √† la donn√©e, et porte √©galement un int√©r√™t sp√©cifique pour l‚Äôing√©nierie logicielle et l‚Äôint√©gration continue.\nT√©l√©charger mon CV"
  },
  {
    "objectID": "sections/blog.html",
    "href": "sections/blog.html",
    "title": "Data Tips",
    "section": "",
    "text": "üöß Comming Soon ! Section en construction.\n\n\n\n\n\n\n\n   \n     \n     \n       Trier par\n       Ordre par d√©faut\n         \n          Titre\n        \n         \n          Auteur¬∑rice\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\nTitre\n\n\nAuteur¬∑rice\n\n\n\n\n\n\nLes tableaux {gt}\n\n\nCorentin DUCLOUX\n\n\n\n\n\nAucun article correspondant"
  },
  {
    "objectID": "sections/projects.html",
    "href": "sections/projects.html",
    "title": "Projets",
    "section": "",
    "text": "üöó Optimisation Lin√©aire\n\n\n\nPython\n\n\nJupyter\n\n\n\nAnalyse de la production de voitures dans le cadre du cours d‚ÄôOptimisation sous Python de Master 1.\n\n\n\nCorentin DUCLOUX\n\n\n11 d√©c. 2023\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ShinyBricks\n\n\n\nR\n\n\nShiny\n\n\nAPI\n\n\n\nShinyBricks est une plateforme d‚Äôanalyse LEGO construite sur .\n\n\n\nCorentin DUCLOUX et Hassan TILKI\n\n\n26 mars 2024\n\n\n\n\n\n\n\n\n\n\n\n\n‚ö° Moyens de production\n\n\n\nPython\n\n\nOpen Data\n\n\n\nShinyBricks est une plateforme d‚Äôanalyse LEGO construite sur .\n\n\n\nCorentin DUCLOUX\n\n\n9 mai 2024\n\n\n\n\n\n\n\n\nAucun article correspondant"
  },
  {
    "objectID": "sections/projects/presentation.html",
    "href": "sections/projects/presentation.html",
    "title": "üíª Streamlit",
    "section": "",
    "text": "Un framework python r√©cent, lanc√© en 2019.\n\nEt avant Streamlit, qu‚Äôest ce qu‚Äôil y avait ?\n\nFlask \\(\\Rightarrow\\) Prise en main tr√®s complexe, plus adapt√©e pour les Software Engineers.\nPlotly Dash \\(\\Rightarrow\\) Prise en main plus simple que Flask, concept assez similaire √† Shiny avec s√©paration des composants UI et server.\n\n\nCorentin\n\nFlask \\(\\Rightarrow\\) Super Framework pour faire une appli web scalable mais si vous venez d‚Äôun background Data c‚Äôest vraiment tr√®s tr√®s gal√®re, il faut savoir ce qu‚Äôon fait.\nPlotly Dash \\(\\Rightarrow\\) Configuration des inputs, outputs, callbacks."
  },
  {
    "objectID": "sections/projects/presentation.html#pr√©sentation",
    "href": "sections/projects/presentation.html#pr√©sentation",
    "title": "üíª Streamlit",
    "section": "Pr√©sentation",
    "text": "Pr√©sentation\n\nUn framework python r√©cent, lanc√© en 2019.\n\nEt avant Streamlit, qu‚Äôest ce qu‚Äôil y avait ?\n\nFlask \\(\\Rightarrow\\) Prise en main tr√®s complexe, plus adapt√©e pour les Software Engineers.\nPlotly Dash \\(\\Rightarrow\\) Prise en main plus simple que Flask, concept assez similaire √† Shiny avec s√©paration des composants UI et server.\n\n\nCorentin\n\nFlask \\(\\Rightarrow\\) Super Framework pour faire une appli web scalable mais si vous venez d‚Äôun background Data c‚Äôest vraiment tr√®s tr√®s gal√®re, il faut savoir ce qu‚Äôon fait.\nPlotly Dash \\(\\Rightarrow\\) Configuration des inputs, outputs, callbacks."
  },
  {
    "objectID": "sections/projects/presentation.html#pourquoi-streamlit",
    "href": "sections/projects/presentation.html#pourquoi-streamlit",
    "title": "üíª Streamlit",
    "section": "Pourquoi Streamlit ?",
    "text": "Pourquoi Streamlit ?\nObjectif : Simplifier au maximum le d√©veloppement d‚Äôapplications Data.\n\n\nUser Interface ?\n\n\nInputs ?\n\n\nOutputs ?\n\n\nInteractions ?\n\n\nCallbacks ?\n\n\n\n\nEt pourquoi pas juste un script  ?\n\n\n\nCorentin\nA dire apr√®s l‚Äôobjectif : \nA l‚Äô√©poque un Data Scientist il faisait son petit Boosting en utilisant sklearn, il faisait une cross-validation, il regardait ses m√©triques et puis si c‚Äô√©tait bien il passait √† un autre projet.\nEt puis‚Ä¶c‚Äôest tout.\nEn bref il restait souvent dans son notebook, le mod√®le √©tait assez peu exploitable, et surtout, il √©tait interpr√©table uniquement par les √©quipes Data qui l‚Äôavaient fait. Et les Data Scientists ils avaient pas particuli√®rement envie de s‚Äôemb√™ter √† apprendre Dash ou m√™me Flask. Niveau communication des r√©sultats on a vu mieux.\nEt c‚Äôest l√† que Streamlit arrive avec une id√©e toute simple : au lieu de s√©parer tous les composants logiciels de l‚Äôinterface utilisateur, on fait juste un script."
  },
  {
    "objectID": "sections/projects/presentation.html#installation",
    "href": "sections/projects/presentation.html#installation",
    "title": "üíª Streamlit",
    "section": "Installation",
    "text": "Installation\n\n\n\n\n\n\nOn passe √† l‚Äôinstallation ?\n\n\n\n\nLancement d‚Äôun terminal : \nEt ensuite on installe via pip avec la commande\n\n\npython -m pip install streamlit\n\n\n\n\nAybuk√©\nEst-ce que tt le monde a r√©ussi √† installer du coup ?"
  },
  {
    "objectID": "sections/projects/presentation.html#prise-en-main",
    "href": "sections/projects/presentation.html#prise-en-main",
    "title": "üíª Streamlit",
    "section": "Prise en main",
    "text": "Prise en main\n\\(\\Rightarrow\\) Lan√ßons la d√©mo pour voir de quoi Streamlit est capable.\n\n\n\n\n\n\nüëã Hello Streamlit\n\n\npython -m streamlit hello\n\n\n\n\nAybuk√©\nVous pouvez regarder en d√©tail la d√©mo mais on va pas vraiment se concentrer dessus √©tant donn√© qu‚Äôon va construire une petite app nous-m√™me, on trouve que c‚Äôest quand m√™me plus int√©ressant."
  },
  {
    "objectID": "sections/projects/presentation.html#un-premier-jet",
    "href": "sections/projects/presentation.html#un-premier-jet",
    "title": "üíª Streamlit",
    "section": "Un premier jet !",
    "text": "Un premier jet !\n\n\napp.py\n\nimport streamlit as st\n\nst.set_page_config(page_icon=\"üêç\", page_title=\"PyApp\")\nst.title(\"üòé Ma premi√®re app super styl√©e\")\n\nst.markdown(\"Du *markdown* dans l'app ? **Rien de plus simple !**\")\nst.markdown(\"- Lien vers [`streamlit`](https://streamlit.io/)\")\nst.markdown(\n    \"\"\"\n    &gt; Des couleurs ? :orange[orange], :red[rouge], :green[vert]\n    \"\"\"\n)\n\nst.code(\n    \"\"\"\n    [[i for i in range(5)] for j in range(2)] \n    # Du code non-ex√©cutable\n    \"\"\",\n    language=\"python\"\n)\n\nst.divider()\n\n\nüöÄ et pour lancer l‚Äôappli :\n\npython -m streamlit run app.py\n\nAybuk√©"
  },
  {
    "objectID": "sections/projects/presentation.html#ce-quon-a-vu-jusquici",
    "href": "sections/projects/presentation.html#ce-quon-a-vu-jusquici",
    "title": "üíª Streamlit",
    "section": "Ce qu‚Äôon a vu jusqu‚Äôici",
    "text": "Ce qu‚Äôon a vu jusqu‚Äôici\n\nst.set_page_config() pour configurer le favicon et le titre de l‚Äôonglet dans le navigateur\nst.title() pour donner un titre √† notre app\nst.markdown() pour ajouter du texte avec diff√©rents types de formattage : italique, gras, ajout de liens, etc.\nst.code() pour inclure du code non-ex√©cutable provenant de diff√©rents langages : python, SQL, CSS, etc.\nst.divider() pour tracer une ligne horizontale\n\n\nAybuk√©"
  },
  {
    "objectID": "sections/projects/presentation.html#int√©gration-de-latex",
    "href": "sections/projects/presentation.html#int√©gration-de-latex",
    "title": "üíª Streamlit",
    "section": "Int√©gration de LaTeX",
    "text": "Int√©gration de LaTeX\nIdentit√© D‚ÄôEuler\n\\[\ne^{i \\pi} + 1 = 0\n\\]\nAjoutons ces quelques lignes de code.\nst.header(\"Ajoutons du LaTeX\")\nst.subheader(\"Identit√© d'*Euler*\", divider=\"blue\")\nst.latex(\"e^{i \\pi} + 1 = 0\")\nst.caption(\n    \"\"\"\n    L'identit√© d'*Euler* est souvent cit√©e comme\n    un exemple de beaut√© math√©matique.\n    \"\"\"\n)\n\nCorentin\nCa c‚Äôest quelque chose qui va certainement plaire √† madame Scholler."
  },
  {
    "objectID": "sections/projects/presentation.html#pr√©sentation-de-widgets",
    "href": "sections/projects/presentation.html#pr√©sentation-de-widgets",
    "title": "üíª Streamlit",
    "section": "Pr√©sentation de widgets",
    "text": "Pr√©sentation de widgets\n\nTestons quelques widgets !\n\n\n\nst.selectbox()\nst.button()\n\n\nfruit = st.selectbox(\n    \"Fruit\",\n    (\"üçì Fraise\", \"üçä Orange\", \"ü•≠ Mangue\", \"üçå Banane\", \"üçè Pomme\"),\n    index = None,\n    placeholder = \"S√©lectionner un fruit\"\n)\n\nbouton = st.button(\"Voir les d√©tails du fruit s√©lectionn√©\")\n\nif bouton:\n    st.write(f\"T'as la dalle ! Tu veux manger une **{fruit}**\")\n\nGuillaume\nNotez qu‚Äôune fois que vous changez l‚Äôinput de la selectbox dans l‚Äôapplication, l‚Äôensemble du script est r√©-√©x√©cut√©, et donc, le bouton est re-cach√© par d√©faut.\nCe rerun total qui est la signature de streamlit peut faciliter le d√©veloppement de certaines applis mais peut parfois √™tre assez contraignant."
  },
  {
    "objectID": "sections/projects/presentation.html#options-de-layout",
    "href": "sections/projects/presentation.html#options-de-layout",
    "title": "üíª Streamlit",
    "section": "Options de layout",
    "text": "Options de layout\n\nst.columns() \\(\\Rightarrow\\) Colonnes\nst.container() \\(\\Rightarrow\\) Conteneur\nst.expander() \\(\\Rightarrow\\) Expandeur\nst.tabs() \\(\\Rightarrow\\) Tabs\nst.sidebar() \\(\\Rightarrow\\) Sidebar\nst.popover() \\(\\Rightarrow\\) Popover\n\n\nHassan\nDe nombreuses options de layout sont disponibles pour modifier l‚Äôapplication.\nOn peut ajouter des colonnes, cr√©er des boites flexbox avec les containers, des tabs, une sidebar, etc."
  },
  {
    "objectID": "sections/projects/presentation.html#colonnes",
    "href": "sections/projects/presentation.html#colonnes",
    "title": "üíª Streamlit",
    "section": "Colonnes",
    "text": "Colonnes\ncolonne_1, colonne_2 = st.columns(2)\nExplication visuelle par Donald J. Trump\n\n\nHassan\nLa je vais d‚Äôabord vous pr√©senter la cr√©ation de colonnes avec le futur pr√©sident des Etats-Unis.\nIl y a plusieurs moyens de g√©rer la taille des colonnes, par d√©faut si on ne met qu‚Äôun chiffre qui indique le nombre de colonnes √ßa va diviser la page en 2,3,4, etc.\nMais on peut aussi passer une liste avec des floats du type [0.1, 0.4, 0.4, 0.1]"
  },
  {
    "objectID": "sections/projects/presentation.html#sidebar",
    "href": "sections/projects/presentation.html#sidebar",
    "title": "üíª Streamlit",
    "section": "Sidebar",
    "text": "Sidebar\n\nOn va changer notre interface utilisateur pour ajouter une Sidebar et regrouper nos widgets.\n\nwith st.sidebar:\n    prenom = st.text_input(\"ü§† Ecris ton pr√©nom *cow-boy* !\")\n    reussite = st.checkbox(\"Tu penses avoir ton ann√©e ?\")\n    note_pf = st.number_input(\n        \"Ta note en Concurrence et Innovation\",\n        min_value=0,\n        max_value=5,\n        step=1\n    )\n    epanouissement = st.select_slider(\n        \"Ton √©panouissement en master\",\n        range(11)\n    )\n\nAybuk√©\nLa notation with permet de dire avec quel objet du layout on travaille. La, on voit qu‚Äôon travaille avec notre sidebar et qu‚Äôon lui ajoute des inputs."
  },
  {
    "objectID": "sections/projects/presentation.html#tabs",
    "href": "sections/projects/presentation.html#tabs",
    "title": "üíª Streamlit",
    "section": "Tabs",
    "text": "Tabs\n\nOn va ajouter quelques onglets (Tabs) √† notre application pour diversifier l‚Äôinterface.\n\ntab_1, tab_2, tab_3 = st.tabs(\n    [\"üîé Infos sur l'ann√©e\", \"üìÑ DataFrame\", \"üìä Graphiques\"]\n)\n\nif prenom:\n    with tab_1:\n        if reussite:\n            st.balloons()\n            st.write(f\"F√©licitations pour ton ann√©e *{prenom}* ! üéà\")\n        else:\n            st.snow()\n            st.write(\n                f\"**Aie Aie Aie**... ü•∂ va falloir taffer *{prenom}*\"\n            )\n\nGuillaume\nOn va en plus vous faire crouler sous les ballons et la neige maintenant."
  },
  {
    "objectID": "sections/projects/presentation.html#des-messages-de-statut",
    "href": "sections/projects/presentation.html#des-messages-de-statut",
    "title": "üíª Streamlit",
    "section": "Des messages de statut",
    "text": "Des messages de statut\n\n‚ÑπÔ∏è st.info()\n‚ùå st.error()\n\n‚ö†Ô∏è st.warning()\n‚úÖ st.success()\n\nwith st.sidebar:\n    with st.expander(\"On regarde quelques messages ?\"):\n        st.info(\n            f\"Ton √©panouissement en master : {epanouissement}/10\",\n            icon=\"üë®‚Äçüè´\"\n        )\n        st.error(\n            f\"Ta note en Concurrence et Innovation : {note_pf}\",\n            icon=\"üëÄ\"\n        )\n        st.warning(\"Ceci est un avertissement g√©n√©rique\", icon=\"‚ö†\")\n        st.success(\"Message de r√©ussite.\", icon=\"‚úÖ\")\n\nHassan\nSur Streamlit, il existe aussi des conteneurs color√©s sp√©ciaux qui sont adapt√©s pour l‚Äôaffichage d‚Äôerreurs, d‚Äôinfos, d‚Äôavertissements. On va les rergarder un petit peu ensemble."
  },
  {
    "objectID": "sections/projects/presentation.html#et-avec-des-vraies-donn√©es-i",
    "href": "sections/projects/presentation.html#et-avec-des-vraies-donn√©es-i",
    "title": "üíª Streamlit",
    "section": "Et avec des vraies donn√©es ? (I)",
    "text": "Et avec des vraies donn√©es ? (I)\n\nOn a vu tout un tas d‚Äô√©l√©ments d‚ÄôUI, mais on a pas vraiment interragi avec des donn√©es dignes de ce nom.\n\n\n\\(\\Rightarrow\\) Morale de l‚Äôhistoire : Installe polars\n\nCorentin\nQuand on pense manipulation de donn√©es en python, on pense pandas, mais il est temps de passer √† la vitesse sup√©rieure et d‚Äôavoir un truc vraiment rapide."
  },
  {
    "objectID": "sections/projects/presentation.html#et-avec-des-vraies-donn√©es-ii",
    "href": "sections/projects/presentation.html#et-avec-des-vraies-donn√©es-ii",
    "title": "üíª Streamlit",
    "section": "Et avec des vraies donn√©es ? (II)",
    "text": "Et avec des vraies donn√©es ? (II)\n\nExemple avec des donn√©es de cas de COVID-19 aux Etats-Unis entre 2020 et 2022 : + 2.5 millions de lignes !\n\nimport polars as pl\n\ndf_covid = pl.read_csv(\n    \"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\"\n)\n\n\n\n\n\n\nProbl√®mes\n\n\n\nL‚Äôimport met trois ans\nEn plus, chaque action dans l‚Äôappli relance l‚Äôimport‚Ä¶\n\n\n\n\n\nCorentin"
  },
  {
    "objectID": "sections/projects/presentation.html#on-est-pas-rendus",
    "href": "sections/projects/presentation.html#on-est-pas-rendus",
    "title": "üíª Streamlit",
    "section": "On est pas rendus‚Ä¶",
    "text": "On est pas rendus‚Ä¶\n\n\nCorentin"
  },
  {
    "objectID": "sections/projects/presentation.html#solution-i",
    "href": "sections/projects/presentation.html#solution-i",
    "title": "üíª Streamlit",
    "section": "Solution (I)",
    "text": "Solution (I)\n\nDeux d√©corateurs tr√®s utiles :\n@st.cache_data et @st.cache_resource\n\nCorentin\nPour le premier d√©corateur, imaginez que vous ayez un dataframe de 2,5 millions lignes, √ßa va devenir assez encombrant que chaque interaction relance enti√®rement l‚Äôappli, et donc l‚Äôimport des donn√©es peut se faire en une fois, et ensuite les donn√©es vont rester dans le cache du navigateur."
  },
  {
    "objectID": "sections/projects/presentation.html#solution-ii",
    "href": "sections/projects/presentation.html#solution-ii",
    "title": "üíª Streamlit",
    "section": "Solution (II)",
    "text": "Solution (II)\n@st.cache_data\ndef import_covid_usa(link: str) -&gt; pl.DataFrame:\n    \"\"\"Fonction d'import des donn√©es optimis√©e.\"\"\"\n    return pl.read_csv(link)\nüí° Et maintenant, observons la diff√©rence !\ndf_covid = import_covid_usa(\n    \"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\"\n)\n\n\n\n\n\n\nNote\n\n\nOn attend une seule fois pour l‚Äôimport des donn√©es, ce qui est beaucoup plus satisfaisant pour l‚Äôutilisateur.\n\nSolution la plus optimale ici : base de donn√©es\n\n\n\n\n\nCorentin"
  },
  {
    "objectID": "sections/projects/presentation.html#affichage-dun-tableau",
    "href": "sections/projects/presentation.html#affichage-dun-tableau",
    "title": "üíª Streamlit",
    "section": "Affichage d‚Äôun tableau",
    "text": "Affichage d‚Äôun tableau\n\nOn a maintenant envie d‚Äôafficher nos donn√©es sous forme de tableau.\n\nwith tab_2:\n    st.dataframe(\n        df_covid,\n        hide_index=True,\n        use_container_width=True,\n        column_config={\n            \"date\": st.column_config.DateColumn(\"üìÖ Date\", format=\"DD/MM/YYYY\")\n        },\n    )\n\\(\\Rightarrow\\) Grande flexibilit√© dans l‚Äôaffichage.\n\nHassan\nL‚Äôoption hide_index permet de cacher la colonne d‚Äôindice qui est associ√©e au dataframe.\nLa seconde option permet de forcer le tableau √† prendre la taille compl√®te du conteneur. La derni√®re option est probablement la plus int√©ressante parce qu‚Äôelle permet de passer un sch√©ma de configuration de colonnes pour les personnaliser."
  },
  {
    "objectID": "sections/projects/presentation.html#et-pour-les-graphiques",
    "href": "sections/projects/presentation.html#et-pour-les-graphiques",
    "title": "üíª Streamlit",
    "section": "üìä Et pour les graphiques ?",
    "text": "üìä Et pour les graphiques ?\n\nOn va chercher √† visualiser le nombre de morts par √©tat √† une certaine date (un peu macabre üò∑).\n\nwith tab_3:\n    st.subheader(\"Nombre de personnes mortes de COVID-19 *(No√´l 2020)*\")\n\n    deaths_by_state_christmas = (\n        df_covid.filter(pl.col(\"date\") == \"2020-12-25\")\n        .group_by(\"state\")\n        .agg(pl.col(\"deaths\").sum())\n    )\n\n    st.bar_chart(deaths_by_state_christmas, x=\"state\", y=\"deaths\")\nDe nombreuses options de visualisation √† la vol√©e :\n\nst.line_chart()\nst.scatter_chart()\nst.map()\netc.\n\n\nAybuk√©\nDans notre code ici, on retrouve un peu de polars mais rien de compliqu√© vous voyez que √ßa ressemble √† la syntaxe de SQL.\nPour plus de contr√¥le sur les visualisations on peut utiliser plotly, altair ou matplotlib avec d‚Äôautres commandes."
  },
  {
    "objectID": "sections/projects/presentation.html#deltagenerator",
    "href": "sections/projects/presentation.html#deltagenerator",
    "title": "üíª Streamlit",
    "section": "DeltaGenerator",
    "text": "DeltaGenerator\n\n\n\n\n\n\nMais comment tout √ßa marche ?\n\n\nAu coeur de tous ces composants permettant de cr√©er l‚Äôinterface utilisateur, il y a une classe : le DeltaGenerator.\n\nSyst√®me bas√© sur  protobuf, cr√©e par GOOGLE\n\n\n\n\n\nCorentin\nEt comme √©videmment les devs de chez Streamlit ils ont pas r√©invent√© la roue ils ont utilis√© un syst√®me de s√©rialisation et d√©s√©rialisation de donn√©es qui a √©t√© cr√©e √† la base par Google.\nLes messages Delta protobuf dans Streamlit en gros c‚Äôest donc des messages qui d√©crivent les modifications √† apporter √† l‚Äôinterface utilisateur de l‚Äôapplication. Ces messages contiennent des instructions sur la fa√ßon de mettre √† jour ou de modifier les √©l√©ments.\nPar exemple les messages d‚Äôalerte, la sidebar, ou m√™me les tabs, ce sont tous des composants DeltaGenerator qui sont des conteneurs, on peut le voir si on s‚Äôamuse √† utiliser F12 pour inspecter l‚Äôappli."
  },
  {
    "objectID": "sections/projects/presentation.html#pour-aller-loin",
    "href": "sections/projects/presentation.html#pour-aller-loin",
    "title": "üíª Streamlit",
    "section": "Pour aller + loin",
    "text": "Pour aller + loin\nSecrets management\ndef check_password():\n    \"\"\"Returns `True` if the user had the correct password.\"\"\"\n\n    def password_entered():\n        \"\"\"Checks whether a password entered by the user is correct.\"\"\"\n        if hmac.compare_digest(st.session_state[\"password\"], st.secrets[\"password\"]):\n            st.session_state[\"password_correct\"] = True\n            del st.session_state[\"password\"]  # Don't store the password.\n        else:\n            st.session_state[\"password_correct\"] = False\n\n    # Return True if the password is validated.\n    if st.session_state.get(\"password_correct\", False):\n        return True\n\n    # Show input for password.\n    st.text_input(\n        \"Mot de passe\",\n        type=\"password\",\n        on_change=password_entered,\n        key=\"password\",\n        placeholder=\"Veuillez ins√©rer le mot de passe pour acc√©der √† l'application.\",\n    )\n    if \"password_correct\" in st.session_state:\n        st.error(\"üòï Mot de passe incorrect\")\n    return False\n\n\nif not check_password():\n    st.stop()\n\nHassan"
  },
  {
    "objectID": "sections/projects/presentation.html#exemples-dappli-compl√®tes",
    "href": "sections/projects/presentation.html#exemples-dappli-compl√®tes",
    "title": "üíª Streamlit",
    "section": "Exemples d‚Äôappli compl√®tes",
    "text": "Exemples d‚Äôappli compl√®tes\n\nüç∑ Projet de Machine Learning du Coc's & du Guig's : Wine Scraping\nüöó Projet de Machine Learning de Buk & du H : EstimyCar\n\n\nAPI Reference : https://docs.streamlit.io/library/api-reference\n\nGuillaume"
  },
  {
    "objectID": "sections/projects/presentation.html#fin",
    "href": "sections/projects/presentation.html#fin",
    "title": "üíª Streamlit",
    "section": "FIN",
    "text": "FIN\n\n\nHassan\nStreamlit devient de plus en plus omnipr√©sent dans le domaine de la data et vous aurez peut-√™tre √† l‚Äôutiliser, et en tout cas nous on vous le conseille fortement, et surtout on esp√®re que √ßa vous a plu et que √ßa vous sera utile."
  },
  {
    "objectID": "sections/projects/presentation.html#un-dernier-meme-pour-la-route",
    "href": "sections/projects/presentation.html#un-dernier-meme-pour-la-route",
    "title": "üíª Streamlit",
    "section": "(Un dernier meme pour la route)",
    "text": "(Un dernier meme pour la route)\n\n\n\n\n\n\n\n\n\nPr√©sentation de Streamlit"
  },
  {
    "objectID": "sections/skills.html",
    "href": "sections/skills.html",
    "title": "Comp√©tences",
    "section": "",
    "text": "Vous souhaitez d√©couvrir mes comp√©tences plus en d√©tail ? C‚Äôest par ici !"
  },
  {
    "objectID": "sections/skills.html#python",
    "href": "sections/skills.html#python",
    "title": "Comp√©tences",
    "section": "",
    "text": "blabla"
  },
  {
    "objectID": "sections/skills.html#r",
    "href": "sections/skills.html#r",
    "title": "Comp√©tences",
    "section": "",
    "text": "blabla"
  },
  {
    "objectID": "sections/skills.html#python-1",
    "href": "sections/skills.html#python-1",
    "title": "Comp√©tences",
    "section": "",
    "text": "blabla"
  },
  {
    "objectID": "sections/skills.html#python-2",
    "href": "sections/skills.html#python-2",
    "title": "Comp√©tences",
    "section": "",
    "text": "blabla"
  },
  {
    "objectID": "sections/skills.html#footnotes",
    "href": "sections/skills.html#footnotes",
    "title": "Comp√©tences",
    "section": "Notes de bas de page",
    "text": "Notes de bas de page\n\n\n{golem} est une librairie particuli√®rement int√©ressante car elle permet de packager une application Shiny. Pour plus de d√©tails, je recommande de naviguer vers le projet ShinyBricks.‚Ü©Ô∏é\nLes hooks sont des scripts qui s‚Äôex√©cutent automatiquement √† des moments pr√©cis du workflow sur Git.‚Ü©Ô∏é\nJ‚Äôai par exemple cr√©√© ce site avec Quarto, tout en tirant profit de SASS et de CSS pour en am√©liorer le rendu.‚Ü©Ô∏é\nüöß Pas encore fait, mais tr√®s prometteur, notamment gr√¢ce au package quartodoc.‚Ü©Ô∏é"
  },
  {
    "objectID": "sections/skills.html#section",
    "href": "sections/skills.html#section",
    "title": "Comp√©tences",
    "section": "",
    "text": "Anglais\n\n\n\n\n\nScore au Listening and Reading TOEIC¬Æ : 920/990."
  },
  {
    "objectID": "sections/skills.html#autres",
    "href": "sections/skills.html#autres",
    "title": "Comp√©tences",
    "section": "Autres",
    "text": "Autres\n\n\n\n\n\n\n Anglais\n\n\n\n\n\nScore au Listening and Reading TOEIC¬Æ : 920/990."
  },
  {
    "objectID": "sections/presentations.html",
    "href": "sections/presentations.html",
    "title": "Pr√©sentations",
    "section": "",
    "text": "Shinybricks\n\n\nD√©couvrez des sets LEGO¬Æ brique par brique\n\n\n\nR\n\n\nShiny\n\n\n\nSlides de pr√©sentation de l‚Äôapplication LEGO ShinyBricks r√©alis√©e sur  dans le cadre du cours de Big Data de Master 2.\n\n\n\n\n\n26 mars 2024\n\n\nHassan TILKI et Corentin DUCLOUX\n\n\n\n\n\n\n\n\n\n\n\n\nüíª Streamlit\n\n\nBoostez le d√©veloppement de vos applis data !\n\n\n\nPython\n\n\nStreamlit\n\n\n\nPr√©sentation du package streamlit et de ses fonctionnalit√©s √† la promotion de Master 2 M√©cen.\n\n\n\n\n\n20 mars 2024\n\n\nCorentin DUCLOUX\n\n\n\n\n\n\n\n\n\n\n\n\nüç∑ Wine Scraping\n\n\nLe breuvage contre-attaque\n\n\n\nPython\n\n\nStreamlit\n\n\nDocker\n\n\nMachine Learning\n\n\n\nSlides de pr√©sentation de l‚Äôapplication Wine Scraping dans le cadre du cours de Machine Learning de Master 2.\n\n\n\n\n\n6 janv. 2024\n\n\nGuillaume DEVANT et Corentin DUCLOUX\n\n\n\n\n\n\nAucun article correspondant"
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#pr√©sentation",
    "href": "sections/presentations/streamlit_presentation.html#pr√©sentation",
    "title": "üíª Streamlit",
    "section": "",
    "text": "Un framework python r√©cent, lanc√© en 2019.\n\nEt avant Streamlit, qu‚Äôest ce qu‚Äôil y avait ?\n\nFlask \\(\\Rightarrow\\) Prise en main tr√®s complexe, plus adapt√©e pour les Software Engineers.\nPlotly Dash \\(\\Rightarrow\\) Prise en main plus simple que Flask, concept assez similaire √† Shiny avec s√©paration des composants UI et server.\n\n\nCorentin\n\nFlask \\(\\Rightarrow\\) Super Framework pour faire une appli web scalable mais si vous venez d‚Äôun background Data c‚Äôest vraiment tr√®s tr√®s gal√®re, il faut savoir ce qu‚Äôon fait.\nPlotly Dash \\(\\Rightarrow\\) Configuration des inputs, outputs, callbacks."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#pourquoi-streamlit",
    "href": "sections/presentations/streamlit_presentation.html#pourquoi-streamlit",
    "title": "üíª Streamlit",
    "section": "Pourquoi Streamlit ?",
    "text": "Pourquoi Streamlit ?\nObjectif : Simplifier au maximum le d√©veloppement d‚Äôapplications Data.\n\n\nUser Interface ?\n\n\nInputs ?\n\n\nOutputs ?\n\n\nInteractions ?\n\n\nCallbacks ?\n\n\n\n\nEt pourquoi pas juste un script  ?\n\n\n\nCorentin\nA dire apr√®s l‚Äôobjectif : \nA l‚Äô√©poque un Data Scientist il faisait son petit Boosting en utilisant sklearn, il faisait une cross-validation, il regardait ses m√©triques et puis si c‚Äô√©tait bien il passait √† un autre projet.\nEt puis‚Ä¶c‚Äôest tout.\nEn bref il restait souvent dans son notebook, le mod√®le √©tait assez peu exploitable, et surtout, il √©tait interpr√©table uniquement par les √©quipes Data qui l‚Äôavaient fait. Et les Data Scientists ils avaient pas particuli√®rement envie de s‚Äôemb√™ter √† apprendre Dash ou m√™me Flask. Niveau communication des r√©sultats on a vu mieux.\nEt c‚Äôest l√† que Streamlit arrive avec une id√©e toute simple : au lieu de s√©parer tous les composants logiciels de l‚Äôinterface utilisateur, on fait juste un script."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#installation",
    "href": "sections/presentations/streamlit_presentation.html#installation",
    "title": "üíª Streamlit",
    "section": "Installation",
    "text": "Installation\n\n\n\n\n\n\nOn passe √† l‚Äôinstallation ?\n\n\n\n\n\nLancement d‚Äôun terminal : \nEt ensuite on installe via pip avec la commande\n\n\npython -m pip install streamlit\n\n\n\nAybuk√©\nEst-ce que tt le monde a r√©ussi √† installer du coup ?"
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#prise-en-main",
    "href": "sections/presentations/streamlit_presentation.html#prise-en-main",
    "title": "üíª Streamlit",
    "section": "Prise en main",
    "text": "Prise en main\n\\(\\Rightarrow\\) Lan√ßons la d√©mo pour voir de quoi Streamlit est capable.\n\n\n\n\n\n\nüëã Hello Streamlit\n\n\n\npython -m streamlit hello\n\n\n\nAybuk√©\nVous pouvez regarder en d√©tail la d√©mo mais on va pas vraiment se concentrer dessus √©tant donn√© qu‚Äôon va construire une petite app nous-m√™me, on trouve que c‚Äôest quand m√™me plus int√©ressant."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#un-premier-jet",
    "href": "sections/presentations/streamlit_presentation.html#un-premier-jet",
    "title": "üíª Streamlit",
    "section": "Un premier jet !",
    "text": "Un premier jet !\n\n\napp.py\n\nimport streamlit as st\n\nst.set_page_config(page_icon=\"üêç\", page_title=\"PyApp\")\nst.title(\"üòé Ma premi√®re app super styl√©e\")\n\nst.markdown(\"Du *markdown* dans l'app ? **Rien de plus simple !**\")\nst.markdown(\"- Lien vers [`streamlit`](https://streamlit.io/)\")\nst.markdown(\n    \"\"\"\n    &gt; Des couleurs ? :orange[orange], :red[rouge], :green[vert]\n    \"\"\"\n)\n\nst.code(\n    \"\"\"\n    [[i for i in range(5)] for j in range(2)] \n    # Du code non-ex√©cutable\n    \"\"\",\n    language=\"python\"\n)\n\nst.divider()\n\n\nüöÄ et pour lancer l‚Äôappli :\n\npython -m streamlit run app.py\n\nAybuk√©"
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#ce-quon-a-vu-jusquici",
    "href": "sections/presentations/streamlit_presentation.html#ce-quon-a-vu-jusquici",
    "title": "üíª Streamlit",
    "section": "Ce qu‚Äôon a vu jusqu‚Äôici",
    "text": "Ce qu‚Äôon a vu jusqu‚Äôici\n\nst.set_page_config() pour configurer le favicon et le titre de l‚Äôonglet dans le navigateur\nst.title() pour donner un titre √† notre app\nst.markdown() pour ajouter du texte avec diff√©rents types de formattage : italique, gras, ajout de liens, etc.\nst.code() pour inclure du code non-ex√©cutable provenant de diff√©rents langages : python, SQL, CSS, etc.\nst.divider() pour tracer une ligne horizontale\n\n\nAybuk√©"
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#int√©gration-de-latex",
    "href": "sections/presentations/streamlit_presentation.html#int√©gration-de-latex",
    "title": "üíª Streamlit",
    "section": "Int√©gration de LaTeX",
    "text": "Int√©gration de LaTeX\nIdentit√© D‚ÄôEuler\n\\[\ne^{i \\pi} + 1 = 0\n\\]\nAjoutons ces quelques lignes de code.\nst.header(\"Ajoutons du LaTeX\")\nst.subheader(\"Identit√© d'*Euler*\", divider=\"blue\")\nst.latex(\"e^{i \\pi} + 1 = 0\")\nst.caption(\n    \"\"\"\n    L'identit√© d'*Euler* est souvent cit√©e comme\n    un exemple de beaut√© math√©matique.\n    \"\"\"\n)"
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#pr√©sentation-de-widgets",
    "href": "sections/presentations/streamlit_presentation.html#pr√©sentation-de-widgets",
    "title": "üíª Streamlit",
    "section": "Pr√©sentation de widgets",
    "text": "Pr√©sentation de widgets\n\nTestons quelques widgets !\n\n\n\nst.selectbox()\nst.button()\n\n\nfruit = st.selectbox(\n    \"Fruit\",\n    (\"üçì Fraise\", \"üçä Orange\", \"ü•≠ Mangue\", \"üçå Banane\", \"üçè Pomme\"),\n    index = None,\n    placeholder = \"S√©lectionner un fruit\"\n)\n\nbouton = st.button(\"Voir les d√©tails du fruit s√©lectionn√©\")\n\nif bouton:\n    st.write(f\"T'as la dalle ! Tu veux manger une **{fruit}**\")\n\nGuillaume\nNotez qu‚Äôune fois que vous changez l‚Äôinput de la selectbox dans l‚Äôapplication, l‚Äôensemble du script est r√©-√©x√©cut√©, et donc, le bouton est re-cach√© par d√©faut.\nCe rerun total qui est la signature de streamlit peut faciliter le d√©veloppement de certaines applis mais peut parfois √™tre assez contraignant."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#options-de-layout",
    "href": "sections/presentations/streamlit_presentation.html#options-de-layout",
    "title": "üíª Streamlit",
    "section": "Options de layout",
    "text": "Options de layout\n\nst.columns() \\(\\Rightarrow\\) Colonnes\nst.container() \\(\\Rightarrow\\) Conteneur\nst.expander() \\(\\Rightarrow\\) Expandeur\nst.tabs() \\(\\Rightarrow\\) Tabs\nst.sidebar() \\(\\Rightarrow\\) Sidebar\nst.popover() \\(\\Rightarrow\\) Popover\n\n\nHassan\nDe nombreuses options de layout sont disponibles pour modifier l‚Äôapplication.\nOn peut ajouter des colonnes, cr√©er des boites flexbox avec les containers, des tabs, une sidebar, etc."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#colonnes",
    "href": "sections/presentations/streamlit_presentation.html#colonnes",
    "title": "üíª Streamlit",
    "section": "Colonnes",
    "text": "Colonnes\ncolonne_1, colonne_2 = st.columns(2)\nExplication visuelle par Donald J. Trump\n\n\n\n\n\n\nHassan\nLa je vais d‚Äôabord vous pr√©senter la cr√©ation de colonnes avec le futur pr√©sident des Etats-Unis.\nIl y a plusieurs moyens de g√©rer la taille des colonnes, par d√©faut si on ne met qu‚Äôun chiffre qui indique le nombre de colonnes √ßa va diviser la page en 2,3,4, etc.\nMais on peut aussi passer une liste avec des floats du type [0.1, 0.4, 0.4, 0.1]"
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#sidebar",
    "href": "sections/presentations/streamlit_presentation.html#sidebar",
    "title": "üíª Streamlit",
    "section": "Sidebar",
    "text": "Sidebar\n\nOn va changer notre interface utilisateur pour ajouter une Sidebar et regrouper nos widgets.\n\nwith st.sidebar:\n    prenom = st.text_input(\"ü§† Ecris ton pr√©nom *cow-boy* !\")\n    reussite = st.checkbox(\"Tu penses avoir ton ann√©e ?\")\n    note_pf = st.number_input(\n        \"Ta note en Concurrence et Innovation\",\n        min_value=0,\n        max_value=5,\n        step=1\n    )\n    epanouissement = st.select_slider(\n        \"Ton √©panouissement en master\",\n        range(11)\n    )\n\nAybuk√©\nLa notation with permet de dire avec quel objet du layout on travaille. La, on voit qu‚Äôon travaille avec notre sidebar et qu‚Äôon lui ajoute des inputs."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#tabs",
    "href": "sections/presentations/streamlit_presentation.html#tabs",
    "title": "üíª Streamlit",
    "section": "Tabs",
    "text": "Tabs\n\nOn va ajouter quelques onglets (Tabs) √† notre application pour diversifier l‚Äôinterface.\n\ntab_1, tab_2, tab_3 = st.tabs(\n    [\"üîé Infos sur l'ann√©e\", \"üìÑ DataFrame\", \"üìä Graphiques\"]\n)\n\nif prenom:\n    with tab_1:\n        if reussite:\n            st.balloons()\n            st.write(f\"F√©licitations pour ton ann√©e *{prenom}* ! üéà\")\n        else:\n            st.snow()\n            st.write(\n                f\"**Aie**... ü•∂ c'est un travail insuffisant *{prenom}*\"\n            )\n\nGuillaume\nOn va en plus vous faire crouler sous les ballons et la neige maintenant."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#des-messages-de-statut",
    "href": "sections/presentations/streamlit_presentation.html#des-messages-de-statut",
    "title": "üíª Streamlit",
    "section": "Des messages de statut",
    "text": "Des messages de statut\n\n‚ÑπÔ∏è st.info()\n‚ùå st.error()\n\n‚ö†Ô∏è st.warning()\n‚úÖ st.success()\n\nwith st.sidebar:\n    with st.expander(\"On regarde quelques messages ?\"):\n        st.info(\n            f\"Ton √©panouissement en master : {epanouissement}/10\",\n            icon=\"üë®‚Äçüè´\"\n        )\n        st.error(\n            f\"Ta note en Concurrence et Innovation : {note_pf}\",\n            icon=\"üëÄ\"\n        )\n        st.warning(\"Ceci est un avertissement g√©n√©rique\", icon=\"‚ö†\")\n        st.success(\"Message de r√©ussite.\", icon=\"‚úÖ\")\n\nHassan\nSur Streamlit, il existe aussi des conteneurs color√©s sp√©ciaux qui sont adapt√©s pour l‚Äôaffichage d‚Äôerreurs, d‚Äôinfos, d‚Äôavertissements. On va les rergarder un petit peu ensemble."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#et-avec-des-vraies-donn√©es-i",
    "href": "sections/presentations/streamlit_presentation.html#et-avec-des-vraies-donn√©es-i",
    "title": "üíª Streamlit",
    "section": "Et avec des vraies donn√©es ? (I)",
    "text": "Et avec des vraies donn√©es ? (I)\n\nOn a vu tout un tas d‚Äô√©l√©ments d‚ÄôUI, mais on a pas vraiment interragi avec des donn√©es dignes de ce nom.\n\n\n\n\n\n\n\\(\\Rightarrow\\) Morale de l‚Äôhistoire : Installe polars\n\nCorentin\nQuand on pense manipulation de donn√©es en python, on pense pandas, mais il est temps de passer √† la vitesse sup√©rieure et d‚Äôavoir un truc vraiment rapide."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#et-avec-des-vraies-donn√©es-ii",
    "href": "sections/presentations/streamlit_presentation.html#et-avec-des-vraies-donn√©es-ii",
    "title": "üíª Streamlit",
    "section": "Et avec des vraies donn√©es ? (II)",
    "text": "Et avec des vraies donn√©es ? (II)\n\nExemple avec des donn√©es de cas de COVID-19 aux Etats-Unis entre 2020 et 2022 : + 2.5 millions de lignes !\n\nimport polars as pl\n\ndf_covid = pl.read_csv(\n    \"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\"\n)\n\n\n\n\n\n\nProbl√®mes\n\n\n\n\nL‚Äôimport met trois ans\nEn plus, chaque action dans l‚Äôappli relance l‚Äôimport‚Ä¶\n\n\n\n\nCorentin"
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#on-est-pas-rendus",
    "href": "sections/presentations/streamlit_presentation.html#on-est-pas-rendus",
    "title": "üíª Streamlit",
    "section": "On est pas rendus‚Ä¶",
    "text": "On est pas rendus‚Ä¶\n\n\n\n\n\n\nCorentin"
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#solution-i",
    "href": "sections/presentations/streamlit_presentation.html#solution-i",
    "title": "üíª Streamlit",
    "section": "Solution (I)",
    "text": "Solution (I)\n\n\n\n\n\nDeux d√©corateurs tr√®s utiles :\n@st.cache_data et @st.cache_resource\n\nCorentin\nPour le premier d√©corateur, imaginez que vous ayez un dataframe de 2,5 millions lignes, √ßa va devenir assez encombrant que chaque interaction relance enti√®rement l‚Äôappli, et donc l‚Äôimport des donn√©es peut se faire en une fois, et ensuite les donn√©es vont rester dans le cache du navigateur."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#solution-ii",
    "href": "sections/presentations/streamlit_presentation.html#solution-ii",
    "title": "üíª Streamlit",
    "section": "Solution (II)",
    "text": "Solution (II)\n@st.cache_data\ndef import_covid_usa(link: str) -&gt; pl.DataFrame:\n    \"\"\"Fonction d'import des donn√©es optimis√©e.\"\"\"\n    return pl.read_csv(link)\nüí° Et maintenant, observons la diff√©rence !\ndf_covid = import_covid_usa(\n    \"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv\"\n)\n\n\n\n\n\n\nNote\n\n\n\nOn attend une seule fois pour l‚Äôimport des donn√©es, ce qui est beaucoup plus satisfaisant pour l‚Äôutilisateur.\n\nSolution la plus optimale ici : base de donn√©es\n\n\n\n\nCorentin"
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#affichage-dun-tableau",
    "href": "sections/presentations/streamlit_presentation.html#affichage-dun-tableau",
    "title": "üíª Streamlit",
    "section": "Affichage d‚Äôun tableau",
    "text": "Affichage d‚Äôun tableau\n\nOn a maintenant envie d‚Äôafficher nos donn√©es sous forme de tableau.\n\nwith tab_2:\n    st.dataframe(\n        df_covid,\n        hide_index=True,\n        use_container_width=True,\n        column_config={\n            \"date\": st.column_config.DateColumn(\"üìÖ Date\", format=\"DD/MM/YYYY\")\n        },\n    )\n\\(\\Rightarrow\\) Grande flexibilit√© dans l‚Äôaffichage.\n\nHassan\nL‚Äôoption hide_index permet de cacher la colonne d‚Äôindice qui est associ√©e au dataframe.\nLa seconde option permet de forcer le tableau √† prendre la taille compl√®te du conteneur. La derni√®re option est probablement la plus int√©ressante parce qu‚Äôelle permet de passer un sch√©ma de configuration de colonnes pour les personnaliser."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#et-pour-les-graphiques",
    "href": "sections/presentations/streamlit_presentation.html#et-pour-les-graphiques",
    "title": "üíª Streamlit",
    "section": "üìä Et pour les graphiques ?",
    "text": "üìä Et pour les graphiques ?\n\nOn va chercher √† visualiser le nombre de morts par √©tat √† une certaine date.\n\nwith tab_3:\n    st.subheader(\"Nombre de personnes mortes de COVID-19 *(No√´l 2020)*\")\n\n    deaths_by_state_christmas = (\n        df_covid.filter(pl.col(\"date\") == \"2020-12-25\")\n        .group_by(\"state\")\n        .agg(pl.col(\"deaths\").sum())\n    )\n\n    st.bar_chart(deaths_by_state_christmas, x=\"state\", y=\"deaths\")\nDe nombreuses options de visualisation √† la vol√©e :\n\nst.line_chart()\nst.scatter_chart()\nst.map()\netc.\n\n\nAybuk√©\nDans notre code ici, on retrouve un peu de polars mais rien de compliqu√© vous voyez que √ßa ressemble √† la syntaxe de SQL.\nPour plus de contr√¥le sur les visualisations on peut utiliser plotly, altair ou matplotlib avec d‚Äôautres commandes."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#deltagenerator",
    "href": "sections/presentations/streamlit_presentation.html#deltagenerator",
    "title": "üíª Streamlit",
    "section": "DeltaGenerator",
    "text": "DeltaGenerator\n\n\n\n\n\n\nMais comment tout √ßa marche ?\n\n\n\nAu coeur de tous ces composants permettant de cr√©er l‚Äôinterface utilisateur, il y a une classe : le DeltaGenerator.\n\nSyst√®me bas√© sur  protobuf, cr√©e par GOOGLE\n\n\n\n\nCorentin\nEt comme √©videmment les devs de chez Streamlit ils ont pas r√©invent√© la roue ils ont utilis√© un syst√®me de s√©rialisation et d√©s√©rialisation de donn√©es qui a √©t√© cr√©e √† la base par Google.\nLes messages Delta protobuf dans Streamlit en gros c‚Äôest donc des messages qui d√©crivent les modifications √† apporter √† l‚Äôinterface utilisateur de l‚Äôapplication. Ces messages contiennent des instructions sur la fa√ßon de mettre √† jour ou de modifier les √©l√©ments."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#pour-aller-loin",
    "href": "sections/presentations/streamlit_presentation.html#pour-aller-loin",
    "title": "üíª Streamlit",
    "section": "Pour aller + loin",
    "text": "Pour aller + loin\nSecrets management\ndef check_password():\n    \"\"\"Returns `True` if the user had the correct password.\"\"\"\n\n    def password_entered():\n        \"\"\"Checks whether a password entered by the user is correct.\"\"\"\n        if hmac.compare_digest(st.session_state[\"password\"], st.secrets[\"password\"]):\n            st.session_state[\"password_correct\"] = True\n            del st.session_state[\"password\"]  # Don't store the password.\n        else:\n            st.session_state[\"password_correct\"] = False\n\n    # Return True if the password is validated.\n    if st.session_state.get(\"password_correct\", False):\n        return True\n\n    # Show input for password.\n    st.text_input(\n        \"Mot de passe\",\n        type=\"password\",\n        on_change=password_entered,\n        key=\"password\",\n        placeholder=\"Veuillez ins√©rer le mot de passe pour acc√©der √† l'application.\",\n    )\n    if \"password_correct\" in st.session_state:\n        st.error(\"üòï Mot de passe incorrect\")\n    return False\n\n\nif not check_password():\n    st.stop()\n\nHassan"
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#exemples-dappli-compl√®tes",
    "href": "sections/presentations/streamlit_presentation.html#exemples-dappli-compl√®tes",
    "title": "üíª Streamlit",
    "section": "Exemples d‚Äôappli compl√®tes",
    "text": "Exemples d‚Äôappli compl√®tes\n\nüç∑ Projet de Machine Learning du Coc's & du Guig's : Wine Scraping\nüöó Projet de Machine Learning de Buk & du H : EstimyCar\n\n\nAPI Reference : https://docs.streamlit.io/library/api-reference\n\nGuillaume"
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#fin",
    "href": "sections/presentations/streamlit_presentation.html#fin",
    "title": "üíª Streamlit",
    "section": "FIN",
    "text": "FIN\n\n\n\n\n\n\nHassan\nStreamlit devient de plus en plus omnipr√©sent dans le domaine de la data et vous aurez peut-√™tre √† l‚Äôutiliser, et en tout cas nous on vous le conseille fortement, et surtout on esp√®re que √ßa vous a plu et que √ßa vous sera utile."
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html#un-dernier-meme-pour-la-route",
    "href": "sections/presentations/streamlit_presentation.html#un-dernier-meme-pour-la-route",
    "title": "üíª Streamlit",
    "section": "(Un dernier meme pour la route)",
    "text": "(Un dernier meme pour la route)"
  },
  {
    "objectID": "sections/presentations/streamlit_presentation.html",
    "href": "sections/presentations/streamlit_presentation.html",
    "title": "üíª Streamlit",
    "section": "",
    "text": "Un framework python r√©cent, lanc√© en 2019.\n\nEt avant Streamlit, qu‚Äôest ce qu‚Äôil y avait ?\n\nFlask \\(\\Rightarrow\\) Prise en main tr√®s complexe, plus adapt√©e pour les Software Engineers.\nPlotly Dash \\(\\Rightarrow\\) Prise en main plus simple que Flask, concept assez similaire √† Shiny avec s√©paration des composants UI et server.\n\n\nCorentin\n\nFlask \\(\\Rightarrow\\) Super Framework pour faire une appli web scalable mais si vous venez d‚Äôun background Data c‚Äôest vraiment tr√®s tr√®s gal√®re, il faut savoir ce qu‚Äôon fait.\nPlotly Dash \\(\\Rightarrow\\) Configuration des inputs, outputs, callbacks."
  },
  {
    "objectID": "sections/presentations/lego_presentation.html",
    "href": "sections/presentations/lego_presentation.html",
    "title": "Shinybricks",
    "section": "",
    "text": "Cr√©ation en 1932 par Ole Kirk Christiansen au Danemark\n\n\n1946 : Du bois au plastique\n1958 : La fameuse ‚Äúbrique‚Äù LEGO¬Æ\n1969 ‚Äì 1977 : Cr√©ation de la gamme DUPLO et TECHNIC\n1999 : Premi√®re gamme (STAR WARS) de produits d√©riv√©s\n2000 ‚Äì 2005 : Les difficult√©s\n2005 ‚Äì 2015 : La Remontada\n2015 ‚Äì 2024 : Position incontest√©e de leader du jouet\n\n\nCorentin\nJe vous propose qu‚Äôon se plonge d‚Äôabord dans l‚Äôhistoire de LEGO, vous allez voir que c‚Äôest assez int√©ressant.\nLEGO, √ßa a √©t√© cr√©e en 1932 par Christiansen au Danemark.\n\nPour la petite histoire, Christiansen c‚Äôest un charpentier qui a fait faillite pendant la grande d√©pression des ann√©es 30. Il d√©cide de se reconvertir en fabricant de jouets, √† l‚Äô√©poque en bois. Pourquoi les jouets vous allez me dire ? En fait, c‚Äôest tout b√™te, mais les co√ªts de production des jouets en bois sont assez bas et la marge est importante.\n\n\nApr√®s la seconde guerre mondiale, l‚Äôusage du plastique commence √† se r√©pandre et √† √™tre √©conomiquement viable pour produire des jouets, mais les consommateurs ne sont pas encore vraiment convaincus et pr√©f√®rent toujours les jouets en bois, alors LEGO a du mal √† d√©coller √† cette √©poque.\nCe qui va changer la donne c‚Äôest le brevet d√©pos√© en 1958 sur la brique rectangulaire √† cylindres. L‚Äôinnovation majeure est la possibilit√© d‚Äôimbriquer tous les √©l√©ments entre eux et surtout de pouvoir les retirer sans friction pour pouvoir les r√©utiliser ailleurs \\(-\\) Ils viennent d‚Äôinventer ce qu‚Äôils appellent le ‚ÄúLEGO System‚Äù. C‚Äôest assez malin car c‚Äôest quasimment les seuls sur le march√© des jouets en plastique √† ce moment-l√†.\nDans les ann√©es 60-70 et particuli√®rement, ils diversifient leurs gammes et leur CA augmente consid√©rablement. C‚Äôest dans ce contexte qu‚Äôapparait la gamme DUPLO, qui gr√¢ce √† des briques plus grosses permet de conqu√©rir le march√© des enfants de moins de 5 ans (pour √©viter qu‚Äôils s‚Äô√©touffent avec les briques) et la gamme TECHNIC, qui permet de solidifier les structures internes des mod√®les.\nMalheureusement, m√™me avec l‚Äôarriv√©e des sets sous licence, le d√©but des ann√©es 2000 est difficile financi√®rement puisque le groupe essuie des pertes de centaines de millions de dollars √† cause d‚Äôune politique commerciale qui veut instaurer un tarif unique aux distributeurs pour toute l‚ÄôEurope, ce qui fait r√©duire drastiquement le r√©f√©rencement des LEGO dans l‚Äôensemble des magasins.\nEntre 2005 et 2015, le pari de LEGO √ßa va √™tre de se recentrer sur son coeur de march√© (les briques) et √©viter d‚Äôaller dans toutes les directions. Ils vont d√©velopper de plus en plus de licences avec Disney, Warner et aussi une plateforme participative qui s‚Äôappelle Ideas qui va permettre √† des cr√©ateurs ind√©pendants de proposer des mod√®les LEGO et les commercialiser si ils atteignent un certain niveau de vote.\nFinalement, aujourd‚Äôhui et depuis 2015 LEGO c‚Äôest le n¬∞1 au niveau des parts de march√© dans le secteur du jouet.\n\nVoil√† pour cette pr√©sentation de LEGO"
  },
  {
    "objectID": "sections/presentations/lego_presentation.html#lhistoire-de-lego",
    "href": "sections/presentations/lego_presentation.html#lhistoire-de-lego",
    "title": "Shinybricks",
    "section": "L‚Äôhistoire de LEGO",
    "text": "L‚Äôhistoire de LEGO\n\nCr√©ation en 1932 par Ole Kirk Christiansen au Danemark\n\n\n1946 : Du bois au plastique\n1958 : La fameuse ‚Äúbrique‚Äù LEGO¬Æ\n1969 ‚Äì 1977 : Cr√©ation de la gamme DUPLO et TECHNIC\n1999 : Premi√®re gamme (STAR WARS) de produits d√©riv√©s\n2000 ‚Äì 2005 : Les difficult√©s\n2005 ‚Äì 2015 : La Remontada\n2015 ‚Äì 2024 : Position incontest√©e de leader du jouet\n\n\nCorentin\nJe vous propose qu‚Äôon se plonge d‚Äôabord dans l‚Äôhistoire de LEGO, vous allez voir que c‚Äôest assez int√©ressant.\nLEGO, √ßa a √©t√© cr√©e en 1932 par Christiansen au Danemark.\n\nPour la petite histoire, Christiansen c‚Äôest un charpentier qui a fait faillite pendant la grande d√©pression des ann√©es 30. Il d√©cide de se reconvertir en fabricant de jouets, √† l‚Äô√©poque en bois. Pourquoi les jouets vous allez me dire ? En fait, c‚Äôest tout b√™te, mais les co√ªts de production des jouets en bois sont assez bas et la marge est importante.\n\n\nApr√®s la seconde guerre mondiale, l‚Äôusage du plastique commence √† se r√©pandre et √† √™tre √©conomiquement viable pour produire des jouets, mais les consommateurs ne sont pas encore vraiment convaincus et pr√©f√®rent toujours les jouets en bois, alors LEGO a du mal √† d√©coller √† cette √©poque.\nCe qui va changer la donne c‚Äôest le brevet d√©pos√© en 1958 sur la brique rectangulaire √† cylindres. L‚Äôinnovation majeure est la possibilit√© d‚Äôimbriquer tous les √©l√©ments entre eux et surtout de pouvoir les retirer sans friction pour pouvoir les r√©utiliser ailleurs \\(-\\) Ils viennent d‚Äôinventer ce qu‚Äôils appellent le ‚ÄúLEGO System‚Äù. C‚Äôest assez malin car c‚Äôest quasimment les seuls sur le march√© des jouets en plastique √† ce moment-l√†.\nDans les ann√©es 60-70 et particuli√®rement, ils diversifient leurs gammes et leur CA augmente consid√©rablement. C‚Äôest dans ce contexte qu‚Äôapparait la gamme DUPLO, qui gr√¢ce √† des briques plus grosses permet de conqu√©rir le march√© des enfants de moins de 5 ans (pour √©viter qu‚Äôils s‚Äô√©touffent avec les briques) et la gamme TECHNIC, qui permet de solidifier les structures internes des mod√®les.\nMalheureusement, m√™me avec l‚Äôarriv√©e des sets sous licence, le d√©but des ann√©es 2000 est difficile financi√®rement puisque le groupe essuie des pertes de centaines de millions de dollars √† cause d‚Äôune politique commerciale qui veut instaurer un tarif unique aux distributeurs pour toute l‚ÄôEurope, ce qui fait r√©duire drastiquement le r√©f√©rencement des LEGO dans l‚Äôensemble des magasins.\nEntre 2005 et 2015, le pari de LEGO √ßa va √™tre de se recentrer sur son coeur de march√© (les briques) et √©viter d‚Äôaller dans toutes les directions. Ils vont d√©velopper de plus en plus de licences avec Disney, Warner et aussi une plateforme participative qui s‚Äôappelle Ideas qui va permettre √† des cr√©ateurs ind√©pendants de proposer des mod√®les LEGO et les commercialiser si ils atteignent un certain niveau de vote.\nFinalement, aujourd‚Äôhui et depuis 2015 LEGO c‚Äôest le n¬∞1 au niveau des parts de march√© dans le secteur du jouet.\n\nVoil√† pour cette pr√©sentation de LEGO"
  },
  {
    "objectID": "sections/presentations/lego_presentation.html#acronymes-sp√©cifiques",
    "href": "sections/presentations/lego_presentation.html#acronymes-sp√©cifiques",
    "title": "Shinybricks",
    "section": "Acronymes sp√©cifiques",
    "text": "Acronymes sp√©cifiques\n\n\n\n\n\n\nD√©finitions\n\n\n\nSet : Identifiant unique d‚Äôune bo√Æte LEGO¬Æ\nPPP : Price Per Piece\nAFOL : Adult Fan Of Lego\nMOC : My Own Creation\nNPU : Nice Parts Usage\nSNOT : Studs Not On Top\nUCS : Ultimate Collector Series\n\n\n\n\n\nCorentin\nAvant d‚Äôexpliquer notre probl√©matique, on va aussi pr√©ciser les termes et acronymes utilis√©s dans le monde LEGO, qui peuvent parfois √™tre assez sp√©cifiques, et qu‚Äôon retrouvera tout au long de notre pr√©sentation, notamment au niveau des reviews.\n\nUn set c‚Äôest tout simplement le num√©ro que vous retrouvez sur une bo√Æte quand vous l‚Äôachetez. Ce syst√®me d‚Äôidentifiant unique a √©t√© tr√®s pratique pour d√©velopper notre appli.\nLe ppp c‚Äôest le prix divis√© par le nombre de pi√®ces. C‚Äôest un indicateur qui est couramment utilis√© dans la communaut√© pour √©valuer si le set vaut le coup d‚Äô√™tre achet√©. Parce que √©videmment un prix par pi√®ce tr√®s elev√© est per√ßu n√©gativement par les fans.\nUn AFOL c‚Äôest un adulte qui collectionne les LEGO, en g√©n√©ral pas pour jouer avec mais pour les exposer.\nUn MOC c‚Äôest une construction personnalis√©e qui n‚Äôa pas d‚Äôinstructions et qui n‚Äôest pas officiellement vendue par LEGO.\nUn NPU ou Nice Parts Usage, c‚Äôest une utilisation inventive de briques par les constructeurs officiels qui rend la construction int√©ressante et innovante.\nSNOT c‚Äôest une technique de construction qui permet d‚Äô√©viter de montrer les studs (les petit ronds LEGO) et notamment dans les sets de collection c‚Äôest appr√©ci√© parce que √ßa permet d‚Äôavoir un rendu final √©l√©gant, et pour 200-300‚Ç¨ c‚Äôest assez normal.\nUCS d√©signe les √©normes sets STAR WARS avec plus de 3-4000 pi√®ces comme le Faucon Millenium, le Star Destroyer, etc."
  },
  {
    "objectID": "sections/presentations/lego_presentation.html#shinybricks-cest-quoi",
    "href": "sections/presentations/lego_presentation.html#shinybricks-cest-quoi",
    "title": "Shinybricks",
    "section": "Shinybricks, c‚Äôest quoi ?",
    "text": "Shinybricks, c‚Äôest quoi ?\n\nUne plateforme d‚Äôanalyse LEGO sur un ensemble de points :\n\n\nUne analyse par th√®me\nUne analyse par an\nUne analyse par set\nUn aper√ßu des strat√©gies de pricing adopt√©es\n\n\nHassan\nNotamment dans l‚Äôanalyse par set on va pouvoir comparer les prix de vente √† la commercialisation des sets et les prix actuels quand les sets ont √©t√© retir√©s des √©tag√®res.\nVous allez voir d‚Äôailleurs que ces petites briques c‚Äôest parfois plus rentable que des placements financiers."
  },
  {
    "objectID": "sections/presentations/lego_presentation.html#sources-de-donn√©es",
    "href": "sections/presentations/lego_presentation.html#sources-de-donn√©es",
    "title": "Shinybricks",
    "section": "Sources de donn√©es",
    "text": "Sources de donn√©es\n\n\n\n\nSource\nM√©thode\n\n\n\n\n\nBrickset\nAPI\n\n\n\nBrickeconomy\nScraping\n\n\n\n\n\\(\\Rightarrow\\) Brickset : r√©cup√©ration de la base de donn√©es compl√®te\n\\(\\Rightarrow\\) Brickeconomy : r√©cup√©ration des prix\n\nHassan\nUn point positif c‚Äôest qu‚Äôen fait il y a beaucoup de donn√©es qui existent car il y a des fans fous furieux de LEGO qui passent leur vie √† actualiser des forums et sites webs quand un nouveau set sort, c‚Äôest par exemple le cas du premier site du tableau ; Brickset, qui a √©t√© cr√©e en 1997 et qui recense les LEGO de 1970 √† 2024.\nSurtout l‚Äôavantage de ce site c‚Äôest qu‚Äôil dispose d‚Äôune API qui renvoie des r√©ponses en JSON et qui est gratuite √† utiliser. Il suffit juste de se cr√©er un compte sur le site, remplir un petit formulaire et ensuite on re√ßoit une cl√©.\nPour ceux qui n‚Äôont jamais utilis√© d‚ÄôAPI, en gros c‚Äôest juste une mani√®re d‚Äô√©changer de la donn√©e entre un client (l√† en l‚Äôoccurence le PC) et le serveur (Ici Brickset). On envoie une requ√™te HTTP configur√©e d‚Äôune certaine mani√®re avec une cl√© et on r√©cup√®re une r√©ponse dans un format d‚Äô√©change comme le JSON ou du XML.\nUn conseil : toujours v√©rifier si il existe une API avant de se lancer dans du scraping, c‚Äôest quand m√™me mieux et √ßa fait √©conomiser du temps.\nEn revanche, le probl√®me de la base de donn√©es Brickset c‚Äôest qu‚Äôil y a tr√®s peu de prix disponibles dessus. Etant donn√© que le prix est une info strat√©gique, le site n‚Äôa pas int√©r√™t √† la donner gratuitement gr√¢ce √† son API.\nC‚Äôest pour √ßa qu‚Äôon en vient au deuxi√®me site : Brickeconomy. Alors l√†, y‚Äôa pas d‚ÄôAPI, on fait le scraping gr√¢ce au num√©ro du set et on r√©cup√®re le prix de vente, le prix actuel quand le set est ferm√© et le prix actuel quand le set est ouvert.\nOn va vous d√©tailler un petit peu plus tout √ßa."
  },
  {
    "objectID": "sections/presentations/lego_presentation.html#api-brickset",
    "href": "sections/presentations/lego_presentation.html#api-brickset",
    "title": "Shinybricks",
    "section": "API Brickset",
    "text": "API Brickset\nGr√¢ce au wrapper sur  d√©velopp√© par Jason Bryer, l‚Äôutilisation de l‚ÄôAPI est encore plus simple !\nlibrary(brickset)\n\nsets_2021 &lt;- brickset::getSets(2021)\nreviews_29830 &lt;- brickset::getReviews(29830)\ninstructions_29830 &lt;-brickset::getInstructions(29830)\n\n\n\n\n\n\nNote\n\n\nIci, on r√©cup√®re les sets de l‚Äôann√©e 2021, les reviews du setID 29830 et les instructions du setID 29830 directement dans un dataframe.\n\n\n\n\nCorentin\nL‚Äôavantage c‚Äôest qu‚Äôil existe d√©j√† un package R pour interagir avec l‚ÄôAPI Brickset.\nOn va s‚Äôint√©resser aux 3 fonctions qui suivent.\nOn voulait aussi un syst√®me semi-automatique qui nous permette d‚Äôextraire de mani√®re optimale les donn√©es."
  },
  {
    "objectID": "sections/presentations/lego_presentation.html#set-maker",
    "href": "sections/presentations/lego_presentation.html#set-maker",
    "title": "Shinybricks",
    "section": "Set Maker",
    "text": "Set Maker\n\nCLI pour extraire les sets par ann√©e et les exporter en format parquet gr√¢ce √† arrow::write_parquet()\n\n‚îÄ‚îÄ SetMaker ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n    ‚ÄúUne petite CLI pour extraire des sets LEGO¬Æ vers un format\n    parquet.‚Äù\n    ‚Äî \nVeuillez entrer une ann√©e entre 1970 et 2024 (ann√©e actuelle) ‚áí 2018\nR√©sultat :\n\\(\\Rightarrow\\) sets_2018.parquet dans le dossier /data\n\nCorentin\nUne fois qu‚Äôon a nos r√©sultats par ann√©e, on peut combiner tous nos fichiers parquet pour avoir un seul dataframe qu‚Äôon a appel√© df_sets."
  },
  {
    "objectID": "sections/presentations/lego_presentation.html#scraping-brickeconomy",
    "href": "sections/presentations/lego_presentation.html#scraping-brickeconomy",
    "title": "Shinybricks",
    "section": "Scraping Brickeconomy",
    "text": "Scraping Brickeconomy\n\nUtilisation conjointe des packages {httr2} et {rvest}\n\n\n{httr2} pour effectuer la requ√™te et changer les headers\n{rvest} pour faire le scraping\n\nExemple :\nset_number &lt;- \"75573-1\"\n\nlink &lt;- glue::glue(https://www.brickeconomy.com/set/{set_number}/)\n\nlink |&gt; ShinyBricksFuncs::make_request()\n\nCorentin\nLa fonction make_request de notre package ShinyBricksFuncs permet gr√¢ce √† httr2, d‚Äôeffectuer une requ√™te sur ce lien d‚Äôexemple, de lui changer ses headers pour faire passer notre bot pour un utilisateur lambda qui utilise son navigateur, ce qui nous permet de r√©cup√©rer la page brute et on laisse rvest harvester le r√©sultat, c‚Äôest √† dire r√©cup√©rer les prix !\nEncore une fois c‚Äôest pas tout √† fait satisfaisant puisqu‚Äôon l‚Äôa fait que sur un lien, et on a plus de 10000 pages √† aller r√©cup√©rer."
  },
  {
    "objectID": "sections/presentations/lego_presentation.html#scraping-launcher",
    "href": "sections/presentations/lego_presentation.html#scraping-launcher",
    "title": "Shinybricks",
    "section": "Scraping Launcher",
    "text": "Scraping Launcher\n\nCLI pour extraire les prix par ann√©e et les exporter en format feather gr√¢ce √† feather::write_feather()\n\n‚îÄ‚îÄ ScrapingLauncher ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n    ‚ÄúUne petite CLI pour lancer le scraping ann√©e par ann√©e des sets\n    LEGO¬Æ pr√©sents sur Brickeconomy vers un format feather.‚Äù\n    ‚Äî \n\nVeuillez entrer une ann√©e entre 1994 et 2024 (ann√©e actuelle) ‚áí 2018\nR√©sultat :\n\\(\\Rightarrow\\) scraping_2018.feather dans le dossier /data\n\nCorentin\nEn gros le fonctionnement est tr√®s similaire √† la premi√®re CLI √† la diff√©rence pr√®s que ce n‚Äôest plus du parquet mais du feather pour des histoires de vitesse de lecture et d‚Äô√©criture, le feather c‚Äôest plus rapide que du parquet parce que √ßa ne compresse pas, et √©tant donn√© que les donn√©es sur les prix sont assez petites, pas besoin de parquet, mais c‚Äôest vraiment du d√©tail.\nUne fois qu‚Äôon a nos r√©sultats par ann√©e, on peut combiner tous nos fichiers feather pour avoir un seul dataframe qu‚Äôon a appel√© df_scrap"
  },
  {
    "objectID": "sections/presentations/lego_presentation.html#fusion",
    "href": "sections/presentations/lego_presentation.html#fusion",
    "title": "Shinybricks",
    "section": "Fusion !",
    "text": "Fusion !\n\n\nHassan\nUne fois qu‚Äôon a nos deux dataframes on les fusionne et puis on passe √† l‚Äôappli non ?"
  },
  {
    "objectID": "sections/presentations/lego_presentation.html#application",
    "href": "sections/presentations/lego_presentation.html#application",
    "title": "Shinybricks",
    "section": "Application",
    "text": "Application\nShinybricks a √©t√© cr√©√©e avec {shiny} et {bslib}\n\n\n\n\n\n\nPourquoi bslib ?\n\n\nLe package {bslib} permet de cr√©er une UI moderne pour Shiny et bas√©e sur la version 5 de Bootstrap.\n\n\n\nPour les autres composants interactifs de l‚Äôapplication :\n\nGraphiques r√©alis√©s avec {plotly}\nTableaux r√©alis√©s avec {gt}\n\n\nHassan\nAlors pourquoi bslib ? Honn√™tement Shiny tout seul √ßa piquait les yeux, on avait l‚Äôimpression d‚Äô√™tre retourn√© en 2009, et bslib permet justement de redonner un aspect visuel sympa √† l‚Äôappli avec des composants comme des cards, des value_boxes, bref des trucs modernes un peu plus sexy que le Shiny de base quoi, que vous avez par exemple vu dans la pr√©sentation d‚ÄôAybuk√© et du Guigs.\nPour les graphiques on a utilis√© plotly parce qu‚Äôon voulait beaucoup personnaliser les traces pour qu‚Äôelles soient √† la fois informatives et dans le th√®me.\nEnfin pour les tableaux on a utilis√© gt parce que c‚Äôest aujourd‚Äôhui la librairie de cr√©ation de tableaux la plus compl√®te sur R.\nJe pense qu‚Äôon peut passer √† la pr√©sentation."
  },
  {
    "objectID": "sections/presentations/lego_presentation.html#conclusion",
    "href": "sections/presentations/lego_presentation.html#conclusion",
    "title": "Shinybricks",
    "section": "Conclusion",
    "text": "Conclusion\nApplication avec de nombreuses fonctionnalit√©s et UI/UX moderne.\n\n\n\n\n\n\nEn cours‚Ä¶\n\n\n\nPas assez de donn√©es pour faire un mod√®le fiable de s√©ries temporelles.\nUtilisation du package {golem} pour d√©ployer l‚Äôapplication en tant que package avec tests et modules, etc.\n\n\n\n\n\nHassan\nPour terminer √ßa a √©t√© plut√¥t une belle aventure de faire cette application, on a un peu su√© quand il s‚Äôagissait de comprendre les messages d‚Äôerreur parfois, mais le rendu est l√†.\nPour ce qui est des limites du projet on aurait voulu faire un mod√®le de s√©ries temporelles pour pr√©dire les prix mais ces donn√©es l√† √©taient difficiles √† scraper sur Brickeconomy.\nEnfin il faut qu‚Äôon passe √† la partie de d√©ploiement. Si vous avez des questions n‚Äôh√©sitez pas !\n\n\n\n\n\nPr√©sentation de ShinyBricks"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#le-pourquoi-du-comment",
    "href": "sections/presentations/wine_presentation.html#le-pourquoi-du-comment",
    "title": "üç∑ Wine Scraping",
    "section": "",
    "text": "Le 18 janvier approche, une date en apparence anodine mais tr√®s importante pour nos deux comp√®res.\nPour cette journ√©e festive, nos 2 protagonistes se rendirent sur vinatis.com pour trouver un breuvage.\nEt c‚Äôest √† ce moment que l‚Äôhistoire prend racine‚Ä¶\n\n\n\n\n\n\n\n\n\n\nOn parle de moi ?\n\n\n\nGUILLAUME\n\nNous avons commenc√© √† rechercher notre proie d√®s fin septembre pour faire quelques tests, notamment sur la partie scraping."
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#scraping",
    "href": "sections/presentations/wine_presentation.html#scraping",
    "title": "üç∑ Wine Scraping",
    "section": "Scraping",
    "text": "Scraping\n\n‚ÄúPour savoir qu‚Äôun verre √©tait de trop, encore faut-il avoir scrap√© son vin !‚Äù \\(-\\) Inconnu\n\n\nCORENTIN\nEh non Jean ! On ne parle pas de toi mais bien du scraping de vin. D‚Äôailleurs on voit au tableau ce magnifique proverbe indon√©so-inconnu qui √©nonce que Pour savoir qu‚Äôun verre √©tait de trop, encore faut-il avoir scrap√© son vin !\nCa t‚Äôa ouvert les chakras Guillaume ? Ouais, non ? Bon moi non plus, et si on passait √† la partie technique plut√¥t ?"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#scraping-partie-i",
    "href": "sections/presentations/wine_presentation.html#scraping-partie-i",
    "title": "üç∑ Wine Scraping",
    "section": "Scraping, Partie I",
    "text": "Scraping, Partie I\nscraping_functions.py \\(\\Rightarrow\\) Le coeur du scraper\n\nConstruit des URL avec query parameters en utilisant le package yarl.\n\nURL_INIT = URL.build(scheme=\"https\", host=\"vinatis.com\")\nWHITE = \"achat-vin-blanc\"\nRED = \"achat-vin-rouge\"\nROSE = \"achat-vin-rose\"\n\n&gt;&gt;&gt; URL_INIT / WHITE % {\"page\": 1, \"tri\": 7}\n... URL('https://vinatis.com/achat-vin-blanc?page=1&tri=7')\n\ncreate_session cr√©e une session HTML avec un User-Agent et un Proxy al√©atoire, pouvant changer entre les requ√™tes.\nPoss√®de un d√©corateur @random_waiter(min, max) permettant de g√©n√©rer un temps d‚Äôattente al√©atoire entre les deux bornes sp√©cifi√©es entre chaque requ√™te GET pour √©viter d‚Äôenvoyer trop de requ√™tes dans un laps de temps r√©duit.\ncreate_all_wine_urls permet de cr√©er l‚Äôensemble des liens href.\nexport_wine_links permet d‚Äôexporter ces liens dans un fichier CSV.\n\n\nCORENTIN\nPour un peu de mise en contexte, initialement on avait commenc√© par scraper les pages de vente de vins o√π une trentaine de vins sont affich√©s‚Ä¶mais on s‚Äôest rapidement rendu compte que dans ces pages, il manquait beaucoup d‚Äôinformations. On s‚Äôest plut√¥t mis en t√™te de r√©cup√©rer les caract√©ristiques sur chaque page individuelle de vin, qu‚Äôon peut facilement r√©cup√©rer sur les pages de recherche gr√¢ce √† des liens href. Et initialement, on l‚Äôavait fait avec Selenium mais √ßa prenait un temps monstre donc on a chang√© d‚Äôid√©e.\nNote : On aurait pu construire les URL √† la main mais c‚Äô√©tait beaucoup moins √©l√©gant que de le faire comme √ßa.\n\nEnsuite on a voulu introduire un User Agent r√©aliste quand on effectue notre requ√™te get, pour √©viter que le site ne finisse par comprendre que c‚Äôest un bot. Ca permet simplement d‚Äôenvoyer des en-t√™tes que renvoierai un navigateur comme Firefox, Chrome ou Edge.\nLe proxy permet quant √† lui de masquer son adresse IP, au cas o√π on finirait par se faire bannir.\nOn a aussi voulu √©viter de surcharger les serveurs en envoyant trop de requ√™tes en m√™me temps donc on a utilis√© un d√©corateur (point 3)\n\nCela √©tant, on a eu aucun probl√®me jusqu‚Äôici chaque fois qu‚Äôon a fait le scraping."
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#scraping-partie-ii",
    "href": "sections/presentations/wine_presentation.html#scraping-partie-ii",
    "title": "üç∑ Wine Scraping",
    "section": "Scraping, Partie II",
    "text": "Scraping, Partie II\n\nOn va ensuite requ√™ter ces liens href avec create_json et r√©cup√©rer les pages brutes en HTML.\nLa fonction scraping du module mystical_soup va permettre d‚Äôextraire toutes les informations int√©ressantes de la page brute et renvoyer la dataclass Vin s√©rialisable en JSON.\n\n Exemple d‚Äôun Vin et ses caract√©ristiques s√©rialis√©s en JSON :\n{\n        \"name\": \"PINOT NOIR 2019 LAS PIZARRAS - ERRAZURIZ\",\n        \"capacity\": \"0,75 L\",\n        \"price\": \"94,90 ‚Ç¨\",\n        \"price_bundle\": null,\n        \"characteristics\": \"Vin Rouge / Chili / Central Valley / Aconcagua Valley DO / 13,5 % vol / 100% Pinot noir\",\n        \"note\": null,\n        \"keywords\": [\n            \"El√©gance\",\n            \"Finesse\",\n            \"Harmonie\"\n        ],\n        \"others\": null,\n        \"picture\": \"https://www.vinatis.com/67234-detail_default/pinot-noir-2019-las-pizarras-errazuriz.png\",\n        \"classification\": null,\n        \"millesime\": \"2019\",\n        \"cepage\": \"100% Pinot noir\",\n        \"gouts\": \"Rouge Charnu et fruit√©\",\n        \"par_gouts\": \"Puissant\",\n        \"oeil\": \"Robe rubis aux reflets violets.\",\n        \"nez\": \"Nez complexe sur la griotte, les √©pices et les champignons (truffe).\",\n        \"bouche\": \"Bouche fruit√©e et florale. Tanins structur√©s, √©l√©gants et fins. finale harmonieuse et persistante.\",\n        \"temperature\": \"8-10¬∞C\",\n        \"service\": \"En bouteille ou en carafe\",\n        \"conservation_1\": \"2026\",\n        \"conservation_2\": \"A boire et √† garder\",\n        \"accords_vins\": \"Ap√©ritif, Entr√©e, Charcuterie, Viande rouge, Viande blanche, Volaille, Gibier, Champignon, Barbecue, Cuisine du monde, Fromage, Dessert fruit√©, Dessert chocolat√©\",\n        \"accords_reco\": \"Gigot d'agneau aux herbes de Provence; Tikka massala; Plateau de fromages.\"\n    }\n\nGUILLAUME\nUne fois que l‚Äôon a r√©cup√©r√© tous les URLs des pages des vins, on va scraper chaque page avec le module mystical_soup. Toutes les informations qui nous int√©resse sont stock√© dans un fichier JSON."
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#cleaning",
    "href": "sections/presentations/wine_presentation.html#cleaning",
    "title": "üç∑ Wine Scraping",
    "section": "üßπ Cleaning",
    "text": "üßπ Cleaning\nMais ce JSON brut doit √™tre nettoy√© et consid√©rablement restructur√© !\n\nNous avons choisi d‚Äôutiliser polars üêª et non pas pandas üêº pour le faire.\nToutes les fonctions de nettoyage sont contenues dans bear_cleaner.py.\nLa fonction super_pipe permet de chainer toutes les transformations dans un pipeline propre pour structurer notre Dataframe.\nNous obtenons ainsi un Dataframe de taille (4006,40) pr√™t pour le Machine Learning\n\n\n\n\n\n\n\nCORENTIN\nOn l‚Äôa vu avec l‚Äôexemple d‚Äôun vin s√©rialis√© en json sur la slide pr√©c√©dente, les entr√©es ne sont pas nettoy√©es : les valeurs num√©riques sont stock√©es sous forme de texte, etc.\nPourquoi polars ? \\(\\Rightarrow\\) Les expressions polars nous permettent de faire tout un tas d‚Äôop√©rations sans jamais utiliser des lambda functions, l‚ÄôAPI est mieux document√©e.\n\nEn sortie : 4006 vins distincts et 40 variables !"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#machine-learning",
    "href": "sections/presentations/wine_presentation.html#machine-learning",
    "title": "üç∑ Wine Scraping",
    "section": "Machine Learning",
    "text": "Machine Learning\n\n‚Äú2024 sera un mill√©sime fran√ßais !‚Äù \\(-\\) Emmanuel Macron\n\n\nGUILLAUME"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#machine-learning---proc√©dure",
    "href": "sections/presentations/wine_presentation.html#machine-learning---proc√©dure",
    "title": "üç∑ Wine Scraping",
    "section": "Machine Learning - Proc√©dure",
    "text": "Machine Learning - Proc√©dure\n\nDeux variables √† pr√©dire : unit_price & type\nUtilisation de 6 mod√®les de Machine Learning\n‚û∂ Optimisation des hyperparam√®tres \\(\\Rightarrow\\) models.py\nüèπ Pr√©diction sur les donn√©es de test \\(\\Rightarrow\\) prediction.py\nüß™ Utilisation d‚Äôun pipeline sklearn\n\nEvite le Data Leakage\nProc√©dure standardis√©e pour l‚Äôensemble des mod√®les.\n\n\n\nCORENTIN\nMais Guillaume dis-moi, si on peut facilement voir l‚Äôint√©r√™t de pr√©dire le prix d‚Äôune bouteille de vin, quel est l‚Äôint√©r√™t de pr√©dire le type de vin ? Je veux dire, une fois qu‚Äôon regarde la bouteille, √† la couleur on peut savoir, √ßa semble un peu b√™te non ?\nGUILLAUME\nEh bien Corentin, la r√©ponse √©tait √† Noel ! Quand, dans un repas de famille, on nous pr√©sente pas moins d‚Äôune dizaine de vins et qu‚Äôon commence √† tous les go√ªter, il arrive ce moment in√©luctable ou on d√©passe les 2 grammes par litre, et √† ce moment‚Ä¶ difficile de distinguer ce qu‚Äôon boit. Nos mod√®les viennent en aide √† ce moment l√† ! Enfin, si l‚Äôutilisateur arrive √† utiliser son ordinateur‚Ä¶\nCORENTIN\n\nLe Data Leakage se produit lorsque des informations qui sont indisponibles au moment de la pr√©diction sont utilis√©es pendant la construction du mod√®le. Se traduit par des estimations de performances trop optimistes, et donc de moins bonnes performances quand le mod√®le est utilis√© sur de nouvelles donn√©es.\n\n80%/20% train/test"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#ml-optimisation",
    "href": "sections/presentations/wine_presentation.html#ml-optimisation",
    "title": "üç∑ Wine Scraping",
    "section": "‚û∂ ML : Optimisation",
    "text": "‚û∂ ML : Optimisation\n\nChoix des 21 variables explicatives\nPreprocessing : OneHotEncoder(), Imputation NA, MinMaxScaler()\nOptimisation des hyperparam√®tres par Cross-Validation\n\n\nAvec optimisation_script.py on optimise les hyperparam√®tres des mod√®les et on r√©cup√®re sous forme de CSV :\n\nLes scores de test et d‚Äôentrainement\nLes √©carts-type \\(\\sigma_{\\text{test}}\\) et \\(\\sigma_{\\text{train}}\\)\nLes hyperparam√®tres optimaux pour chaque mod√®le\n\n\nMod√®le,Score Test,Score Entrainement,Ecart-Type Test,Ecart-Type Train,Param√®tres,Score Test data,Mode\nRandom Forest,0.934,0.941,0.007,0.007,\"{'entrainement__max_depth': 9, 'entrainement__n_estimators': 30, 'imputation__strategy': 'median'}\",0.9301745635910225,classification\nK Neighbors,0.954,0.965,0.012,0.003,\"{'entrainement__n_neighbors': 5, 'imputation__strategy': 'median'}\",0.9600997506234414,classification\nR√©seaux de neurones,0.976,0.997,0.007,0.001,\"{'entrainement__hidden_layer_sizes': (100,), 'entrainement__max_iter': 1000, 'entrainement__solver': 'adam', 'imputation__strategy': 'median'}\",0.9800498753117207,classification\nBoosting,0.975,1.0,0.009,0.0,\"{'entrainement__learning_rate': 0.5, 'entrainement__n_estimators': 200, 'imputation__strategy': 'median'}\",0.9812967581047382,classification\nRidge,0.979,0.983,0.009,0.002,\"{'entrainement__alpha': 0.015625, 'imputation__strategy': 'mean'}\",0.9812967581047382,classification\nSupport Vector,0.981,0.992,0.008,0.002,\"{'entrainement__C': 3.281341424030552, 'imputation__strategy': 'median'}\",0.9825436408977556,classification\n\nGUILLAUME\n\nvariables & mod√®les qui serviront dans nos mod√®les\n6 mod√®les pour ne pas √™tre trop exhaustif (RF, Boosting, Ridge, MLP, KNN, SVM).\ntransforme une colonne cat√©gorielle en plusieurs colonnes binaires\noptimisation des param√®tres et strategie d‚Äôimputation par CV\nPour chaque mod√®le on a decid√© d‚Äôoptimiser entre 2 et 3 hyperparam√®tre.\nr√©sultats stock√©s dans un CSV avec les score, et valeur des hyperparam√®tres."
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#ml-pr√©diction",
    "href": "sections/presentations/wine_presentation.html#ml-pr√©diction",
    "title": "üç∑ Wine Scraping",
    "section": "üèπ ML : Pr√©diction",
    "text": "üèπ ML : Pr√©diction\n\nDeux types de pr√©dictions :\n\nClassification sur le type de vin (Vin Rouge / Blanc / Ros√©)\nR√©gression sur le prix d‚Äôune bouteille de vin\n\nAvec prediction_script.py on r√©alise les pr√©dictions avec tous les mod√®les\n\nname,type,random_forest,boosting,ridge,knn,mlp,support_vector\nLES CARLINES 2021 - MAS HAUT BUIS,Vin Rouge,Vin Rouge,Vin Rouge,Vin Rouge,Vin Rouge,Vin Rouge,Vin Rouge\nLA BARGEMONE ROSE 2022 - COMMANDERIE DE LA BARGEMONE,Vin Ros√©,Vin Blanc,Vin Ros√©,Vin Ros√©,Vin Ros√©,Vin Ros√©,Vin Ros√©\nTEMPRANILLO 2021- VEGA DEMARA,Vin Rouge,Vin Rouge,Vin Rouge,Vin Rouge,Vin Rouge,Vin Rouge,Vin Rouge\nCH√ÇTEAUNEUF DU PAPE - ALCHIMIE 2020 - DOMAINE DES 3 CELLIER,Vin Rouge,Vin Rouge,Vin Rouge,Vin Rouge,Vin Rouge,Vin Rouge,Vin Rouge\n\nPour les 800 vins qui n‚Äôont pas servi dans notre Cross Validation on r√©alise une pr√©diction par chacun de nos 6 mod√®les, le tout stock√© dans un fichier CSV !\n\n\nGUILLAUME\n\npr√©diction sur les 800 vins restants\nstock tous les r√©sultats dans un CSV, pour chaque vin on a la valeur r√©el et la pr√©diction pour chaqu‚Äôun des mod√®les.\n1 fichier pour la r√©gression et 1 pour classification\nEvaluation des mod√®les avec des m√©triques"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#metrics",
    "href": "sections/presentations/wine_presentation.html#metrics",
    "title": "üç∑ Wine Scraping",
    "section": "üî¨ Metrics",
    "text": "üî¨ Metrics\n\nRegression:\n\nErreur moyenne absolue : MAE(\\(y\\),\\(\\hat{y}\\)) = \\(\\frac{1}{n}\\sum|y_i - \\hat{y_i}|\\)\nErreur quadratique moyenne : MSE(\\(y\\),\\(\\hat{y}\\)) = \\(\\frac{1}{n}\\sum(y_i - \\hat{y_i})^2\\)\nErreur R√©siduelle Maximale : MaxError(\\(y\\), \\(\\hat{y}\\)) = \\(\\max\\left(|y_i-\\hat{y_i}|\\right)\\)\n\\(R^2\\) Score = \\(1- \\frac{\\sum(y_i-\\hat{y_i})^2}{\\sum(y_i-\\bar{y_i})^2}\\)\n\nClassification:\n\nAccuracy Score : AS(\\(y\\),\\(\\hat{y}\\)) = \\(\\frac{1}{n}\\sum(\\hat{y_i} = y_i)\\)\nPrecision = \\(\\frac{\\text{true positive}}{\\text{true positive + false positive}}\\)\nRecall = \\(\\frac{\\text{true positive}}{\\text{true positive + false negative}}\\)\n\\(F_1\\) Score = \\(2 \\times \\frac{\\text{precision } \\times \\text{ recall}}{\\text{precision + recall}}\\)\n\n\n\nCORENTIN\nNous avons utilis√© un certains nombre de m√©triques impl√©ment√©es dans sklearn pour √©valuer la qualit√© de nos mod√®les :\n\nLa \\(MAE\\) est en fait simplement la somme des erreurs absolues divis√©e par la taille de l‚Äô√©chantillon.\nLa \\(MSE\\) mesure la moyenne des carr√©s des erreurs, c‚Äôest-√†-dire la diff√©rence quadratique moyenne entre la valeur estim√©e et la valeur r√©elle.\nL‚Äôerreur r√©siduelle maximale est une m√©trique qui capture l‚Äôerreur la plus importante entre la valeur pr√©dite et la valeur r√©elle.\nLe \\(R^2\\) repr√©sente la proportion de variance de la variable √† pr√©dire expliqu√©e par les variables ind√©pendantes du mod√®le. Il fournit une indication de la qualit√© de l‚Äôajustement.\n\nAfin de visualiser tous nos r√©sultats une application serait id√©ale‚Ä¶"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#application",
    "href": "sections/presentations/wine_presentation.html#application",
    "title": "üç∑ Wine Scraping",
    "section": "üíª Application",
    "text": "üíª Application\nüïµ Framework utilis√© : streamlit\n\nü§∑ Pourquoi ? Facilit√© de mise en oeuvre\n\nBase de donn√©es\nStatistiques descriptives (corr√©lations, r√©partition, etc.)\nMachine Learning\n\nüë®‚Äçüè≠ Comment ? Forte flexibilit√© \\(\\rightarrow\\) L‚Äôutilisateur peut jouer avec les donn√©es\n\nSidebar avec de nombreux s√©lecteurs\n\n\n\n\n\n\n\n\nGUILLAUME\n\nFacilit√© d‚Äôutilisation, jeu de lego, bloc que l‚Äôon combine\nParfait pour l‚Äôanalyse de donn√©es, int√©gration des plotly ais√©\nl‚Äôutilisateur peut int√©ragir facilement avec les √©lements de l‚Äôapp\n\nEncore une fois aussi, l‚ÄôAPI de streamlit est tr√®s bien document√©e.\nOn peut arriver √† un rendu qui est vraiment convaincant niveau interface utilisateur sans utiliser de CSS ou de javascript !\nEcoute Arnaud, avant de passer au p‚Äôtit coup, on va parler de stockage avant !"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#choix-du-stockage-partie-i",
    "href": "sections/presentations/wine_presentation.html#choix-du-stockage-partie-i",
    "title": "üç∑ Wine Scraping",
    "section": "Choix du stockage, Partie I",
    "text": "Choix du stockage, Partie I\n duckdb : La base de donn√©es qui fait ‚Äúcoin coin‚Äù ü¶Ü\ndef db_connector() -&gt; DuckDBPyConnection:\n    \"\"\"Se connecte √† la base de donn√©es.\"\"\"\n    connection = duckdb.connect(database=\":memory:\")\n    return connection\n\n:memory: \\(\\Rightarrow\\) Base de donn√©es in-memory\nLa base de donn√©es en m√©moire stocke les informations directement dans la m√©moire vive plut√¥t que sur un disque.\nR√©duit le temps n√©cessaire au stockage et √† la consultation des donn√©es, et acc√©l√®re l‚Äôex√©cution des requ√™tes.\n\n\nCORENTIN\nComme on l‚Äôa vu dans la partie Optimisation et Pr√©diction du Machine Learning, on a des r√©sultats en CSV. Mais une fois qu‚Äôon a 4-5 csv √ßa commence √† devenir encombrant‚Ä¶du coup on a plut√¥t opt√© pour une base de donn√©es. Et pas n‚Äôimporte laquelle !\nUne base de donn√©es in-memory est donc id√©ale pour une application effectuant de l‚Äôanalyse de donn√©es en temps r√©el comme la notre."
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#choix-du-stockage-partie-ii",
    "href": "sections/presentations/wine_presentation.html#choix-du-stockage-partie-ii",
    "title": "üç∑ Wine Scraping",
    "section": "Choix du stockage, Partie II",
    "text": "Choix du stockage, Partie II\n\n5 tables de r√©sultats de Machine Learning sont obtenues gr√¢ce √† l‚Äôex√©cution de ml_trigger qui se charge d‚Äô√©x√©cuter l‚Äôensemble des scripts d‚Äôexport.\n\nVoici un sch√©ma du processus d‚Äôingestion des tables :\n\n\n\n\n\ngraph LR;\nA(\"üë®‚Äçüî¨ pred_classification\")--&gt;F;\nB(\"üë®‚Äçüî¨ pred_regression\")--&gt;F;\nC(\"üë©‚Äçüè´ result_ml_regression\")--&gt;F;\nD(\"üë©‚Äçüè´ result_ml_classification\")--&gt;F;\nE(\"üïµÔ∏è‚Äç‚ôÇÔ∏è importance\")--&gt;F[(\"ü¶Ü In Memory Database\")];\n\nstyle A stroke:#adbac7,stroke-width:3px, fill:white;\nstyle B stroke:#adbac7,stroke-width:3px, fill:white;\nstyle C stroke:#adbac7,stroke-width:3px, fill:white;\nstyle D stroke:#adbac7,stroke-width:3px, fill:white;\nstyle E stroke:#adbac7,stroke-width:3px, fill:white;\nstyle F stroke:#fff100,stroke-width:3px, fill:white;\n\n\n\n\n\n\n\nCORENTIN"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#d√©monstration",
    "href": "sections/presentations/wine_presentation.html#d√©monstration",
    "title": "üç∑ Wine Scraping",
    "section": "üöÄ D√©monstration",
    "text": "üöÄ D√©monstration\nLancement de l‚Äôapplication, 2 M√©thodes.\n\n\n\n\n\n\nDepuis un terminal :\n\n\n\n\nLancement du shell poetry :\n\npy -m poetry shell\n\nLancement de l‚Äôapplication :\n\npython -m streamlit run \"streamlit_app.py\"\n\n\n\n\n\n\n\n\nDepuis le lien de l‚Äôapplication d√©ploy√©e sur le cloud streamlit :\n\n\n\n\nLien : https://wine-scraping.streamlit.app/ \n\n\n\n\nGUILLAUME\nOn a deux m√©thodes pour lancer notre application. Je dirais m√™me, comme un vieil adage le dit : Jamais deux sans trois ! Sauf que la troisi√®me m√©thode on va la garder pour plus tard en bonus.\nLa diff√©rence entre les deux premi√®res m√©thodes c‚Äôest que l‚Äôune va tourner en local alors que l‚Äôautre est sur le cloud streamlit. Le d√©ploiement sur le cloud est assez simple : on link le repo Github, poetry installe les d√©pendances et c‚Äôest parti üöÄ."
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#un-code-de-deutsche-qualit√§t",
    "href": "sections/presentations/wine_presentation.html#un-code-de-deutsche-qualit√§t",
    "title": "üç∑ Wine Scraping",
    "section": "Un code de Deutsche Qualit√§t",
    "text": "Un code de Deutsche Qualit√§t\n\nAnnotations de type claires\nDocstrings explicites et soign√©es\nGestion des d√©pendances avec Poetry\nModularit√©\nDocker\nTests des features de l‚Äôapplication\nGit pour versionner notre projet\nBlack pour formater notre code\nUn beau README\n\nCode certifi√© conforme par l‚ÄôAgent Smith\\(^*\\)\n\\(^*\\) L‚ÄôAgent Smith tient par ailleurs √† pr√©ciser qu‚Äôil n‚Äôa re√ßu aucun pot-de-vin de notre part pour ce diagnostic malgr√© son enrichissement personnel fulgurant‚Ä¶\n\nCORENTIN\n\nOn a eu une d√©monstration de ce que notre application √©tait capable de faire, mais on a pas vraiment eu le temps de regarder en d√©tail comment nous avions con√ßu √ßa. Et pourtant, l‚Äôagent Smith nous a confirm√© que notre code √©tait de Deutsche Qualitat !"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#annotations-de-type",
    "href": "sections/presentations/wine_presentation.html#annotations-de-type",
    "title": "üç∑ Wine Scraping",
    "section": "Annotations de type",
    "text": "Annotations de type\ndef model_rf(x_train: pd.DataFrame, y_train: pd.Series, mode: str) -&gt; GridSearchCV:\n    ...\n\nExpliciter au maximum les types d‚Äôentr√©e et de sortie des fonctions.\nOn peut parler de documentation implicite \\(\\Rightarrow\\) on cherche √† √©viter √† un utilisateur d‚Äôutiliser des objets incompatibles avec ce qui a √©t√© √©tabli.\n\n\n\n\n\n\n\nNote\n\n\n\nmypy va nous permettre d‚Äôeffectuer ce contr√¥le (static type checking), c‚Äôest √† dire de v√©rifier si les valeurs assign√©es aux variables, les arguments pass√©s aux fonctions et les valeurs de retour correspondent aux types attendus.\n\n\n\nGUILLAUME"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#docstrings",
    "href": "sections/presentations/wine_presentation.html#docstrings",
    "title": "üç∑ Wine Scraping",
    "section": "Docstrings",
    "text": "Docstrings\n\nChaque fonction √† interface publique poss√®de une docstring structur√©e :\n\nNom de la fonction et description succinte\nParam√®tre(s) d‚Äôentr√©e et param√®tre(s) de sortie\n\nLev√©e d‚Äôexception (si il y en a)\nAu minimum un exemple d‚Äôutilisation\n\n\nExemple avec la fonction model_rf du module models.py :\n\"\"\"`model_rf`: Effectue une recherche exhaustive (Cross-Validation) des meilleurs param√®tres\n    en utilisant une Random Forest. Les param√®tres optimis√©s sont :\n\n    - n_estimators\n    - max_depth\n\n    ---------\n    `Parameters`\n    --------- ::\n\n        x_train (pd.DataFrame): # L'ensemble d'entrainement\n        y_train (pd.Series): # La variable √† pr√©dire\n        mode (str): # regression | classification\n\n    `Raises`\n    --------- ::\n\n        ValueError: # Une erreur est lev√©e quand le mode est invalide\n\n    `Returns`\n    --------- ::\n\n        GridSearchCV\n\n    `Example(s)`\n    ---------\n\n    &gt;&gt;&gt; model_rf(x_train=X_train, y_train=y_train, mode = \"regression\")\n    ... Entrainement du mod√®le : Random Forest\n    ... GridSearchCV(estimator=Pipeline(steps=[('imputation', SimpleImputer()),\n    ...                                   ('echelle', MinMaxScaler()),\n    ...                                   ('entrainement',\n    ...                                    RandomForestRegressor())]),\n    ...         n_jobs=-1,\n    ...         param_grid={'entrainement__max_depth': range(1, 10),\n    ...                     'entrainement__n_estimators': range(10, 50, 10),\n    ...                     'imputation__strategy': ['mean', 'median',\n    ...                                              'most_frequent']},\n    ...         return_train_score=True)\n    \"\"\"\n\nGUILLAUME\n\nUn vrai petit tutoriel pour chaque fonction\nDescription\nParam√®tres\nRaises en cas de potentiel erreur\nReturn\nExemple d‚Äôutilisation\n\nMais bon c‚Äôest bien beau ces lignes de description, pourrais-tu √™tre un peu plus po√©tique ?"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#poetry",
    "href": "sections/presentations/wine_presentation.html#poetry",
    "title": "üç∑ Wine Scraping",
    "section": "üßô‚Äç‚ôÇÔ∏è Poetry",
    "text": "üßô‚Äç‚ôÇÔ∏è Poetry\nGestion des d√©pendances : poetry simplifie la gestion des d√©pendances en utilisant un fichier de configuration pyproject.toml. Il permet de sp√©cifier les d√©pendances directes et les d√©pendances de d√©veloppement requises pour le projet.\nEnvironnement Virtuel : venv isol√© pour le projet, aidant √† maintenir un environnement de d√©veloppement propre et √©vitant les conflits entre les versions des packages.\nInstallation de d√©pendances : Facilite l‚Äôinstallation des d√©pendances d√©finies dans le fichier de configuration en utilisant la commande poetry install.\npy -m poetry install\n\nCORENTIN\nEh bien Guillaume, avec poetry on va faire rimer nos d√©pendances !\nRapidement, on a d√©cid√© d‚Äôopter pour poetry car le moment fatidique ou un d‚Äôentre nous d√©cide d‚Äôinstaller localemet un package et que l‚Äôautre ne l‚Äôa pas arrivait un peu trop souvent et √ßa c‚Äô√©tait pas super po√©tique justement."
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#modulaire",
    "href": "sections/presentations/wine_presentation.html#modulaire",
    "title": "üç∑ Wine Scraping",
    "section": "üö¢ Modulaire !",
    "text": "üö¢ Modulaire !\nS√©paration des composants du projet :\n‚îú‚îÄ‚îÄ‚îÄdata\n‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüç∑vins.json\n‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüíæwine_links.csv\n‚îÇ   ‚îî‚îÄ‚îÄ‚îÄtables\n‚îÇ       ‚îú‚îÄ‚îÄ‚îÄüíæpred_classification.csv\n‚îÇ       ‚îú‚îÄ‚îÄ‚îÄüíæpred_regression.csv\n‚îÇ       ‚îú‚îÄ‚îÄ‚îÄüíæresult_ml_classification.csv\n‚îÇ       ‚îî‚îÄ‚îÄ‚îÄüíæresult_ml_regression.csv\n‚îÇ       ‚îî‚îÄ‚îÄ‚îÄüíæimportance.csv\n‚îú‚îÄ‚îÄ‚îÄsrc\n‚îÇ   ‚îî‚îÄ‚îÄ‚îÄüì¶modules\n‚îÇ       ‚îú‚îÄ‚îÄ‚îÄ‚öôapp\n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüêçst_functions.py\n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüêçst_plots.py\n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüêçst_selectors.py\n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüêçst_tables.py\n‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ‚îÄüêçst_tables.py\n‚îÇ       ‚îú‚îÄ‚îÄ‚îÄ‚öôml_models\n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüêçimportance_script.py\n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüêçmodels.py\n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüêçoptimisation_script.py\n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüêçprediction_script.py\n‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ‚îÄüêçprediction.py\n‚îÇ       ‚îú‚îÄ‚îÄ‚îÄ‚öôscraping\n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüêçmystical_soup.py\n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüêçpage_scraper.py\n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüêçscraping_functions.py\n‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ‚îÄüêçvin_dataclass.py\n‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ‚îÄüêçwine_scraper.py\n‚îÇ       ‚îú‚îÄ‚îÄ‚îÄüêçml_trigger.py\n‚îÇ       ‚îú‚îÄ‚îÄ‚îÄüêçscraping_trigger.py\n‚îÇ       ‚îú‚îÄ‚îÄ‚îÄüêçbear_cleaner.py\n‚îÇ       ‚îî‚îÄ‚îÄ‚îÄüêçutils.py\n‚îú‚îÄ‚îÄ‚îÄüê≥Dockerfile\n‚îú‚îÄ‚îÄ‚îÄüßô‚Äç‚ôÇÔ∏èpoetry.lock\n‚îú‚îÄ‚îÄ‚îÄüìçpyproject.toml\n‚îú‚îÄ‚îÄ‚îÄüìòREADME.md\n‚îî‚îÄ‚îÄ‚îÄüêçstreamlit_app.py\n\nGUILLAUME\n\nLe projet commen√ßant a √™tre bien fourni, n√©c√©ssit√© de modulariser le tout pour apporter un peu de clart√© pour le d√©veloppeur."
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#docker-partie-i",
    "href": "sections/presentations/wine_presentation.html#docker-partie-i",
    "title": "üç∑ Wine Scraping",
    "section": "üê≥ Docker, Partie I",
    "text": "üê≥ Docker, Partie I\nPourquoi utiliser Docker ?\nIsolation : Docker permet d‚Äôisoler l‚Äôapplication, ses d√©pendances et son environnement d‚Äôex√©cution dans un conteneur. Cela signifie que l‚Äôapplication s‚Äôex√©cute avec ses propres ressources et d√©pendances sans affecter l‚Äôenvironnement h√¥te.\nPortabilit√© : Une fois que l‚Äôimage Docker est cr√©√©e, elle peut √™tre ex√©cut√©e sur n‚Äôimporte quel syst√®me prenant en charge Docker, offrant une portabilit√© √©lev√©e.\n\nComment ? \\(\\Rightarrow\\) Dockerfile\nDocker assure la reproductibilit√© en permettant √† n‚Äôimporte qui de construire et d‚Äôex√©cuter le m√™me conteneur √† partir des sp√©cifications d√©finies dans le Dockerfile.\n\nCORENTIN\nLe Dockerfile sp√©cifie les √©tapes pour installer les d√©pendances de l‚Äôapplication (dans ce cas, on va utiliser poetry pour g√©rer les d√©pendances) et configurer un environnement minimaliste √† l‚Äôint√©rieur du conteneur."
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#docker-partie-ii",
    "href": "sections/presentations/wine_presentation.html#docker-partie-ii",
    "title": "üç∑ Wine Scraping",
    "section": "üê≥ Docker, Partie II",
    "text": "üê≥ Docker, Partie II\n\nContenu du Dockerfile :\n\nFROM python:3.10-slim-buster\nWORKDIR /app\n\nCOPY pyproject.toml poetry.lock ./\n\nRUN pip install poetry \\ \n    && poetry config virtualenvs.create false \\\n    && poetry install --no-dev --no-interaction --no-ansi\n\nCOPY streamlit_app.py .\nCOPY src ./src\nCOPY data ./data\nCOPY img ./img\n\nRUN addgroup --system app \\\n    && adduser --system --group app\n\nUSER app\n\nEXPOSE 8501\n\nHEALTHCHECK CMD curl --fail http://localhost:8501/_stcore/health\n\nENTRYPOINT [\"python\", \"-m\", \"streamlit\", \"run\", \"streamlit_app.py\", \"--server.port=8501\", \"--server.address=0.0.0.0\"]\n\nCORENTIN\nRegardons plus en d√©tail ce que contient ce Dockerfile.\nFROM python:3.10-slim-buster\n\nFROM python:3.10-slim-buster \\(\\Rightarrow\\) sp√©cifie l‚Äôimage de base √† partir de laquelle notre image Docker sera construite. On utilise l‚Äôimage Python 3.10-slim-buster comme base. Cette image slim-buster est une version r√©duite plus rapide de l‚Äôimage compl√®te avec le minimum de d√©pendances possible.\nWORKDIR /app \\(\\Rightarrow\\) d√©finit le r√©pertoire de travail dans le conteneur. Toutes les instructions suivantes sont ex√©cut√©es √† partir de ce r√©pertoire.\nCOPY pyproject.toml poetry.lock ./ \\(\\Rightarrow\\) copie les fichiers pyproject.toml et poetry.lock depuis le r√©pertoire local dans le r√©pertoire app du conteneur.\nRUN pip install poetry && poetry config virtualenvs.create false && poetry install ‚Äìno-dev ‚Äìno-interaction ‚Äìno-ansi \\(\\Rightarrow\\) Ex√©cute plusieurs commandes en une seule instruction RUN :\n\nOn installe poetry dans le conteneur via pip.\nOn configure poetry pour ne pas cr√©er d‚Äôenvironnement virtuel.\nOn Installe les d√©pendances du projet √† partir de poetry.lock, en excluant les d√©pendances de d√©veloppement (‚Äìno-dev), sans interaction (‚Äìno-interaction) et sans afficher de couleurs ANSI (‚Äìno-ansi). En effet, on ne copie pas nos tests dans le conteneur, √ßa alourdirait l‚Äôimage pour rien.\n\nCOPY streamlit_app.py \\(\\Rightarrow\\) On copie le fichier streamlit_app.py, le dossier src, data et img depuis le r√©pertoire local dans le r√©pertoire app du conteneur.\nRUN addgroup ‚Äìsystem app && adduser ‚Äìsystem ‚Äìgroup app \\(\\Rightarrow\\) Cr√©e un groupe syst√®me appel√© app et un utilisateur syst√®me √©galement appel√© app - On veut ABSOLUMENT √©viter d‚Äôutiliser l‚Äôutilisateur root donc c‚Äôest pas pour √ßa qu‚Äôon configure un utilisateur\nUSER app \\(\\Rightarrow\\) D√©finit l‚Äôutilisateur qui ex√©cutera les commandes suivantes dans le conteneur comme √©tant l‚Äôutilisateur app.\nEXPOSE 8501 \\(\\Rightarrow\\) Expose le port 8501. Indique simplement quel port qui doit √™tre publi√© lors de l‚Äôex√©cution de l‚Äôimage.\nHEALTHCHECK \\(\\Rightarrow\\) Pour tester si le conteneur fonctionne toujours correctement.\nENTRYPOINT \\(\\Rightarrow\\) D√©finit la commande d‚Äôentr√©e √† ex√©cuter quand le conteneur bas√© sur l‚Äôimage est d√©marr√©. Dans notre cas, on fait un streamlit run de notre application sur le port 8501."
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#le-conteneur-en-action",
    "href": "sections/presentations/wine_presentation.html#le-conteneur-en-action",
    "title": "üç∑ Wine Scraping",
    "section": "üèóÔ∏è Le conteneur en action !",
    "text": "üèóÔ∏è Le conteneur en action !\nIl faut tout d‚Äôabord s‚Äôassurer d‚Äôavoir t√©l√©charg√© Docker Desktop avant toute chose.\nUne fois install√©, l‚Äôimage est construite en ex√©cutant la commande suivante dans un terminal :\ndocker image build . -t \"wine_scraping\"\nUne fois la cr√©ation de l‚Äôimage termin√©e, on peut consulter la taille de celle-ci avec :\ndocker images\nEnsuite, pour lancer le conteneur Docker avec l‚Äôutilisateur app sur le port initial (8501) de streamlit, il suffit de faire :\ndocker run -u app -p 8501:8501 wine_scraping\nüéâ Une fois le conteneur lanc√©, on le voit apparaitre dans Docker Desktop. Pour acc√©der √† l‚Äôapplication, il faut se rendre sur http://localhost:8501/.\n\nCORENTIN"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#fin",
    "href": "sections/presentations/wine_presentation.html#fin",
    "title": "üç∑ Wine Scraping",
    "section": "Fin",
    "text": "Fin\n\nOn ne sait pas pourquoi on a fait tout √ßa, car nous voulions simplement trouver une bouteille pour f√™ter notre anniversaire, et on se retrouve avec une application d‚Äôanalyse de donn√©es qui ne nous aide en aucun cas √† trouver notre breuvage‚Ä¶üòµ\n\n\nJe dirais m√™me pour compl√©ter cette conclusion que la cr√©ation de cette application : C‚Äôest un petit pas pour l‚Äôhomme mais un grand pas pour l‚Äôhumanit√©."
  },
  {
    "objectID": "sections/presentations/wine_presentation.html#r√©f√©rences",
    "href": "sections/presentations/wine_presentation.html#r√©f√©rences",
    "title": "üç∑ Wine Scraping",
    "section": "R√©f√©rences",
    "text": "R√©f√©rences\n\nImages : DALL-E\nGuide Utilisateur : scikit-learn"
  },
  {
    "objectID": "sections/presentations/wine_presentation.html",
    "href": "sections/presentations/wine_presentation.html",
    "title": "üç∑ Wine Scraping",
    "section": "",
    "text": "Le 18 janvier approche, une date en apparence anodine mais tr√®s importante pour nos deux comp√®res.\nPour cette journ√©e festive, nos 2 protagonistes se rendirent sur vinatis.com pour trouver un breuvage.\nEt c‚Äôest √† ce moment que l‚Äôhistoire prend racine‚Ä¶\n\n\n\n\n\n\n\n\n\n\nOn parle de moi ?\n\n\n\nGUILLAUME\n\nNous avons commenc√© √† rechercher notre proie d√®s fin septembre pour faire quelques tests, notamment sur la partie scraping."
  },
  {
    "objectID": "sections/projects/bagnoles.html",
    "href": "sections/projects/bagnoles.html",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "",
    "text": "L‚Äôentreprise Car-Nivor souhaite se lancer dans la production de voitures et a d√©j√† imagin√© plusieurs mod√®les. Elle commence par analyser le march√© avec les mod√®les Tiger (A) et Piranha (B).\nVoici les informations qui ressortent de cette analyse :\n\nLe mod√®le A lui apporte un b√©n√©fice de 3 000 ‚Ç¨ par unit√© vendue, tandis que le mod√®le B lui apporte un b√©n√©fice de 2 000 ‚Ç¨ par unit√© vendue.\nLa production d‚Äôune voiture de mod√®le A prend 2 heures tandis que celle d‚Äôune voiture de mod√®le B prend seulement 1 heure1.\nPour des raisons d‚Äôabsorption de march√©, Car-Nivor ne peut pas vendre plus de 100 mod√®les A, 100 mod√®les B et 150 voitures (A+B) au total par mois.\nEnfin, l‚Äôusine de production n‚Äôest disponible que 200 heures par mois."
  },
  {
    "objectID": "sections/projects/bagnoles.html#introduction-au-probl√®me",
    "href": "sections/projects/bagnoles.html#introduction-au-probl√®me",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "",
    "text": "L‚Äôentreprise Car-Nivor souhaite se lancer dans la production de voitures et a d√©j√† imagin√© plusieurs mod√®les. Elle commence par analyser le march√© avec les mod√®les Tiger (A) et Piranha (B).\nVoici les informations qui ressortent de cette analyse :\n\nLe mod√®le A lui apporte un b√©n√©fice de 3 000 ‚Ç¨ par unit√© vendue, tandis que le mod√®le B lui apporte un b√©n√©fice de 2 000 ‚Ç¨ par unit√© vendue.\nLa production d‚Äôune voiture de mod√®le A prend 2 heures tandis que celle d‚Äôune voiture de mod√®le B prend seulement 1 heure.\nPour des raisons d‚Äôabsorption de march√©, Car-Nivor ne peut pas vendre plus de 100 mod√®les A, 100 mod√®les B et 150 voitures (A+B) au total par mois.\nEnfin, l‚Äôusine de production n‚Äôest disponible que 200 heures par mois."
  },
  {
    "objectID": "sections/projects/bagnoles.html#mod√©lisation",
    "href": "sections/projects/bagnoles.html#mod√©lisation",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "2 Mod√©lisation",
    "text": "2 Mod√©lisation\n\nAvant de se lancer t√™te baiss√©e dans l‚Äôutilisation d‚Äôun mod√®le de Boosting, r√©fl√©chissons un peu et posons-nous quelques questions.\n\n\nQuelles quantit√©s peut-on faire varier ? \\(\\Rightarrow\\) Les quantit√©s de mod√®les A et B.\nQue cherche-t-on √† optimiser ? \\(\\Rightarrow\\) Le profit de Car-Nivor.\nQuelles sont les contraintes du probl√®me ? \\(\\Rightarrow\\) Les contraintes de production et les contraintes de march√©\n\n\n\n\n\n\n\nNote\n\n\n\nOn voit en fait qu‚Äôon peut formuler cet √©nonc√© sous la forme d‚Äôun probl√®me d‚Äôoptimisation lin√©aire sous contraintes !\n\n\nPlus pr√©cis√©ment, on consid√®re les notations suivantes :\n\n\\(x_1\\) est la quantit√© vendue de mod√®le A,\n\\(x_2\\) est la quantit√© vendue de mod√®le B,\n\\(M_1\\) est le b√©n√©fice en k‚Ç¨ par unit√© vendue de mod√®le A,\n\\(M_2\\) est le b√©n√©fice en k‚Ç¨ par unit√© vendue de mod√®le B,\n\\(z\\) est le profit de Car-nivor, qu‚Äôon souhaite maximiser ‚Äì on parle de fonction objectif,\n\\(S\\) correspond √† l‚Äôensemble des contraintes du probl√®me.\n\n\n\\[\n\\max_{slc \\hspace{1mm} (S)} z = M_1x_1 + M_2x_2\n\\]\n\\[\n\\max_{slc \\hspace{1mm} (S)} z = 3x_1 + 2x_2\n\\]\n\\[\n(S) : \\left \\{\n\\begin{array}\\\\\n    x_1\\geq 0 \\hspace{0.1em} ; \\hspace{0.1em} x_2 \\geq 0\\\\\n    x_1 \\leq 100 \\\\\n    x_2 \\leq 100 \\\\\n    2x_1 + x_2 \\leq 200 \\\\\n    x_1 + x_2 \\leq 150\n         \\end{array}\n                        \\right.\n\\]\n\n\n\n\n\n\nInterpr√©tation des contraintes\n\n\n\n\nLa premi√®re contrainte indique qu‚Äôon ne peut pas produire de quantit√© n√©gative de voiture,\nLa seconde contrainte indique qu‚Äôon ne peut pas vendre plus de 100 mod√®les de type A,\nLa troisi√®me contrainte indique qu‚Äôon ne peut pas vendre plus de 100 mod√®les de type B,\nLa quatri√®me contrainte porte sur le temps de disponibilit√© de l‚Äôusine (200h),\nLa derni√®re contrainte indique qu‚Äôil est possible de produire au maximum 150 voitures de Type A ou B, et pas plus."
  },
  {
    "objectID": "sections/projects/bagnoles.html#import-des-librairies-et-configuration",
    "href": "sections/projects/bagnoles.html#import-des-librairies-et-configuration",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "Import des librairies et configuration",
    "text": "Import des librairies et configuration\n\nimport numpy as np\nimport scipy.optimize as so\nimport matplotlib.pyplot as plt\nfrom ipywidgets import interactive\nimport ipywidgets\nimport sympy as sym\nimport pandas as pd\nfrom math import pi\n\n\nplt.rc('figure', figsize=(9,9))"
  },
  {
    "objectID": "sections/projects/bagnoles.html#r√©solution",
    "href": "sections/projects/bagnoles.html#r√©solution",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "3 R√©solution",
    "text": "3 R√©solution\n\n3.1 Import des librairies et configuration\n\nimport numpy as np\nimport scipy.optimize as so\nimport matplotlib.pyplot as plt\nfrom rich import print\nfrom rich.panel import Panel\nimport sympy as sym\nimport pandas as pd\nfrom math import pi\n\n\nplt.rcParams[\"figure.dpi\"] = 600\n\n\n\n3.2 Repr√©sentation graphique du probl√®me\n\nOn peut facilement repr√©senter dans un graph en \\(2D\\) l‚Äôensemble des contraintes et proposer une solution graphique au probl√®me puisqu‚Äôon dispose uniquement de 2 variables.\n\n\nx = np.linspace(0, 150, 500)\ny2 = 200 - 2 * x\ny3 = 150 - x\nz = (350 - 3 * x) / 2\n\n\n\nCode du graphique matplotlib\nplt.hlines(\n    y=100, xmin=0, xmax=150, linewidth=2, color=\"r\", label=\"$x_2 ‚â§ 100$\", zorder=1\n)\nplt.vlines(\n    x=100, ymin=0, ymax=150, linewidth=2, color=\"m\", label=\"$x_1 ‚â§ 100$\", zorder=1\n)\nplt.plot(x, y2, label=\"$2x_1 + x_2 \\leq 200 $\", zorder=1)\nplt.plot(x, y3, label=\"$x_1 + x_2 \\leq 150$\", zorder=1)\nplt.plot(x, z, label=\"$z = 350k$\", zorder=1)\n\nplt.scatter(50, 100, color=\"black\", zorder=2)\nplt.fill_between([0, 49.9], [100, 100], [0, 0], hatch=\"//\", color=\"blue\", alpha=0.2)\nplt.fill_between(\n    x,\n    np.min([y2, y3], axis=0),\n    where=y2 &lt; 100,\n    color=\"blue\",\n    alpha=0.2,\n    hatch=\"//\",\n    interpolate=True,\n    label=\"$admissible$\",\n)\n\nplt.xlabel(\"$x_1$\", fontsize=15)\nplt.ylabel(\"$x_2$\", fontsize=15)\nplt.ylim([0, 125])\nplt.xlim([0, 125])\n\nplt.title(\"Ensemble des solutions admissibles\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\n\n\n3.3 Mise sous forme normale du probl√®me\nOn a 4 √©quations dans le syst√®me des contraintes donc le rang est √©gal √† 4.\nLes variables positives sont appel√©es les variables de base :\n\\[\n\\beta = \\begin{pmatrix}\nX_1\\\\\nX_2\\\\\nX_3\\\\\nX_4\\\\\n\\end{pmatrix}\n\\]\nL‚Äôid√©e est ensuite d‚Äôexprimer les variables de base en fonction des variables hors base (\\(x_1\\) et \\(x_2\\)) \\(\\Rightarrow\\) On r√©√©crit donc le syst√®me comme suit :\n\\[\n\\left \\{\n\\begin{array}\\\\\n    X_1 = 100 - x_1\\\\\n    X_2 = 100 - x_2\\\\\n    X_3 = 200 - 2x_1 - x_2\\\\\n    X_4 = 150 - x_1 - x_2\\\\\n\\end{array}\n\\right.\n\\]\n\n\n3.4 R√©solution avec scipy\n\nLe submodule scipy.optimize fournit un ensemble de fonctions pour minimiser (ou maximiser) des fonctions objectif, possiblement sujettes √† certaines contraintes.\n\nIl faut d‚Äôabord √©crire les matrices de travail avec numpy.\n\ncost_1 = np.array([3, 2])\nlhs_1 = np.array([[1, 0], [0, 1], [2, 1], [1, 1]])\nrhs_1 = np.array([100, 100, 200, 150])\n\n\ncost_1 correspond √† la matrice de co√ªt, i.e. les coefficients \\(M_1\\) et \\(M_2\\),\nlhs_11 correspond au premier membre de la matrice des contraintes,\nrhs_12 correspond au second membre de la matrice des contraintes.\n\nPr√©visualisons-les avec sympy.\n\ndisplay(sym.Matrix(cost_1))\ndisplay(sym.Matrix(lhs_1))\ndisplay(sym.Matrix(rhs_1))\n\n\\(\\displaystyle \\left[\\begin{matrix}3\\\\2\\end{matrix}\\right]\\)\n\n\n\\(\\displaystyle \\left[\\begin{matrix}1 & 0\\\\0 & 1\\\\2 & 1\\\\1 & 1\\end{matrix}\\right]\\)\n\n\n\\(\\displaystyle \\left[\\begin{matrix}100\\\\100\\\\200\\\\150\\end{matrix}\\right]\\)\n\n\nPour r√©soudre le probl√®me, on peut utiliser la fonction linprog du submodule scipy.optimize, dont l‚Äôalgorithme effectue par d√©faut une minimisation.\nComme nous souhaitons plut√¥t maximiser la fonction objectif, il faut inverser le signe de la fonction de co√ªt.\n\nresult_1 = so.linprog(-cost_1, A_ub = lhs_1, b_ub = rhs_1, method = \"highs\")\n\nProfitons-en aussi pour cr√©er les fonctions :\n\ntotal_profit qui retourne le profit total optimal,\ndetails qui affiche le profit ainsi que les quantit√©s de voitures vendues.\n\n\n\nCode des fonctions\ndef total_profit(result: so._optimize.OptimizeResult, cost: np.ndarray) -&gt; np.float64:\n    \"\"\"Retourne le profit total en ‚Ç¨ li√© √† la vente de voitures.\"\"\"\n    return np.sum(result[\"x\"] * cost * 1000)\n\n\ndef details(result: so._optimize.OptimizeResult, cost: np.ndarray, types: list) -&gt; str:\n    \"\"\"\n    Affiche un message contenant le profit optimal r√©alis√©\n    ainsi que le nombre et le type de voiture vendues.\n    \"\"\"\n    profit = int(total_profit(result, cost))\n    message = f\"\"\"\nLe profit optimal r√©alis√© par [i]Car-Nivor[/i] est de [u]{profit}[/u] ‚Ç¨ par mois.\n    \n=&gt; Pour :\n    \n\"\"\"\n    for voiture, type_voiture in zip(result[\"x\"], types):\n        message += f\"- {voiture.astype(int)} voitures vendues de [red][b]Type {type_voiture}[/b][/red] \\n\"\n    return Panel(message)\n\n\nIl suffit maintenant d‚Äôappeler la fonction details pour obtenir les r√©sultats.\n\ndetails(result_1, cost_1, [\"A\", \"B\"])\n\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ Le profit optimal r√©alis√© par Car-Nivor est de 350000 ‚Ç¨ par mois.                                               ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ =&gt; Pour :                                                                                                       ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ - 50 voitures vendues de Type A                                                                                 ‚îÇ\n‚îÇ - 100 voitures vendues de Type B                                                                                ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n\n\n\n\n\n3.5 Effondrement de la demande en mod√®le B\n\nA cause de constructeurs chinois, Car-Nivor ne peut plus √©couler qu‚Äôun maximum de 50 voitures par mois.\n\n\n3.5.1 Graphique de la situation\n\n\nCode du graphique matplotlib\nplt.hlines(y=50, xmin=0, xmax=150, linewidth=2, color=\"r\", label=\"$x_2 ‚â§ 50$\", zorder=1)\nplt.vlines(\n    x=100, ymin=0, ymax=150, linewidth=2, color=\"m\", label=\"$x_1 ‚â§ 100$\", zorder=1\n)\n\nz = (325 - 3 * x) / 2\n\nplt.plot(x, y2, label=\"$2x_1 + x_2 \\leq 200 $\", zorder=1)\nplt.plot(x, y3, label=\"$x_1 + x_2 \\leq 150$\", zorder=1)\nplt.plot(x, z, label=\"$z = 325k$\", zorder=1)\n\nplt.scatter(\n    75, 50, color=\"black\", zorder=2\n)\n\nplt.fill_between(\n    [0, 75],\n    [49.9, 49.9],\n    [0, 0],\n    hatch=\"//\",\n    color=\"blue\",\n    alpha=0.2,\n    interpolate=True,\n    label=\"$admissible$\",\n)\n\nplt.fill_between(\n    x, y2, hatch=\"//\", color=\"blue\", where=y2 &lt; 50, alpha=0.2, interpolate=True\n)\n\nplt.xlabel(\"$x_1$\", fontsize=15)\nplt.ylabel(\"$x_2$\", fontsize=15)\nplt.ylim([0, 125])\nplt.xlim([0, 125])\nplt.title(\"Ensemble des solutions admissibles\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\nPour faire une r√©solution num√©rique , il suffit simplement de changer le second membre de la matrice des contraintes.\n\nrhs_2 = np.array([100, 50, 200, 150])\n\n\nresult_2 = so.linprog(-cost_1, A_ub = lhs_1, b_ub = rhs_2, method = \"highs\")\n\n\ndetails(result_2, cost_1, [\"A\", \"B\"])\n\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ Le profit optimal r√©alis√© par Car-Nivor est de 325000 ‚Ç¨ par mois.                                               ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ =&gt; Pour :                                                                                                       ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ - 75 voitures vendues de Type A                                                                                 ‚îÇ\n‚îÇ - 50 voitures vendues de Type B                                                                                 ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n\n\n\n\nOn voit qu‚Äôun effondrement de la demande en voiture de Type B entra√Æne une surproduction de voitures de Type A, mais que cette surproduction ne permet pas d‚Äôobtenir le profit optimal avant l‚Äôeffondrement de la demande de Type B.\n\n\n\n3.6 Analyse d√©taill√©e du probl√®me\nOn veut √©tudier graphiquement l‚Äô√©volution du profit en fonction du nombre maximal de voitures vendues de type B.\n\nPour faire ceci, je vais utiliser une boucle for et faire varier le second membre de la contrainte pour \\(x_2\\).\n\n\nlist_x2 = [x for x in range(0,101)]\ncost_2 = np.array ([3, 2])\nlhs_2 = np.array ([[1,0],[0,1],[2,1],[1,1]])\n\nx1_vente = list()\nx2_vente = list()\nprofit = list()\n\nfor x2_max in list_x2:\n    rhs_2 = np.array([100,x2_max,200,150])\n    max_bagnole = so.linprog(-cost_2, A_ub = lhs_2, b_ub = rhs_2, method = \"highs\")\n    x1_vente.append(max_bagnole[\"x\"][0])\n    x2_vente.append(max_bagnole[\"x\"][1])\n    profit.append(-max_bagnole[\"fun\"]*1000)\n\n\n\nCode du graphique matplotlib\nplt.plot(list_x2, profit)\nplt.xlabel(\"Valeur max de $x_2$\")\nplt.ylabel(\"Profit en ‚Ç¨\")\nplt.hlines(y=325000, xmin=0, xmax=50, linewidth=2, linestyles=\"--\", color=\"m\")\nplt.vlines(x=50, ymin=300000, ymax=325000, linewidth=2, linestyles=\"--\", color=\"m\")\n\nplt.hlines(y=350000, xmin=0, xmax=100, linewidth=2, linestyles=\"--\", color=\"m\")\nplt.vlines(x=100, ymin=300000, ymax=350000, linewidth=2, linestyles=\"--\", color=\"m\")\n\nplt.scatter(50, 325000, color=\"red\", zorder=2, label=\"œÄ2 = 325k\")\nplt.scatter(100, 350000, color=\"green\", zorder=2, label=\"œÄ1 = 350k\")\n\nplt.ylim([300000, 351000])\nplt.xlim([0, 105])\nplt.title(\n    f\"Profit optimal en fonction de la valeur de $x_2$ compris entre [{list_x2[0]}:{list_x2[-1]}] \"\n)\n\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0);\n\n\n\n\n\n\n\n\n\nOn remarque que le profit est croissant en fonction de la valeur maximale de \\(x_2\\) (c‚Äôest √† dire de voitures vendues de type B), ce dont on pouvait se douter √©tant donn√© les r√©sultats pr√©c√©dents."
  },
  {
    "objectID": "sections/projects/bagnoles.html#footnotes",
    "href": "sections/projects/bagnoles.html#footnotes",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "Notes de bas de page",
    "text": "Notes de bas de page\n\n\nCes valeurs sont clairement fantaisistes et ne refl√®tent pas du tout le temps moyen d‚Äôassemblage r√©el d‚Äôune voiture, qui d√©pend de nombreux facteurs.‚Ü©Ô∏é\nLHS = Left Hand Side / Premier membre d‚Äôune √©quation.‚Ü©Ô∏é\nRHS = Right Hand Side / Second membre d‚Äôune √©quation.‚Ü©Ô∏é"
  },
  {
    "objectID": "sections/projects/bagnoles.html#introduction-au-probl√®me-1",
    "href": "sections/projects/bagnoles.html#introduction-au-probl√®me-1",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "",
    "text": "L‚Äôentreprise Car-Nivor souhaite se lancer dans la production de voitures et a d√©j√† imagin√© plusieurs mod√®les. Elle commence par analyser le march√© avec les mod√®les Tiger (A) et Piranha (B).\nVoici les informations qui ressortent de cette analyse :\n\nLe mod√®le A lui apporte un b√©n√©fice de 3 000 ‚Ç¨ par unit√© vendue, tandis que le mod√®le B lui apporte un b√©n√©fice de 2 000 ‚Ç¨ par unit√© vendue.\nLa production d‚Äôune voiture de mod√®le A prend 2 heures tandis que celle d‚Äôune voiture de mod√®le B prend seulement 1 heure.\nPour des raisons d‚Äôabsorption de march√©, Car-Nivor ne peut pas vendre plus de 100 mod√®les A, 100 mod√®les B et 150 voitures (A+B) au total par mois.\nEnfin, l‚Äôusine de production n‚Äôest disponible que 200 heures par mois."
  },
  {
    "objectID": "sections/projects/bagnoles.html#mod√©lisation-du-probl√®me-1",
    "href": "sections/projects/bagnoles.html#mod√©lisation-du-probl√®me-1",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "2 Mod√©lisation du probl√®me 1",
    "text": "2 Mod√©lisation du probl√®me 1\n\nAvant de se lancer t√™te baiss√©e dans l‚Äôutilisation d‚Äôun mod√®le de Boosting, r√©fl√©chissons un peu et posons-nous quelques questions.\n\n\nQuelles quantit√©s peut-on faire varier ? \\(\\Rightarrow\\) Les quantit√©s de mod√®les A et B.\nQue cherche-t-on √† optimiser ? \\(\\Rightarrow\\) Le profit de Car-Nivor.\nQuelles sont les contraintes du probl√®me ? \\(\\Rightarrow\\) Les contraintes de production et les contraintes de march√©\n\n\n\n\n\n\n\nNote\n\n\n\nOn voit en fait qu‚Äôon peut formuler cet √©nonc√© sous la forme d‚Äôun probl√®me d‚Äôoptimisation lin√©aire sous contraintes !\n\n\nPlus pr√©cis√©ment, on consid√®re les notations suivantes :\n\n\\(x_1\\) est la quantit√© vendue de mod√®le A,\n\\(x_2\\) est la quantit√© vendue de mod√®le B,\n\\(M_1\\) est le b√©n√©fice en k‚Ç¨ par unit√© vendue de mod√®le A,\n\\(M_2\\) est le b√©n√©fice en k‚Ç¨ par unit√© vendue de mod√®le B,\n\\(z\\) est le profit de Car-nivor, qu‚Äôon souhaite maximiser ‚Äì on parle de fonction objectif,\n\\(S\\) correspond √† l‚Äôensemble des contraintes du probl√®me.\n\n\n\\[\n\\max_{slc \\hspace{1mm} (S)} z = M_1x_1 + M_2x_2\n\\]\n\\[\n\\max_{slc \\hspace{1mm} (S)} z = 3x_1 + 2x_2\n\\]\n\\[\n(S) : \\left \\{\n\\begin{array}\\\\\n    x_1\\geq 0 \\hspace{0.1em} ; \\hspace{0.1em} x_2 \\geq 0\\\\\n    x_1 \\leq 100 \\\\\n    x_2 \\leq 100 \\\\\n    2x_1 + x_2 \\leq 200 \\\\\n    x_1 + x_2 \\leq 150\n         \\end{array}\n                        \\right.\n\\]\n\n\n\n\n\n\nInterpr√©tation des contraintes\n\n\n\n\nLa premi√®re contrainte indique qu‚Äôon ne peut pas produire de quantit√© n√©gative de voiture,\nLa seconde contrainte indique qu‚Äôon ne peut pas vendre plus de 100 mod√®les de type A,\nLa troisi√®me contrainte indique qu‚Äôon ne peut pas vendre plus de 100 mod√®les de type B,\nLa quatri√®me contrainte porte sur le temps de disponibilit√© de l‚Äôusine (200h),\nLa derni√®re contrainte indique qu‚Äôil est possible de produire au maximum 150 voitures de Type A ou B, et pas plus."
  },
  {
    "objectID": "sections/projects/bagnoles.html#r√©solution-du-probl√®me-1",
    "href": "sections/projects/bagnoles.html#r√©solution-du-probl√®me-1",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "3 R√©solution du probl√®me 1",
    "text": "3 R√©solution du probl√®me 1\n\n3.1 Import des librairies et configuration\n\nimport numpy as np\nimport scipy.optimize as so\nimport matplotlib.pyplot as plt\nfrom rich import print\nfrom rich.panel import Panel\nimport sympy as sym\nimport pandas as pd\nfrom math import pi\n\n\nplt.rcParams[\"figure.dpi\"] = 600\n\n\n\n3.2 Repr√©sentation graphique du probl√®me\n\nOn peut facilement repr√©senter dans un graph en \\(2D\\) l‚Äôensemble des contraintes et proposer une solution graphique au probl√®me puisqu‚Äôon dispose uniquement de 2 variables.\n\n\nx = np.linspace(0, 150, 500)\ny2 = 200 - 2 * x\ny3 = 150 - x\nz = (350 - 3 * x) / 2\n\n\n\nCode du graphique matplotlib\nplt.hlines(\n    y=100, xmin=0, xmax=150, linewidth=2, color=\"r\", label=\"$x_2 ‚â§ 100$\", zorder=1\n)\nplt.vlines(\n    x=100, ymin=0, ymax=150, linewidth=2, color=\"m\", label=\"$x_1 ‚â§ 100$\", zorder=1\n)\nplt.plot(x, y2, label=\"$2x_1 + x_2 \\leq 200 $\", zorder=1)\nplt.plot(x, y3, label=\"$x_1 + x_2 \\leq 150$\", zorder=1)\nplt.plot(x, z, label=\"$z = 350k$\", zorder=1)\n\nplt.scatter(50, 100, color=\"black\", zorder=2)\nplt.fill_between([0, 49.9], [100, 100], [0, 0], hatch=\"//\", color=\"blue\", alpha=0.2)\nplt.fill_between(\n    x,\n    np.min([y2, y3], axis=0),\n    where=y2 &lt; 100,\n    color=\"blue\",\n    alpha=0.2,\n    hatch=\"//\",\n    interpolate=True,\n    label=\"$admissible$\",\n)\n\nplt.xlabel(\"$x_1$\", fontsize=15)\nplt.ylabel(\"$x_2$\", fontsize=15)\nplt.ylim([0, 125])\nplt.xlim([0, 125])\n\nplt.title(\"Ensemble des solutions admissibles\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\n\n\n3.3 Mise sous forme normale du probl√®me\nOn a 4 √©quations dans le syst√®me des contraintes donc le rang est √©gal √† 4.\nLes variables positives sont appel√©es les variables de base :\n\\[\n\\beta = \\begin{pmatrix}\nX_1\\\\\nX_2\\\\\nX_3\\\\\nX_4\\\\\n\\end{pmatrix}\n\\]\nL‚Äôid√©e est ensuite d‚Äôexprimer les variables de base en fonction des variables hors base (\\(x_1\\) et \\(x_2\\)) \\(\\Rightarrow\\) On r√©√©crit donc le syst√®me comme suit :\n\\[\n\\left \\{\n\\begin{array}\\\\\n    X_1 = 100 - x_1\\\\\n    X_2 = 100 - x_2\\\\\n    X_3 = 200 - 2x_1 - x_2\\\\\n    X_4 = 150 - x_1 - x_2\\\\\n\\end{array}\n\\right.\n\\]\n\n\n3.4 R√©solution avec scipy\n\nLe submodule scipy.optimize fournit un ensemble de fonctions pour minimiser (ou maximiser) des fonctions objectif, possiblement sujettes √† certaines contraintes.\n\nIl faut d‚Äôabord √©crire les matrices de travail avec numpy.\n\ncost_1 = np.array([3, 2])\nlhs_1 = np.array([[1, 0], [0, 1], [2, 1], [1, 1]])\nrhs_1 = np.array([100, 100, 200, 150])\n\n\ncost_1 correspond √† la matrice de co√ªt, i.e. les coefficients \\(M_1\\) et \\(M_2\\),\nlhs_11 correspond au premier membre de la matrice des contraintes,\nrhs_12 correspond au second membre de la matrice des contraintes.\n\nPr√©visualisons-les avec sympy.\n\ndisplay(sym.Matrix(cost_1))\ndisplay(sym.Matrix(lhs_1))\ndisplay(sym.Matrix(rhs_1))\n\n\\(\\displaystyle \\left[\\begin{matrix}3\\\\2\\end{matrix}\\right]\\)\n\n\n\\(\\displaystyle \\left[\\begin{matrix}1 & 0\\\\0 & 1\\\\2 & 1\\\\1 & 1\\end{matrix}\\right]\\)\n\n\n\\(\\displaystyle \\left[\\begin{matrix}100\\\\100\\\\200\\\\150\\end{matrix}\\right]\\)\n\n\nPour r√©soudre le probl√®me, on peut utiliser la fonction linprog du submodule scipy.optimize, dont l‚Äôalgorithme effectue par d√©faut une minimisation.\nComme nous souhaitons plut√¥t maximiser la fonction objectif, il faut inverser le signe de la fonction de co√ªt.\n\nresult_1 = so.linprog(-cost_1, A_ub = lhs_1, b_ub = rhs_1, method = \"highs\")\n\nProfitons-en aussi pour cr√©er les fonctions :\n\ntotal_profit qui retourne le profit total optimal,\ndetails qui affiche le profit ainsi que les quantit√©s de voitures vendues.\n\n\n\nCode des fonctions\ndef total_profit(result: so._optimize.OptimizeResult, cost: np.ndarray) -&gt; np.float64:\n    \"\"\"Retourne le profit total en ‚Ç¨ li√© √† la vente de voitures.\"\"\"\n    return np.sum(result[\"x\"] * cost * 1000)\n\n\ndef details(result: so._optimize.OptimizeResult, cost: np.ndarray, types: list) -&gt; str:\n    \"\"\"\n    Affiche un message contenant le profit optimal r√©alis√©\n    ainsi que le nombre et le type de voiture vendues.\n    \"\"\"\n    profit = int(total_profit(result, cost))\n    message = f\"\"\"\nLe profit optimal r√©alis√© par [i]Car-Nivor[/i] est de [u]{profit}[/u] ‚Ç¨ par mois.\n    \n=&gt; Pour :\n    \n\"\"\"\n    for voiture, type_voiture in zip(result[\"x\"], types):\n        message += f\"- {voiture.astype(int)} voitures vendues de [red][b]Type {type_voiture}[/b][/red] \\n\"\n    return Panel(message)\n\n\nIl suffit maintenant d‚Äôappeler la fonction details pour obtenir les r√©sultats.\n\ndetails(result_1, cost_1, [\"A\", \"B\"])\n\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ Le profit optimal r√©alis√© par Car-Nivor est de 350000 ‚Ç¨ par mois.                                               ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ =&gt; Pour :                                                                                                       ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ - 50 voitures vendues de Type A                                                                                 ‚îÇ\n‚îÇ - 100 voitures vendues de Type B                                                                                ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n\n\n\n\n\n3.5 Effondrement de la demande en mod√®le B\n\nA cause de constructeurs chinois, Car-Nivor ne peut plus √©couler qu‚Äôun maximum de 50 voitures par mois.\n\n\n3.5.1 Graphique de la situation\n\n\nCode du graphique matplotlib\nplt.hlines(y=50, xmin=0, xmax=150, linewidth=2, color=\"r\", label=\"$x_2 ‚â§ 50$\", zorder=1)\nplt.vlines(\n    x=100, ymin=0, ymax=150, linewidth=2, color=\"m\", label=\"$x_1 ‚â§ 100$\", zorder=1\n)\n\nz = (325 - 3 * x) / 2\n\nplt.plot(x, y2, label=\"$2x_1 + x_2 \\leq 200 $\", zorder=1)\nplt.plot(x, y3, label=\"$x_1 + x_2 \\leq 150$\", zorder=1)\nplt.plot(x, z, label=\"$z = 325k$\", zorder=1)\n\nplt.scatter(\n    75, 50, color=\"black\", zorder=2\n)\n\nplt.fill_between(\n    [0, 75],\n    [49.9, 49.9],\n    [0, 0],\n    hatch=\"//\",\n    color=\"blue\",\n    alpha=0.2,\n    interpolate=True,\n    label=\"$admissible$\",\n)\n\nplt.fill_between(\n    x, y2, hatch=\"//\", color=\"blue\", where=y2 &lt; 50, alpha=0.2, interpolate=True\n)\n\nplt.xlabel(\"$x_1$\", fontsize=15)\nplt.ylabel(\"$x_2$\", fontsize=15)\nplt.ylim([0, 125])\nplt.xlim([0, 125])\nplt.title(\"Ensemble des solutions admissibles\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\nPour faire une r√©solution num√©rique , il suffit simplement de changer le second membre de la matrice des contraintes.\n\nrhs_2 = np.array([100, 50, 200, 150])\n\n\nresult_2 = so.linprog(-cost_1, A_ub = lhs_1, b_ub = rhs_2, method = \"highs\")\n\n\ndetails(result_2, cost_1, [\"A\", \"B\"])\n\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ Le profit optimal r√©alis√© par Car-Nivor est de 325000 ‚Ç¨ par mois.                                               ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ =&gt; Pour :                                                                                                       ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ - 75 voitures vendues de Type A                                                                                 ‚îÇ\n‚îÇ - 50 voitures vendues de Type B                                                                                 ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n\n\n\n\nOn voit qu‚Äôun effondrement de la demande en voiture de Type B entra√Æne une surproduction de voitures de Type A, mais que cette surproduction ne permet pas d‚Äôobtenir le profit optimal avant l‚Äôeffondrement de la demande de Type B.\n\n\n\n3.6 Analyse d√©taill√©e du probl√®me\nOn veut √©tudier graphiquement l‚Äô√©volution du profit en fonction du nombre maximal de voitures vendues de type B.\n\nPour faire ceci, je vais utiliser une boucle for et faire varier le second membre de la contrainte pour \\(x_2\\).\n\n\nlist_x2 = [x for x in range(0,101)]\ncost_2 = np.array ([3, 2])\nlhs_2 = np.array ([[1,0],[0,1],[2,1],[1,1]])\n\nx1_vente = list()\nx2_vente = list()\nprofit = list()\n\nfor x2_max in list_x2:\n    rhs_2 = np.array([100,x2_max,200,150])\n    max_bagnole = so.linprog(-cost_2, A_ub = lhs_2, b_ub = rhs_2, method = \"highs\")\n    x1_vente.append(max_bagnole[\"x\"][0])\n    x2_vente.append(max_bagnole[\"x\"][1])\n    profit.append(-max_bagnole[\"fun\"]*1000)\n\n\n\nCode du graphique matplotlib\nplt.plot(list_x2, profit)\nplt.xlabel(\"Valeur max de $x_2$\")\nplt.ylabel(\"Profit en ‚Ç¨\")\nplt.hlines(y=325000, xmin=0, xmax=50, linewidth=2, linestyles=\"--\", color=\"m\")\nplt.vlines(x=50, ymin=300000, ymax=325000, linewidth=2, linestyles=\"--\", color=\"m\")\n\nplt.hlines(y=350000, xmin=0, xmax=100, linewidth=2, linestyles=\"--\", color=\"m\")\nplt.vlines(x=100, ymin=300000, ymax=350000, linewidth=2, linestyles=\"--\", color=\"m\")\n\nplt.scatter(50, 325000, color=\"red\", zorder=2, label=\"œÄ2 = 325k\")\nplt.scatter(100, 350000, color=\"green\", zorder=2, label=\"œÄ1 = 350k\")\n\nplt.ylim([300000, 351000])\nplt.xlim([0, 105])\nplt.title(\n    f\"Profit optimal en fonction de la valeur de $x_2$ compris entre [{list_x2[0]}:{list_x2[-1]}] \"\n)\n\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0);\n\n\n\n\n\n\n\n\n\nOn remarque que le profit est croissant en fonction de la valeur maximale de \\(x_2\\) (c‚Äôest √† dire de voitures vendues de type B), ce dont on pouvait se douter √©tant donn√© les r√©sultats pr√©c√©dents."
  },
  {
    "objectID": "sections/projects/bagnoles.html#introduction-au-probl√®me-i",
    "href": "sections/projects/bagnoles.html#introduction-au-probl√®me-i",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "",
    "text": "L‚Äôentreprise Car-Nivor souhaite se lancer dans la production de voitures et a d√©j√† imagin√© plusieurs mod√®les. Elle commence par analyser le march√© avec les mod√®les Tiger (A) et Piranha (B).\nVoici les informations qui ressortent de cette analyse :\n\nLe mod√®le A lui apporte un b√©n√©fice de 3 000 ‚Ç¨ par unit√© vendue, tandis que le mod√®le B lui apporte un b√©n√©fice de 2 000 ‚Ç¨ par unit√© vendue.\nLa production d‚Äôune voiture de mod√®le A prend 2 heures tandis que celle d‚Äôune voiture de mod√®le B prend seulement 1 heure1.\nPour des raisons d‚Äôabsorption de march√©, Car-Nivor ne peut pas vendre plus de 100 mod√®les A, 100 mod√®les B et 150 voitures (A+B) au total par mois.\nEnfin, l‚Äôusine de production n‚Äôest disponible que 200 heures par mois."
  },
  {
    "objectID": "sections/projects/bagnoles.html#mod√©lisation-du-probl√®me-i",
    "href": "sections/projects/bagnoles.html#mod√©lisation-du-probl√®me-i",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "2 Mod√©lisation du probl√®me I",
    "text": "2 Mod√©lisation du probl√®me I\n\nAvant de se lancer t√™te baiss√©e dans l‚Äôutilisation d‚Äôun mod√®le de Boosting, r√©fl√©chissons un peu et posons-nous quelques questions.\n\n\nQuelles quantit√©s peut-on faire varier ? \\(\\Rightarrow\\) Les quantit√©s de mod√®les A et B.\nQue cherche-t-on √† optimiser ? \\(\\Rightarrow\\) Le profit de Car-Nivor.\nQuelles sont les contraintes du probl√®me ? \\(\\Rightarrow\\) Les contraintes de production et les contraintes de march√©\n\n\n\n\n\n\n\nNote\n\n\n\nOn voit en fait qu‚Äôon peut formuler cet √©nonc√© sous la forme d‚Äôun probl√®me d‚Äôoptimisation lin√©aire sous contraintes !\n\n\nPlus pr√©cis√©ment, on consid√®re les notations suivantes :\n\n\\(x_1\\) est la quantit√© vendue de mod√®le A,\n\\(x_2\\) est la quantit√© vendue de mod√®le B,\n\\(M_1\\) est le b√©n√©fice en k‚Ç¨ par unit√© vendue de mod√®le A,\n\\(M_2\\) est le b√©n√©fice en k‚Ç¨ par unit√© vendue de mod√®le B,\n\\(z\\) est le profit de Car-nivor, qu‚Äôon souhaite maximiser ‚Äì on parle de fonction objectif,\n\\(S\\) correspond √† l‚Äôensemble des contraintes du probl√®me.\n\n\n\\[\n\\max_{slc \\hspace{1mm} (S)} z = M_1x_1 + M_2x_2\n\\]\n\\[\n\\max_{slc \\hspace{1mm} (S)} z = 3x_1 + 2x_2\n\\]\n\\[\n(S) : \\left \\{\n\\begin{array}\\\\\n    x_1\\geq 0 \\hspace{0.1em} ; \\hspace{0.1em} x_2 \\geq 0\\\\\n    x_1 \\leq 100 \\\\\n    x_2 \\leq 100 \\\\\n    2x_1 + x_2 \\leq 200 \\\\\n    x_1 + x_2 \\leq 150\n         \\end{array}\n                        \\right.\n\\]\n\n\n\n\n\n\nInterpr√©tation des contraintes\n\n\n\n\nLa premi√®re contrainte indique qu‚Äôon ne peut pas produire de quantit√© n√©gative de voiture,\nLa seconde contrainte indique qu‚Äôon ne peut pas vendre plus de 100 mod√®les de type A,\nLa troisi√®me contrainte indique qu‚Äôon ne peut pas vendre plus de 100 mod√®les de type B,\nLa quatri√®me contrainte porte sur le temps de disponibilit√© de l‚Äôusine (200h),\nLa derni√®re contrainte indique qu‚Äôil est possible de produire au maximum 150 voitures de Type A ou B, et pas plus."
  },
  {
    "objectID": "sections/projects/bagnoles.html#r√©solution-du-probl√®me-i",
    "href": "sections/projects/bagnoles.html#r√©solution-du-probl√®me-i",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "3 R√©solution du probl√®me I",
    "text": "3 R√©solution du probl√®me I\n\n3.1 Import des librairies et configuration\n\nimport numpy as np\nimport scipy.optimize as so\nimport matplotlib.pyplot as plt\nfrom rich import print\nfrom rich.panel import Panel\nimport sympy as sym\nimport pandas as pd\nfrom math import pi\n\n\nplt.rcParams[\"figure.dpi\"] = 600\n\n\n\n3.2 Repr√©sentation graphique du probl√®me\n\nOn peut facilement repr√©senter dans un graph en \\(2D\\) l‚Äôensemble des contraintes et proposer une solution graphique au probl√®me puisqu‚Äôon dispose uniquement de 2 variables.\n\n\nx = np.linspace(0, 150, 500)\ny2 = 200 - 2 * x\ny3 = 150 - x\nz = (350 - 3 * x) / 2\n\n\n\nCode du graphique matplotlib\nplt.hlines(\n    y=100, xmin=0, xmax=150, linewidth=2, color=\"r\", label=\"$x_2 ‚â§ 100$\", zorder=1\n)\nplt.vlines(\n    x=100, ymin=0, ymax=150, linewidth=2, color=\"m\", label=\"$x_1 ‚â§ 100$\", zorder=1\n)\nplt.plot(x, y2, label=\"$2x_1 + x_2 \\leq 200 $\", zorder=1)\nplt.plot(x, y3, label=\"$x_1 + x_2 \\leq 150$\", zorder=1)\nplt.plot(x, z, label=\"$z = 350k$\", zorder=1)\n\nplt.scatter(50, 100, color=\"black\", zorder=2)\nplt.fill_between([0, 49.9], [100, 100], [0, 0], hatch=\"//\", color=\"blue\", alpha=0.2)\nplt.fill_between(\n    x,\n    np.min([y2, y3], axis=0),\n    where=y2 &lt; 100,\n    color=\"blue\",\n    alpha=0.2,\n    hatch=\"//\",\n    interpolate=True,\n    label=\"$admissible$\",\n)\n\nplt.xlabel(\"$x_1$\", fontsize=15)\nplt.ylabel(\"$x_2$\", fontsize=15)\nplt.ylim([0, 125])\nplt.xlim([0, 125])\n\nplt.title(\"Ensemble des solutions admissibles\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\n\n\n3.3 Mise sous forme normale du probl√®me\nOn a 4 √©quations dans le syst√®me des contraintes donc le rang est √©gal √† 4.\nLes variables positives sont appel√©es les variables de base :\n\\[\n\\beta = \\begin{pmatrix}\nX_1\\\\\nX_2\\\\\nX_3\\\\\nX_4\\\\\n\\end{pmatrix}\n\\]\nL‚Äôid√©e est ensuite d‚Äôexprimer les variables de base en fonction des variables hors base (\\(x_1\\) et \\(x_2\\)) \\(\\Rightarrow\\) On r√©√©crit donc le syst√®me comme suit :\n\\[\n\\left \\{\n\\begin{array}\\\\\n    X_1 = 100 - x_1\\\\\n    X_2 = 100 - x_2\\\\\n    X_3 = 200 - 2x_1 - x_2\\\\\n    X_4 = 150 - x_1 - x_2\\\\\n\\end{array}\n\\right.\n\\]\n\n\n3.4 R√©solution avec scipy\n\nLe submodule scipy.optimize fournit un ensemble de fonctions pour minimiser (ou maximiser) des fonctions objectif, possiblement sujettes √† certaines contraintes.\n\nIl faut d‚Äôabord √©crire les matrices de travail avec numpy.\n\ncost_1 = np.array([3, 2])\nlhs_1 = np.array([[1, 0], [0, 1], [2, 1], [1, 1]])\nrhs_1 = np.array([100, 100, 200, 150])\n\n\ncost_1 correspond √† la matrice de co√ªt, i.e. les coefficients \\(M_1\\) et \\(M_2\\),\nlhs_12 correspond au premier membre de la matrice des contraintes,\nrhs_13 correspond au second membre de la matrice des contraintes.\n\nPr√©visualisons-les avec sympy.\n\ndisplay(sym.Matrix(cost_1))\ndisplay(sym.Matrix(lhs_1))\ndisplay(sym.Matrix(rhs_1))\n\n\\(\\displaystyle \\left[\\begin{matrix}3\\\\2\\end{matrix}\\right]\\)\n\n\n\\(\\displaystyle \\left[\\begin{matrix}1 & 0\\\\0 & 1\\\\2 & 1\\\\1 & 1\\end{matrix}\\right]\\)\n\n\n\\(\\displaystyle \\left[\\begin{matrix}100\\\\100\\\\200\\\\150\\end{matrix}\\right]\\)\n\n\nPour r√©soudre le probl√®me, on peut utiliser la fonction linprog du submodule scipy.optimize, dont l‚Äôalgorithme effectue par d√©faut une minimisation.\nComme nous souhaitons plut√¥t maximiser la fonction objectif, il faut inverser le signe de la fonction de co√ªt.\n\nresult_1 = so.linprog(-cost_1, A_ub=lhs_1, b_ub=rhs_1, method=\"highs\")\n\nProfitons-en aussi pour cr√©er les fonctions :\n\ntotal_profit qui retourne le profit total optimal,\ndetails qui affiche le profit ainsi que les quantit√©s de voitures vendues.\n\n\n\nCode des fonctions\ndef total_profit(result: so._optimize.OptimizeResult, cost: np.ndarray) -&gt; np.float64:\n\n    \"\"\"Retourne le profit total en ‚Ç¨ li√© √† la vente de voitures.\"\"\"\n\n    return np.sum(result[\"x\"] * cost * 1000)\n\n\ndef details(result: so._optimize.OptimizeResult, cost: np.ndarray, types: list) -&gt; str:\n    \"\"\"\n    Affiche un message contenant le profit optimal r√©alis√©\n    ainsi que le nombre et le type de voiture vendues.\n    \"\"\"\n    profit = int(total_profit(result, cost))\n    message = f\"\"\"\nLe profit optimal r√©alis√© par [i]Car-Nivor[/i] est de [u]{profit}[/u] ‚Ç¨ par mois.\n    \n=&gt; Pour :\n    \n\"\"\"\n    for voiture, type_voiture in zip(result[\"x\"], types):\n        message += f\"- {voiture.astype(int)} voitures vendues de [red][b]Type {type_voiture}[/b][/red] \\n\"\n    return Panel(message)\n\n\nIl suffit maintenant d‚Äôappeler la fonction details pour obtenir les r√©sultats.\n\ndetails(result_1, cost_1, [\"A\", \"B\"])\n\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ Le profit optimal r√©alis√© par Car-Nivor est de 350000 ‚Ç¨ par mois.                                               ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ =&gt; Pour :                                                                                                       ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ - 50 voitures vendues de Type A                                                                                 ‚îÇ\n‚îÇ - 100 voitures vendues de Type B                                                                                ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n\n\n\n\n\n3.5 Effondrement de la demande en mod√®le B\n\nA cause de constructeurs chinois, Car-Nivor ne peut plus √©couler qu‚Äôun maximum de 50 voitures par mois.\n\n\n3.5.1 Graphique de la situation\n\n\nCode du graphique matplotlib\nplt.hlines(y=50, xmin=0, xmax=150, linewidth=2, color=\"r\", label=\"$x_2 ‚â§ 50$\", zorder=1)\nplt.vlines(\n    x=100, ymin=0, ymax=150, linewidth=2, color=\"m\", label=\"$x_1 ‚â§ 100$\", zorder=1\n)\n\nz = (325 - 3 * x) / 2\n\nplt.plot(x, y2, label=\"$2x_1 + x_2 \\leq 200 $\", zorder=1)\nplt.plot(x, y3, label=\"$x_1 + x_2 \\leq 150$\", zorder=1)\nplt.plot(x, z, label=\"$z = 325k$\", zorder=1)\n\nplt.scatter(75, 50, color=\"black\", zorder=2)\n\nplt.fill_between(\n    [0, 75],\n    [49.9, 49.9],\n    [0, 0],\n    hatch=\"//\",\n    color=\"blue\",\n    alpha=0.2,\n    interpolate=True,\n    label=\"$admissible$\",\n)\n\nplt.fill_between(\n    x, y2, hatch=\"//\", color=\"blue\", where=y2 &lt; 50, alpha=0.2, interpolate=True\n)\n\nplt.xlabel(\"$x_1$\", fontsize=15)\nplt.ylabel(\"$x_2$\", fontsize=15)\nplt.ylim([0, 125])\nplt.xlim([0, 125])\nplt.title(\"Ensemble des solutions admissibles\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\nPour une r√©solution num√©rique , il suffit simplement de changer le second membre de la matrice des contraintes.\n\nrhs_2 = np.array([100, 50, 200, 150])\n\n\nresult_2 = so.linprog(-cost_1, A_ub=lhs_1, b_ub=rhs_2, method=\"highs\")\n\n\ndetails(result_2, cost_1, [\"A\", \"B\"])\n\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ Le profit optimal r√©alis√© par Car-Nivor est de 325000 ‚Ç¨ par mois.                                               ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ =&gt; Pour :                                                                                                       ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ - 75 voitures vendues de Type A                                                                                 ‚îÇ\n‚îÇ - 50 voitures vendues de Type B                                                                                 ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n\n\n\n\nOn voit qu‚Äôun effondrement de la demande en voiture de Type B entra√Æne une surproduction de voitures de Type A, mais que cette surproduction ne permet pas d‚Äôobtenir le profit optimal avant l‚Äôeffondrement de la demande de Type B.\n\n\n\n3.6 Analyse d√©taill√©e du probl√®me\nOn veut √©tudier graphiquement l‚Äô√©volution du profit en fonction du nombre maximal de voitures vendues de type B.\n\nPour faire ceci, je vais utiliser une boucle for et faire varier le second membre de la contrainte pour \\(x_2\\).\n\n\nlist_x2 = [x for x in range(0, 101)]\ncost_2 = np.array([3, 2])\nlhs_2 = np.array([[1, 0], [0, 1], [2, 1], [1, 1]])\n\nx1_vente = list()\nx2_vente = list()\nprofit = list()\n\nfor x2_max in list_x2:\n    rhs_2 = np.array([100, x2_max, 200, 150])\n    max_bagnole = so.linprog(-cost_2, A_ub=lhs_2, b_ub=rhs_2, method=\"highs\")\n    x1_vente.append(max_bagnole[\"x\"][0])\n    x2_vente.append(max_bagnole[\"x\"][1])\n    profit.append(-max_bagnole[\"fun\"] * 1000)\n\n\n\nCode du graphique matplotlib\nplt.plot(list_x2, profit)\nplt.xlabel(\"Valeur max de $x_2$\")\nplt.ylabel(\"Profit en ‚Ç¨\")\nplt.hlines(y=325000, xmin=0, xmax=50, linewidth=2, linestyles=\"--\", color=\"m\")\nplt.vlines(x=50, ymin=300000, ymax=325000, linewidth=2, linestyles=\"--\", color=\"m\")\n\nplt.hlines(y=350000, xmin=0, xmax=100, linewidth=2, linestyles=\"--\", color=\"m\")\nplt.vlines(x=100, ymin=300000, ymax=350000, linewidth=2, linestyles=\"--\", color=\"m\")\n\nplt.scatter(50, 325000, color=\"red\", zorder=2, label=\"œÄ2 = 325k\")\nplt.scatter(100, 350000, color=\"green\", zorder=2, label=\"œÄ1 = 350k\")\n\nplt.ylim([300000, 351000])\nplt.xlim([0, 105])\nplt.title(\n    f\"Profit optimal en fonction de la valeur de $x_2$ compris entre [{list_x2[0]}:{list_x2[-1]}] \"\n)\n\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\nOn remarque que le profit est croissant en fonction de la valeur maximale de \\(x_2\\) (c‚Äôest √† dire de voitures vendues de type B), ce dont on pouvait se douter √©tant donn√© les r√©sultats pr√©c√©dents."
  },
  {
    "objectID": "sections/projects/bagnoles.html#introduction-au-probl√®me-ii",
    "href": "sections/projects/bagnoles.html#introduction-au-probl√®me-ii",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "4 Introduction au probl√®me II",
    "text": "4 Introduction au probl√®me II\nUn manager propose de dessiner deux nouveaux mod√®les de luxe pour se distinguer des constructeurs chinois : le Lion (C) et le Shark (D). Les b√©n√©fices de ces deux mod√®les sont de respectivement 5 000 et 10 000 ‚Ç¨.\nN√©anmoins, la demande de ces mod√®les de luxe est assez limit√©e : 30 unit√©s au total.\n\nLa demande mensuelle totale de voiture est toujours de 150.\nLa disponibilit√© de l‚Äôusine est toujours de 200 heures.\nLe mod√®le C prend au total 5 heures de construction tandis que le mod√®le D en prend 8."
  },
  {
    "objectID": "sections/projects/bagnoles.html#mod√©lisation-du-probl√®me-ii",
    "href": "sections/projects/bagnoles.html#mod√©lisation-du-probl√®me-ii",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "5 Mod√©lisation du probl√®me II",
    "text": "5 Mod√©lisation du probl√®me II\nOn consid√®re les notations suivantes :\n\n\\(x_1, x_2, x_3, x_4\\) sont les quantit√©s vendues de mod√®le A, B, C, D,\n\\(M_1, M_2, M_3, M_4\\) est le b√©n√©fice en k‚Ç¨ par unit√© vendue de mod√®le A, B, C, D,\n\\(z\\) est le profit de Car-nivor, qu‚Äôon souhaite maximiser ‚Äì on parle de fonction objectif,\n\\(S\\) correspond √† l‚Äôensemble des contraintes du probl√®me.\n\n\n\\[\n\\max_{slc \\hspace{1mm} (S)} z = 3x_1 + 2x_2 + 5x_3 + 10x_4\n\\]\n\\[\n(S) : \\left \\{\n\\begin{array}\\\\\n    x_1\\geq 0 \\hspace{0.1em} ; \\hspace{0.1em} x_2 \\geq 0\\\\\n    x_1 \\leq 100 \\\\\n    x_2 \\leq 100 \\\\\n    x_3 \\leq 30 \\\\\n    x_4 \\leq 30 \\\\\n    2x_1 + x_2 + 5x_3 + 8x_4\\leq 200 \\\\\n    x_1 + x_2 + x_3 + x_4 \\leq 150\n\\end{array}\n\\right.\n\\]"
  },
  {
    "objectID": "sections/projects/bagnoles.html#r√©solution-du-probl√®me-ii",
    "href": "sections/projects/bagnoles.html#r√©solution-du-probl√®me-ii",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "6 R√©solution du probl√®me II",
    "text": "6 R√©solution du probl√®me II\n\n\n\n\n\n\nAttention\n\n\n\nNous ne pouvons plus repr√©senter graphiquement la situation, la r√©solution va donc uniquement se poursuivre en utilisant scipy.\n\n\n\n6.1 R√©solution avec scipy\nOn proc√®de aux m√™mes √©tapes que dans la section pr√©c√©dente en √©crivant les matrices de travail avec numpy.\n\ncost_3 = np.array([3, 2, 5, 10])\nlhs_3 = np.array(\n    [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1], [2, 1, 5, 8], [1, 1, 1, 1]]\n)\nrhs_3 = np.array([100, 100, 30, 30, 200, 150])\n\n\nresult_3 = so.linprog(-cost_3, A_ub=lhs_3, b_ub=rhs_3, method=\"highs\")\n\n\ndetails(result_3, cost_3, [\"A\", \"B\", \"C\", \"D\"])\n\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ Le profit optimal r√©alis√© par Car-Nivor est de 350000 ‚Ç¨ par mois.                                               ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ =&gt; Pour :                                                                                                       ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ - 50 voitures vendues de Type A                                                                                 ‚îÇ\n‚îÇ - 100 voitures vendues de Type B                                                                                ‚îÇ\n‚îÇ - 0 voitures vendues de Type C                                                                                  ‚îÇ\n‚îÇ - 0 voitures vendues de Type D                                                                                  ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n\n\n\n\\(\\Rightarrow\\) Dans cette configuration, Car-Nivor n‚Äôa pas int√©r√™t √† produire des voitures de luxe de Type C ou D.\n\n\n6.2 La disponibilit√© de l‚Äôusine double\n\nDans le cadre du Plan de relance pour l‚Äôindustrie, des aides cons√©quentes permettent √† Car-Nivor de doubler le temps de disponibilit√© de l‚Äôusine pour atteindre 400 heures.\n\nPour r√©soudre le probl√®me il suffit simplement de changer le second membre de la matrice des contraintes en rempla√ßant 200 par 400.\n\nrhs_4 = np.array([100, 100, 30, 30, 400, 150])\n\n\nresult_4 = so.linprog(-cost_3, A_ub=lhs_3, b_ub=rhs_4, method=\"highs\")\n\n\ndetails(result_4, cost_3, [\"A\", \"B\", \"C\", \"D\"])\n\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ Le profit optimal r√©alis√© par Car-Nivor est de 580000 ‚Ç¨ par mois.                                               ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ =&gt; Pour :                                                                                                       ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ - 40 voitures vendues de Type A                                                                                 ‚îÇ\n‚îÇ - 80 voitures vendues de Type B                                                                                 ‚îÇ\n‚îÇ - 0 voitures vendues de Type C                                                                                  ‚îÇ\n‚îÇ - 30 voitures vendues de Type D                                                                                 ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nUn doublement de la disponibilit√© horaire entra√Æne la production de voitures de luxe de type D, ainsi qu‚Äôune augmentation substantielle du profit de Car-Nivor.\n\n\n\n\n6.3 Impact du temps de disponibilit√© de l‚Äôusine sur la strat√©gie de l‚Äôentreprise.\n\nEtudions l‚Äôimpact du temps de disponibilit√© en utilisant des tranches de 100h de disponibilit√© mensuelle.\n\n\nlist_time = [100 * hours for hours in range(1, 11)]\ncost_4 = np.array([3, 2, 5, 10])\nlhs_4 = np.array(\n    [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1], [2, 1, 5, 8], [1, 1, 1, 1]]\n)\n\nx1_vente = list()\nx2_vente = list()\nx3_vente = list()\nx4_vente = list()\nprofit = list()\n\nfor hours in list_time:\n    rhs_4 = np.array([100, 100, 30, 30, hours, 150])\n    max_bagnole = so.linprog(-cost_4, A_ub=lhs_4, b_ub=rhs_4, method=\"highs\")\n    x1_vente.append(max_bagnole[\"x\"][0])\n    x2_vente.append(max_bagnole[\"x\"][1])\n    x3_vente.append(max_bagnole[\"x\"][2])\n    x4_vente.append(max_bagnole[\"x\"][3])\n    profit.append(-max_bagnole[\"fun\"] * 1000)\n\n\n\nCode du graphique matplotlib\nplt.plot(list_time, profit)\nplt.scatter(600, profit[5], color=\"green\", zorder=2, label=\"œÄ seuil = 720k\")\n\nplt.xlabel(\"Disponibilit√© horaire\")\nplt.ylabel(\"Profit en ‚Ç¨\")\nplt.ylim([180000, 775000])\nplt.xlim([90, 800])\nplt.title(\n    f\"Profit optimal en fonction de la disponibilit√© horaire de l'usine \\n compris entre [{list_time[0]}:{list_time[-1]}] heures\"\n)\n\nplt.hlines(\n    y=profit[5], xmin=0, xmax=600, linewidth=2, linestyles=\"--\", color=\"m\", zorder=1\n)\nplt.vlines(\n    x=600, ymin=0, ymax=profit[5], linewidth=2, linestyles=\"--\", color=\"m\", zorder=1\n)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\nGraphiquement, on remarque qu‚Äôil y n‚Äôy a plus int√©r√™t √† augmenter la disponibilit√© horaire √† partir de 600 heures puisqu‚Äôon satisfait la contrainte de la demande de voiture \\(D_{x_i} = 150\\) et que le profit n‚Äôaugmente plus √† partir de ce point.\nOn peut, en plus, repr√©senter le nombre de voitures vendues selon leur type en faisant varier la disponibilit√© horaire.\n\n\nCode du graphique matplotlib\nplt.plot(list_time, x1_vente, label=\"Type A\")\nplt.plot(list_time, x2_vente, label=\"Type B\")\nplt.plot(list_time, x3_vente, label=\"Type C\")\nplt.plot(list_time, x4_vente, label=\"Type D\")\nplt.xlabel(\"Disponibilit√© horaire\")\nplt.ylabel(\"Nombre de voitures vendues\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nSi initialement les voitures de type B sont favoris√©es, on voit que Car-Nivor en produit de moins en moins pour focaliser sa production sur les type A, et d√®s qu‚Äôelle le peut, elle commence √† produire des voitures de Type D. Pour finir, elle choisit de compl√©ter sa production avec des voitures de Type C."
  },
  {
    "objectID": "sections/projects/bagnoles.html#introduction-au-probl√®me-iii",
    "href": "sections/projects/bagnoles.html#introduction-au-probl√®me-iii",
    "title": "üöó ‚Äì Optimisation Lin√©aire",
    "section": "7 Introduction au probl√®me III",
    "text": "7 Introduction au probl√®me III\n\nL‚Äôusine de production fait remarquer √† la direction que les flux de mati√®res premi√®res sont tendus et demande de les prendre en compte pour faire des mod√®les plus r√©alistes. Pour ce faire, elle cr√©e le tableau suivant :\n\n\n\n\n\n\n\n\n\n\n\nType A\nType B\nType C\nType D\nLimite des stocks mensuels\n\n\n\n\nFer\n2.0\n1.0\n4.0\n2.0\n125\n\n\nCuivre\n0.2\n0.2\n0.5\n1.0\n55\n\n\nAluminium\n1.0\n1.0\n2.0\n2.0\n300\n\n\nAcier\n2.0\n2.0\n1.0\n2.0\n100\n\n\nCaoutchouc\n1.0\n1.0\n1.5\n0.8\n60\n\n\nTerres rares\n0.0\n0.0\n2.0\n2.0\n50\n\n\nVerre\n1.0\n1.0\n1.0\n1.2\n100\n\n\nTissu\n2.0\n2.0\n1.0\n1.0\n220\n\n\nCuir\n0.0\n0.0\n1.0\n1.0\n30\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSection en travaux\n\n\n\nüê±‚ÄçüöÄ Patience, √ßa arrive‚Ä¶"
  },
  {
    "objectID": "sections/projects/voitures.html",
    "href": "sections/projects/voitures.html",
    "title": "üöó Optimisation Lin√©aire",
    "section": "",
    "text": "L‚Äôentreprise Car-Nivor souhaite se lancer dans la production de voitures et a d√©j√† imagin√© plusieurs mod√®les. Elle commence par analyser le march√© avec les mod√®les Tiger (A) et Piranha (B).\nVoici les informations qui ressortent de cette analyse :\n\nLe mod√®le A lui apporte un b√©n√©fice de 3 000 ‚Ç¨ par unit√© vendue, tandis que le mod√®le B lui apporte un b√©n√©fice de 2 000 ‚Ç¨ par unit√© vendue.\nLa production d‚Äôune voiture de mod√®le A prend 2 heures tandis que celle d‚Äôune voiture de mod√®le B prend seulement 1 heure1.\nPour des raisons d‚Äôabsorption de march√©, Car-Nivor ne peut pas vendre plus de 100 mod√®les A, 100 mod√®les B et 150 voitures (A+B) au total par mois.\nEnfin, l‚Äôusine de production n‚Äôest disponible que 200 heures par mois."
  },
  {
    "objectID": "sections/projects/voitures.html#introduction-au-probl√®me-i",
    "href": "sections/projects/voitures.html#introduction-au-probl√®me-i",
    "title": "üöó Optimisation Lin√©aire",
    "section": "",
    "text": "L‚Äôentreprise Car-Nivor souhaite se lancer dans la production de voitures et a d√©j√† imagin√© plusieurs mod√®les. Elle commence par analyser le march√© avec les mod√®les Tiger (A) et Piranha (B).\nVoici les informations qui ressortent de cette analyse :\n\nLe mod√®le A lui apporte un b√©n√©fice de 3 000 ‚Ç¨ par unit√© vendue, tandis que le mod√®le B lui apporte un b√©n√©fice de 2 000 ‚Ç¨ par unit√© vendue.\nLa production d‚Äôune voiture de mod√®le A prend 2 heures tandis que celle d‚Äôune voiture de mod√®le B prend seulement 1 heure1.\nPour des raisons d‚Äôabsorption de march√©, Car-Nivor ne peut pas vendre plus de 100 mod√®les A, 100 mod√®les B et 150 voitures (A+B) au total par mois.\nEnfin, l‚Äôusine de production n‚Äôest disponible que 200 heures par mois."
  },
  {
    "objectID": "sections/projects/voitures.html#mod√©lisation-du-probl√®me-i",
    "href": "sections/projects/voitures.html#mod√©lisation-du-probl√®me-i",
    "title": "üöó Optimisation Lin√©aire",
    "section": "2 Mod√©lisation du probl√®me I",
    "text": "2 Mod√©lisation du probl√®me I\n\nAvant de se lancer t√™te baiss√©e dans l‚Äôutilisation d‚Äôun mod√®le de Boosting, r√©fl√©chissons un peu et posons-nous quelques questions.\n\n\nQuelles quantit√©s peut-on faire varier ? \\(\\Rightarrow\\) Les quantit√©s de mod√®les A et B.\nQue cherche-t-on √† optimiser ? \\(\\Rightarrow\\) Le profit de Car-Nivor.\nQuelles sont les contraintes du probl√®me ? \\(\\Rightarrow\\) Les contraintes de production et les contraintes de march√©\n\n\n\n\n\n\n\nNote\n\n\n\nOn voit en fait qu‚Äôon peut formuler cet √©nonc√© sous la forme d‚Äôun probl√®me d‚Äôoptimisation lin√©aire sous contraintes !\n\n\nPlus pr√©cis√©ment, on consid√®re les notations suivantes :\n\n\\(x_1\\) est la quantit√© vendue de mod√®le A,\n\\(x_2\\) est la quantit√© vendue de mod√®le B,\n\\(M_1\\) est le b√©n√©fice en k‚Ç¨ par unit√© vendue de mod√®le A,\n\\(M_2\\) est le b√©n√©fice en k‚Ç¨ par unit√© vendue de mod√®le B,\n\\(z\\) est le profit de Car-nivor, qu‚Äôon souhaite maximiser ‚Äì on parle de fonction objectif,\n\\(S\\) correspond √† l‚Äôensemble des contraintes du probl√®me.\n\n\n\\[\n\\max_{slc \\hspace{1mm} (S)} z = M_1x_1 + M_2x_2\n\\]\n\\[\n\\max_{slc \\hspace{1mm} (S)} z = 3x_1 + 2x_2\n\\]\n\\[\n(S) : \\left \\{\n\\begin{array}\\\\\n    x_1\\geq 0 \\hspace{0.1em} ; \\hspace{0.1em} x_2 \\geq 0\\\\\n    x_1 \\leq 100 \\\\\n    x_2 \\leq 100 \\\\\n    2x_1 + x_2 \\leq 200 \\\\\n    x_1 + x_2 \\leq 150\n         \\end{array}\n                        \\right.\n\\]\n\n\n\n\n\n\nInterpr√©tation des contraintes\n\n\n\n\nLa premi√®re contrainte indique qu‚Äôon ne peut pas produire de quantit√© n√©gative de voiture,\nLa seconde contrainte indique qu‚Äôon ne peut pas vendre plus de 100 mod√®les de type A,\nLa troisi√®me contrainte indique qu‚Äôon ne peut pas vendre plus de 100 mod√®les de type B,\nLa quatri√®me contrainte porte sur le temps de disponibilit√© de l‚Äôusine (200h),\nLa derni√®re contrainte indique qu‚Äôil est possible de produire au maximum 150 voitures de Type A ou B, et pas plus."
  },
  {
    "objectID": "sections/projects/voitures.html#r√©solution-du-probl√®me-i",
    "href": "sections/projects/voitures.html#r√©solution-du-probl√®me-i",
    "title": "üöó Optimisation Lin√©aire",
    "section": "3 R√©solution du probl√®me I",
    "text": "3 R√©solution du probl√®me I\n\n3.1 Import des librairies et configuration\n\nimport numpy as np\nimport scipy.optimize as so\nimport matplotlib.pyplot as plt\nfrom rich import print\nfrom rich.panel import Panel\nimport sympy as sym\nimport pandas as pd\nfrom math import pi\n\n\nplt.rcParams[\"figure.dpi\"] = 600\n\n\n\n3.2 Repr√©sentation graphique du probl√®me\n\nOn peut facilement repr√©senter dans un graph en \\(2D\\) l‚Äôensemble des contraintes et proposer une solution graphique au probl√®me puisqu‚Äôon dispose uniquement de 2 variables.\n\n\nx = np.linspace(0, 150, 500)\ny2 = 200 - 2 * x\ny3 = 150 - x\nz = (350 - 3 * x) / 2\n\n\n\nCode du graphique matplotlib\nplt.hlines(\n    y=100, xmin=0, xmax=150, linewidth=2, color=\"r\", label=\"$x_2 ‚â§ 100$\", zorder=1\n)\nplt.vlines(\n    x=100, ymin=0, ymax=150, linewidth=2, color=\"m\", label=\"$x_1 ‚â§ 100$\", zorder=1\n)\nplt.plot(x, y2, label=\"$2x_1 + x_2 \\leq 200 $\", zorder=1)\nplt.plot(x, y3, label=\"$x_1 + x_2 \\leq 150$\", zorder=1)\nplt.plot(x, z, label=\"$z = 350k$\", zorder=1)\n\nplt.scatter(50, 100, color=\"black\", zorder=2)\nplt.fill_between([0, 49.9], [100, 100], [0, 0], hatch=\"//\", color=\"blue\", alpha=0.2)\nplt.fill_between(\n    x,\n    np.min([y2, y3], axis=0),\n    where=y2 &lt; 100,\n    color=\"blue\",\n    alpha=0.2,\n    hatch=\"//\",\n    interpolate=True,\n    label=\"$admissible$\",\n)\n\nplt.xlabel(\"$x_1$\", fontsize=15)\nplt.ylabel(\"$x_2$\", fontsize=15)\nplt.ylim([0, 125])\nplt.xlim([0, 125])\n\nplt.title(\"Ensemble des solutions admissibles\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\n\n\n3.3 Mise sous forme normale du probl√®me\nOn a 4 √©quations dans le syst√®me des contraintes donc le rang est √©gal √† 4.\nLes variables positives sont appel√©es les variables de base :\n\\[\n\\beta = \\begin{pmatrix}\nX_1\\\\\nX_2\\\\\nX_3\\\\\nX_4\\\\\n\\end{pmatrix}\n\\]\nL‚Äôid√©e est ensuite d‚Äôexprimer les variables de base en fonction des variables hors base (\\(x_1\\) et \\(x_2\\)) \\(\\Rightarrow\\) On r√©√©crit donc le syst√®me comme suit :\n\\[\n\\left \\{\n\\begin{array}\\\\\n    X_1 = 100 - x_1\\\\\n    X_2 = 100 - x_2\\\\\n    X_3 = 200 - 2x_1 - x_2\\\\\n    X_4 = 150 - x_1 - x_2\\\\\n\\end{array}\n\\right.\n\\]\n\n\n3.4 R√©solution avec scipy\n\nLe submodule scipy.optimize fournit un ensemble de fonctions pour minimiser (ou maximiser) des fonctions objectif, possiblement sujettes √† certaines contraintes.\n\nIl faut d‚Äôabord √©crire les matrices de travail avec numpy.\n\ncost_1 = np.array([3, 2])\nlhs_1 = np.array([[1, 0], [0, 1], [2, 1], [1, 1]])\nrhs_1 = np.array([100, 100, 200, 150])\n\n\ncost_1 correspond √† la matrice de co√ªt, i.e. les coefficients \\(M_1\\) et \\(M_2\\),\nlhs_12 correspond au premier membre de la matrice des contraintes,\nrhs_13 correspond au second membre de la matrice des contraintes.\n\nPr√©visualisons-les avec sympy.\n\ndisplay(sym.Matrix(cost_1))\ndisplay(sym.Matrix(lhs_1))\ndisplay(sym.Matrix(rhs_1))\n\n\\(\\displaystyle \\left[\\begin{matrix}3\\\\2\\end{matrix}\\right]\\)\n\n\n\\(\\displaystyle \\left[\\begin{matrix}1 & 0\\\\0 & 1\\\\2 & 1\\\\1 & 1\\end{matrix}\\right]\\)\n\n\n\\(\\displaystyle \\left[\\begin{matrix}100\\\\100\\\\200\\\\150\\end{matrix}\\right]\\)\n\n\nPour r√©soudre le probl√®me, on peut utiliser la fonction linprog du submodule scipy.optimize, dont l‚Äôalgorithme effectue par d√©faut une minimisation.\nComme nous souhaitons plut√¥t maximiser la fonction objectif, il faut inverser le signe de la fonction de co√ªt.\n\nresult_1 = so.linprog(-cost_1, A_ub=lhs_1, b_ub=rhs_1, method=\"highs\")\n\nProfitons-en aussi pour cr√©er les fonctions :\n\ntotal_profit qui retourne le profit total optimal,\ndetails qui affiche le profit ainsi que les quantit√©s de voitures vendues.\n\n\n\nCode des fonctions\ndef total_profit(result: so._optimize.OptimizeResult, cost: np.ndarray) -&gt; np.float64:\n\n    \"\"\"Retourne le profit total en ‚Ç¨ li√© √† la vente de voitures.\"\"\"\n\n    return np.sum(result[\"x\"] * cost * 1000)\n\n\ndef details(result: so._optimize.OptimizeResult, cost: np.ndarray, types: list) -&gt; str:\n    \"\"\"\n    Affiche un message contenant le profit optimal r√©alis√©\n    ainsi que le nombre et le type de voiture vendues.\n    \"\"\"\n    profit = int(total_profit(result, cost))\n    message = f\"\"\"\nLe profit optimal r√©alis√© par [i]Car-Nivor[/i] est de [u]{profit}[/u] ‚Ç¨ par mois.\n    \n=&gt; Pour :\n    \n\"\"\"\n    for voiture, type_voiture in zip(result[\"x\"], types):\n        message += f\"- {voiture.astype(int)} voitures vendues de [red][b]Type {type_voiture}[/b][/red] \\n\"\n    return Panel(message)\n\n\nIl suffit maintenant d‚Äôappeler la fonction details pour obtenir les r√©sultats.\n\ndetails(result_1, cost_1, [\"A\", \"B\"])\n\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ Le profit optimal r√©alis√© par Car-Nivor est de 350000 ‚Ç¨ par mois.                                               ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ =&gt; Pour :                                                                                                       ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ - 50 voitures vendues de Type A                                                                                 ‚îÇ\n‚îÇ - 100 voitures vendues de Type B                                                                                ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n\n\n\n\n\n3.5 Effondrement de la demande en mod√®le B\n\nA cause de constructeurs chinois, Car-Nivor ne peut plus √©couler qu‚Äôun maximum de 50 voitures par mois.\n\n\n3.5.1 Graphique de la situation\n\n\nCode du graphique matplotlib\nplt.hlines(y=50, xmin=0, xmax=150, linewidth=2, color=\"r\", label=\"$x_2 ‚â§ 50$\", zorder=1)\nplt.vlines(\n    x=100, ymin=0, ymax=150, linewidth=2, color=\"m\", label=\"$x_1 ‚â§ 100$\", zorder=1\n)\n\nz = (325 - 3 * x) / 2\n\nplt.plot(x, y2, label=\"$2x_1 + x_2 \\leq 200 $\", zorder=1)\nplt.plot(x, y3, label=\"$x_1 + x_2 \\leq 150$\", zorder=1)\nplt.plot(x, z, label=\"$z = 325k$\", zorder=1)\n\nplt.scatter(75, 50, color=\"black\", zorder=2)\n\nplt.fill_between(\n    [0, 75],\n    [49.9, 49.9],\n    [0, 0],\n    hatch=\"//\",\n    color=\"blue\",\n    alpha=0.2,\n    interpolate=True,\n    label=\"$admissible$\",\n)\n\nplt.fill_between(\n    x, y2, hatch=\"//\", color=\"blue\", where=y2 &lt; 50, alpha=0.2, interpolate=True\n)\n\nplt.xlabel(\"$x_1$\", fontsize=15)\nplt.ylabel(\"$x_2$\", fontsize=15)\nplt.ylim([0, 125])\nplt.xlim([0, 125])\nplt.title(\"Ensemble des solutions admissibles\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\nPour une r√©solution num√©rique , il suffit simplement de changer le second membre de la matrice des contraintes.\n\nrhs_2 = np.array([100, 50, 200, 150])\n\n\nresult_2 = so.linprog(-cost_1, A_ub=lhs_1, b_ub=rhs_2, method=\"highs\")\n\n\ndetails(result_2, cost_1, [\"A\", \"B\"])\n\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ Le profit optimal r√©alis√© par Car-Nivor est de 325000 ‚Ç¨ par mois.                                               ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ =&gt; Pour :                                                                                                       ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ - 75 voitures vendues de Type A                                                                                 ‚îÇ\n‚îÇ - 50 voitures vendues de Type B                                                                                 ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n\n\n\n\nOn voit qu‚Äôun effondrement de la demande en voiture de Type B entra√Æne une surproduction de voitures de Type A, mais que cette surproduction ne permet pas d‚Äôobtenir le profit optimal avant l‚Äôeffondrement de la demande de Type B.\n\n\n\n3.6 Analyse d√©taill√©e du probl√®me\nOn veut √©tudier graphiquement l‚Äô√©volution du profit en fonction du nombre maximal de voitures vendues de type B.\n\nPour faire ceci, je vais utiliser une boucle for et faire varier le second membre de la contrainte pour \\(x_2\\).\n\n\nlist_x2 = [x for x in range(0, 101)]\ncost_2 = np.array([3, 2])\nlhs_2 = np.array([[1, 0], [0, 1], [2, 1], [1, 1]])\n\nx1_vente = list()\nx2_vente = list()\nprofit = list()\n\nfor x2_max in list_x2:\n    rhs_2 = np.array([100, x2_max, 200, 150])\n    max_bagnole = so.linprog(-cost_2, A_ub=lhs_2, b_ub=rhs_2, method=\"highs\")\n    x1_vente.append(max_bagnole[\"x\"][0])\n    x2_vente.append(max_bagnole[\"x\"][1])\n    profit.append(-max_bagnole[\"fun\"] * 1000)\n\n\n\nCode du graphique matplotlib\nplt.plot(list_x2, profit)\nplt.xlabel(\"Valeur max de $x_2$\")\nplt.ylabel(\"Profit en ‚Ç¨\")\nplt.hlines(y=325000, xmin=0, xmax=50, linewidth=2, linestyles=\"--\", color=\"m\")\nplt.vlines(x=50, ymin=300000, ymax=325000, linewidth=2, linestyles=\"--\", color=\"m\")\n\nplt.hlines(y=350000, xmin=0, xmax=100, linewidth=2, linestyles=\"--\", color=\"m\")\nplt.vlines(x=100, ymin=300000, ymax=350000, linewidth=2, linestyles=\"--\", color=\"m\")\n\nplt.scatter(50, 325000, color=\"red\", zorder=2, label=\"œÄ2 = 325k\")\nplt.scatter(100, 350000, color=\"green\", zorder=2, label=\"œÄ1 = 350k\")\n\nplt.ylim([300000, 351000])\nplt.xlim([0, 105])\nplt.title(\n    f\"Profit optimal en fonction de la valeur de $x_2$ compris entre [{list_x2[0]}:{list_x2[-1]}] \"\n)\n\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\nOn remarque que le profit est croissant en fonction de la valeur maximale de \\(x_2\\) (c‚Äôest √† dire de voitures vendues de type B), ce dont on pouvait se douter √©tant donn√© les r√©sultats pr√©c√©dents."
  },
  {
    "objectID": "sections/projects/voitures.html#introduction-au-probl√®me-ii",
    "href": "sections/projects/voitures.html#introduction-au-probl√®me-ii",
    "title": "üöó Optimisation Lin√©aire",
    "section": "4 Introduction au probl√®me II",
    "text": "4 Introduction au probl√®me II\nUn manager propose de dessiner deux nouveaux mod√®les de luxe pour se distinguer des constructeurs chinois : le Lion (C) et le Shark (D). Les b√©n√©fices de ces deux mod√®les sont de respectivement 5 000 et 10 000 ‚Ç¨.\nN√©anmoins, la demande de ces mod√®les de luxe est assez limit√©e : 30 unit√©s au total.\n\nLa demande mensuelle totale de voiture est toujours de 150.\nLa disponibilit√© de l‚Äôusine est toujours de 200 heures.\nLe mod√®le C prend au total 5 heures de construction tandis que le mod√®le D en prend 8."
  },
  {
    "objectID": "sections/projects/voitures.html#mod√©lisation-du-probl√®me-ii",
    "href": "sections/projects/voitures.html#mod√©lisation-du-probl√®me-ii",
    "title": "üöó Optimisation Lin√©aire",
    "section": "5 Mod√©lisation du probl√®me II",
    "text": "5 Mod√©lisation du probl√®me II\nOn consid√®re les notations suivantes :\n\n\\(x_1, x_2, x_3, x_4\\) sont les quantit√©s vendues de mod√®le A, B, C, D,\n\\(M_1, M_2, M_3, M_4\\) est le b√©n√©fice en k‚Ç¨ par unit√© vendue de mod√®le A, B, C, D,\n\\(z\\) est le profit de Car-nivor, qu‚Äôon souhaite maximiser ‚Äì on parle de fonction objectif,\n\\(S\\) correspond √† l‚Äôensemble des contraintes du probl√®me.\n\n\n\\[\n\\max_{slc \\hspace{1mm} (S)} z = 3x_1 + 2x_2 + 5x_3 + 10x_4\n\\]\n\\[\n(S) : \\left \\{\n\\begin{array}\\\\\n    x_1\\geq 0 \\hspace{0.1em} ; \\hspace{0.1em} x_2 \\geq 0\\\\\n    x_1 \\leq 100 \\\\\n    x_2 \\leq 100 \\\\\n    x_3 \\leq 30 \\\\\n    x_4 \\leq 30 \\\\\n    2x_1 + x_2 + 5x_3 + 8x_4\\leq 200 \\\\\n    x_1 + x_2 + x_3 + x_4 \\leq 150\n\\end{array}\n\\right.\n\\]"
  },
  {
    "objectID": "sections/projects/voitures.html#r√©solution-du-probl√®me-ii",
    "href": "sections/projects/voitures.html#r√©solution-du-probl√®me-ii",
    "title": "üöó Optimisation Lin√©aire",
    "section": "6 R√©solution du probl√®me II",
    "text": "6 R√©solution du probl√®me II\n\n\n\n\n\n\nAttention\n\n\n\nNous ne pouvons plus repr√©senter graphiquement la situation, la r√©solution va donc uniquement se poursuivre en utilisant scipy.\n\n\n\n6.1 R√©solution avec scipy\nOn proc√®de aux m√™mes √©tapes que dans la section pr√©c√©dente en √©crivant les matrices de travail avec numpy.\n\ncost_3 = np.array([3, 2, 5, 10])\nlhs_3 = np.array(\n    [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1], [2, 1, 5, 8], [1, 1, 1, 1]]\n)\nrhs_3 = np.array([100, 100, 30, 30, 200, 150])\n\n\nresult_3 = so.linprog(-cost_3, A_ub=lhs_3, b_ub=rhs_3, method=\"highs\")\n\n\ndetails(result_3, cost_3, [\"A\", \"B\", \"C\", \"D\"])\n\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ Le profit optimal r√©alis√© par Car-Nivor est de 350000 ‚Ç¨ par mois.                                               ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ =&gt; Pour :                                                                                                       ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ - 50 voitures vendues de Type A                                                                                 ‚îÇ\n‚îÇ - 100 voitures vendues de Type B                                                                                ‚îÇ\n‚îÇ - 0 voitures vendues de Type C                                                                                  ‚îÇ\n‚îÇ - 0 voitures vendues de Type D                                                                                  ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n\n\n\n\\(\\Rightarrow\\) Dans cette configuration, Car-Nivor n‚Äôa pas int√©r√™t √† produire des voitures de luxe de Type C ou D.\n\n\n6.2 La disponibilit√© de l‚Äôusine double\n\nDans le cadre du Plan de relance pour l‚Äôindustrie, des aides cons√©quentes permettent √† Car-Nivor de doubler le temps de disponibilit√© de l‚Äôusine pour atteindre 400 heures.\n\nPour r√©soudre le probl√®me il suffit simplement de changer le second membre de la matrice des contraintes en rempla√ßant 200 par 400.\n\nrhs_4 = np.array([100, 100, 30, 30, 400, 150])\n\n\nresult_4 = so.linprog(-cost_3, A_ub=lhs_3, b_ub=rhs_4, method=\"highs\")\n\n\ndetails(result_4, cost_3, [\"A\", \"B\", \"C\", \"D\"])\n\n‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïÆ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ Le profit optimal r√©alis√© par Car-Nivor est de 580000 ‚Ç¨ par mois.                                               ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ =&gt; Pour :                                                                                                       ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚îÇ - 40 voitures vendues de Type A                                                                                 ‚îÇ\n‚îÇ - 80 voitures vendues de Type B                                                                                 ‚îÇ\n‚îÇ - 0 voitures vendues de Type C                                                                                  ‚îÇ\n‚îÇ - 30 voitures vendues de Type D                                                                                 ‚îÇ\n‚îÇ                                                                                                                 ‚îÇ\n‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ïØ\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nUn doublement de la disponibilit√© horaire entra√Æne la production de voitures de luxe de type D, ainsi qu‚Äôune augmentation substantielle du profit de Car-Nivor.\n\n\n\n\n6.3 Impact du temps de disponibilit√© de l‚Äôusine sur la strat√©gie de l‚Äôentreprise.\n\nEtudions l‚Äôimpact du temps de disponibilit√© en utilisant des tranches de 100h de disponibilit√© mensuelle.\n\n\nlist_time = [100 * hours for hours in range(1, 11)]\ncost_4 = np.array([3, 2, 5, 10])\nlhs_4 = np.array(\n    [[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, 1], [2, 1, 5, 8], [1, 1, 1, 1]]\n)\n\nx1_vente = list()\nx2_vente = list()\nx3_vente = list()\nx4_vente = list()\nprofit = list()\n\nfor hours in list_time:\n    rhs_4 = np.array([100, 100, 30, 30, hours, 150])\n    max_bagnole = so.linprog(-cost_4, A_ub=lhs_4, b_ub=rhs_4, method=\"highs\")\n    x1_vente.append(max_bagnole[\"x\"][0])\n    x2_vente.append(max_bagnole[\"x\"][1])\n    x3_vente.append(max_bagnole[\"x\"][2])\n    x4_vente.append(max_bagnole[\"x\"][3])\n    profit.append(-max_bagnole[\"fun\"] * 1000)\n\n\n\nCode du graphique matplotlib\nplt.plot(list_time, profit)\nplt.scatter(600, profit[5], color=\"green\", zorder=2, label=\"œÄ seuil = 720k\")\n\nplt.xlabel(\"Disponibilit√© horaire\")\nplt.ylabel(\"Profit en ‚Ç¨\")\nplt.ylim([180000, 775000])\nplt.xlim([90, 800])\nplt.title(\n    f\"Profit optimal en fonction de la disponibilit√© horaire de l'usine \\n compris entre [{list_time[0]}:{list_time[-1]}] heures\"\n)\n\nplt.hlines(\n    y=profit[5], xmin=0, xmax=600, linewidth=2, linestyles=\"--\", color=\"m\", zorder=1\n)\nplt.vlines(\n    x=600, ymin=0, ymax=profit[5], linewidth=2, linestyles=\"--\", color=\"m\", zorder=1\n)\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\nGraphiquement, on remarque qu‚Äôil y n‚Äôy a plus int√©r√™t √† augmenter la disponibilit√© horaire √† partir de 600 heures puisqu‚Äôon satisfait la contrainte de la demande de voiture \\(D_{x_i} = 150\\) et que le profit n‚Äôaugmente plus √† partir de ce point.\nOn peut, en plus, repr√©senter le nombre de voitures vendues selon leur type en faisant varier la disponibilit√© horaire.\n\n\nCode du graphique matplotlib\nplt.plot(list_time, x1_vente, label=\"Type A\")\nplt.plot(list_time, x2_vente, label=\"Type B\")\nplt.plot(list_time, x3_vente, label=\"Type C\")\nplt.plot(list_time, x4_vente, label=\"Type D\")\nplt.xlabel(\"Disponibilit√© horaire\")\nplt.ylabel(\"Nombre de voitures vendues\")\nplt.legend(bbox_to_anchor=(1.05, 1), loc=2, borderaxespad=0.0)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nSi initialement les voitures de type B sont favoris√©es, on voit que Car-Nivor en produit de moins en moins pour focaliser sa production sur les type A, et d√®s qu‚Äôelle le peut, elle commence √† produire des voitures de Type D. Pour finir, elle choisit de compl√©ter sa production avec des voitures de Type C."
  },
  {
    "objectID": "sections/projects/voitures.html#introduction-au-probl√®me-iii",
    "href": "sections/projects/voitures.html#introduction-au-probl√®me-iii",
    "title": "üöó Optimisation Lin√©aire",
    "section": "7 Introduction au probl√®me III",
    "text": "7 Introduction au probl√®me III\n\nL‚Äôusine de production fait remarquer √† la direction que les flux de mati√®res premi√®res sont tendus et demande de les prendre en compte pour faire des mod√®les plus r√©alistes. Pour ce faire, elle cr√©e le tableau suivant :\n\n\n\n\n\n\n\n\n\n\n\nType A\nType B\nType C\nType D\nLimite des stocks mensuels\n\n\n\n\nFer\n2.0\n1.0\n4.0\n2.0\n125\n\n\nCuivre\n0.2\n0.2\n0.5\n1.0\n55\n\n\nAluminium\n1.0\n1.0\n2.0\n2.0\n300\n\n\nAcier\n2.0\n2.0\n1.0\n2.0\n100\n\n\nCaoutchouc\n1.0\n1.0\n1.5\n0.8\n60\n\n\nTerres rares\n0.0\n0.0\n2.0\n2.0\n50\n\n\nVerre\n1.0\n1.0\n1.0\n1.2\n100\n\n\nTissu\n2.0\n2.0\n1.0\n1.0\n220\n\n\nCuir\n0.0\n0.0\n1.0\n1.0\n30\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSection en travaux\n\n\n\nüê±‚ÄçüöÄ Patience, √ßa arrive‚Ä¶"
  },
  {
    "objectID": "sections/projects/voitures.html#footnotes",
    "href": "sections/projects/voitures.html#footnotes",
    "title": "üöó Optimisation Lin√©aire",
    "section": "Notes de bas de page",
    "text": "Notes de bas de page\n\n\nCes valeurs sont clairement fantaisistes et ne refl√®tent pas du tout le temps moyen d‚Äôassemblage r√©el d‚Äôune voiture, qui d√©pend de nombreux facteurs.‚Ü©Ô∏é\nLHS = Left Hand Side / Premier membre d‚Äôune √©quation.‚Ü©Ô∏é\nRHS = Right Hand Side / Second membre d‚Äôune √©quation.‚Ü©Ô∏é"
  },
  {
    "objectID": "sections/projects/smart_specs.html",
    "href": "sections/projects/smart_specs.html",
    "title": " ShinyBricks",
    "section": "",
    "text": "heyyyyyyyyyyyyyyyyyyyyyyyyyyyy"
  },
  {
    "objectID": "sections/projects/energy.html#footnotes",
    "href": "sections/projects/energy.html#footnotes",
    "title": "Corentin DUCLOUX",
    "section": "Notes de bas de page",
    "text": "Notes de bas de page\n\n\nCentre National de Production d‚ÄôElectricit√©‚Ü©Ô∏é\nUne tranche correspond √† une unit√© de production √©lectrique comportant une chaudi√®re nucl√©aire + un groupe turbo-alternateur‚Ü©Ô∏é"
  }
]